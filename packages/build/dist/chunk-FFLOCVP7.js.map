{"version":3,"sources":["../src/classes/baseApp/cleanup.ts"],"sourcesContent":["import fs from \"fs\";\nimport { globSync } from \"glob\";\nimport path from \"path\";\nimport { BuildOutputData, PackageManagers } from \"../../types.js\";\nimport { ShellManager } from \"../baseClasses/shell.js\";\nimport { TargetPaths } from \"../paths.js\";\nimport { JsonFile } from \"@ulld/utilities/jsonFileClass\";\n\nexport class BuildCleanup extends ShellManager {\n    cleanupPaths: string[] = [\".pre-commit-config.yaml\"];\n    constructor(\n        public paths: TargetPaths,\n        public pkgManager: PackageManagers,\n    ) {\n        super();\n    }\n    private removeTempBuildDir() {\n        let filePaths = globSync(\"**\", {\n            cwd: this.paths.tempBuildFiles,\n        }).map((p) => path.join(this.paths.tempBuildFiles, p));\n        for (const f of filePaths) {\n            fs.rmSync(f, {\n                force: true,\n                recursive: true,\n            });\n        }\n        fs.rmdirSync(this.paths.tempBuildFiles);\n    }\n    private removePreCommitHooks() {\n        let commitHookRoot = this.paths.joinPath(\"projectRoot\", \".commitHooks\");\n        let files = globSync(\"**\", {\n            cwd: commitHookRoot,\n        }).map((f) => path.join(commitHookRoot, f));\n        for (const f of files) {\n            fs.rmSync(f);\n        }\n        fs.rmdirSync(commitHookRoot);\n    }\n    private removeCleanupPaths(){\n        for (const p of this.cleanupPaths) {\n            let _path = this.paths.joinPath(\"projectRoot\", p)\n            if(fs.existsSync(_path)){\n                fs.rmSync(_path)\n            }\n        }\n    }\n    getBuildOutputConfig(): BuildOutputData {\n        return {\n            buildOutputPath: this.paths.projectRoot\n        }\n    }\n\n    private setBuildOutputPath(){\n        let configPath = this.paths.xdgPaths.config()\n        let f = new JsonFile(path.join(configPath, \"buildData.json\"))\n        let data = this.getBuildOutputConfig()\n        f.writeContent(data)\n        this.log(\"Set output path successfully. You can now run Ulld from anywhere using the ulldRun command.\")\n    }\n    runCleanup() {\n        this.removeTempBuildDir();\n        this.removePreCommitHooks();\n        this.removeCleanupPaths();\n        this.setBuildOutputPath();\n    }\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAAA,OAAO,QAAQ;AAEf,OAAO,UAAU;AAIjB,SAAS,gBAAgB;AAElB,IAAM,eAAN,cAA2B,aAAa;AAAA,EAE3C,YACW,OACA,YACT;AACE,UAAM;AAHC;AACA;AAAA,EAGX;AAAA,EANA,eAAyB,CAAC,yBAAyB;AAAA,EAO3C,qBAAqB;AACzB,QAAI,YAAY,SAAS,MAAM;AAAA,MAC3B,KAAK,KAAK,MAAM;AAAA,IACpB,CAAC,EAAE,IAAI,CAAC,MAAM,KAAK,KAAK,KAAK,MAAM,gBAAgB,CAAC,CAAC;AACrD,eAAW,KAAK,WAAW;AACvB,SAAG,OAAO,GAAG;AAAA,QACT,OAAO;AAAA,QACP,WAAW;AAAA,MACf,CAAC;AAAA,IACL;AACA,OAAG,UAAU,KAAK,MAAM,cAAc;AAAA,EAC1C;AAAA,EACQ,uBAAuB;AAC3B,QAAI,iBAAiB,KAAK,MAAM,SAAS,eAAe,cAAc;AACtE,QAAI,QAAQ,SAAS,MAAM;AAAA,MACvB,KAAK;AAAA,IACT,CAAC,EAAE,IAAI,CAAC,MAAM,KAAK,KAAK,gBAAgB,CAAC,CAAC;AAC1C,eAAW,KAAK,OAAO;AACnB,SAAG,OAAO,CAAC;AAAA,IACf;AACA,OAAG,UAAU,cAAc;AAAA,EAC/B;AAAA,EACQ,qBAAoB;AACxB,eAAW,KAAK,KAAK,cAAc;AAC/B,UAAI,QAAQ,KAAK,MAAM,SAAS,eAAe,CAAC;AAChD,UAAG,GAAG,WAAW,KAAK,GAAE;AACpB,WAAG,OAAO,KAAK;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,uBAAwC;AACpC,WAAO;AAAA,MACH,iBAAiB,KAAK,MAAM;AAAA,IAChC;AAAA,EACJ;AAAA,EAEQ,qBAAoB;AACxB,QAAI,aAAa,KAAK,MAAM,SAAS,OAAO;AAC5C,QAAI,IAAI,IAAI,SAAS,KAAK,KAAK,YAAY,gBAAgB,CAAC;AAC5D,QAAI,OAAO,KAAK,qBAAqB;AACrC,MAAE,aAAa,IAAI;AACnB,SAAK,IAAI,6FAA6F;AAAA,EAC1G;AAAA,EACA,aAAa;AACT,SAAK,mBAAmB;AACxB,SAAK,qBAAqB;AAC1B,SAAK,mBAAmB;AACxB,SAAK,mBAAmB;AAAA,EAC5B;AACJ;","names":[]}