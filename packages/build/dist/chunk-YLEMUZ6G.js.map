{"version":3,"sources":["../src/classes/healthCheck.ts"],"sourcesContent":["import { AppConfigSchemaOutput } from \"@ulld/configschema/zod/main\";\nimport { ShellManager } from \"./baseClasses/shell.js\";\nimport { EnvManager } from \"./envManager.js\";\nimport { TargetPaths } from \"./paths.js\";\n\nexport class BuildHealthCheck extends ShellManager{\n    constructor(public paths: TargetPaths, public env: EnvManager){\n        super()\n    }\n    private checkDatabaseEnvVariables(): Record<AppConfigSchemaOutput[\"build\"][\"database\"][\"type\"], boolean>{\n        let hasPostgres = this.env.hasVariable(\"postgresUri\")\n        return {\n            postgres: Boolean(hasPostgres),\n            sqlite: false // Handle this once sqlite is actually buildable.\n        }\n    }\n    canSyncDatabase(appConfig: AppConfigSchemaOutput){\n        let dbVars = this.checkDatabaseEnvVariables()\n        return dbVars[appConfig.build.database.type]\n    }\n}\n"],"mappings":";;;;;;;;AAAA;AAKO,IAAM,mBAAN,cAA+B,aAAY;AAAA,EAC9C,YAAmB,OAA2B,KAAgB;AAC1D,UAAM;AADS;AAA2B;AAAA,EAE9C;AAAA,EACQ,4BAAgG;AACpG,QAAI,cAAc,KAAK,IAAI,YAAY,aAAa;AACpD,WAAO;AAAA,MACH,UAAU,QAAQ,WAAW;AAAA,MAC7B,QAAQ;AAAA;AAAA,IACZ;AAAA,EACJ;AAAA,EACA,gBAAgB,WAAiC;AAC7C,QAAI,SAAS,KAAK,0BAA0B;AAC5C,WAAO,OAAO,UAAU,MAAM,SAAS,IAAI;AAAA,EAC/C;AACJ;","names":[]}