{"version":3,"sources":["../src/classes/databaseManager.ts"],"sourcesContent":["import terminalLink from \"terminal-link\";\nimport { EnvManager } from \"./envManager.js\";\nimport { BuildHealthCheck } from \"./healthCheck.js\";\nimport { TargetPaths } from \"./paths.js\";\nimport { ShellManager } from \"./baseClasses/shell.js\";\nimport { UlldAppConfigManager } from \"./appConfig.js\";\nimport { PackageManagers } from \"../types.js\";\nimport { FileManager } from \"./baseClasses/fileManager.js\";\nimport { TemplateFile } from \"./templateFile.js\";\n\nexport class DatabaseBuildManager extends ShellManager {\n    dbType: \"postgres\" | \"sqlite\" = \"postgres\";\n    constructor(\n        public paths: TargetPaths,\n        public env: EnvManager,\n        public health: BuildHealthCheck,\n    ) {\n        super();\n    }\n    writePrismaSchema() {\n        let tm = new TemplateFile(\"prismaSchema\");\n        let content = tm.getNewContent({});\n        let outputFile = FileManager.fromPathKey(\"prismaSchema\", this.paths);\n        outputFile.writeContent(content);\n    }\n    generate(\n        appConfig: UlldAppConfigManager,\n        pkgManager: PackageManagers,\n        migrateDatabase: boolean = false,\n    ) {\n        if (!appConfig.config) {\n            throw new Error(`No appConfig found while generating database.`);\n        }\n        let canBuild = this.health.canSyncDatabase(appConfig.config);\n        if (!canBuild) {\n            this.logFixme(`\nWe can't automatically generate your database because you're missing the database URI env variable.\n\nWe can continue, but you'll need to add a ${this.env.getDatabaseUriVariable(appConfig.config.build.database.type).variable} variable to your .env file and then run 'db:generate' from the newly generated directory, and then 'next build' to build the application.\n\nIf this fails or you're new to the terminal, add a ULLD_ADDITIONAL_SOURCES environment variable to your OS specific shell that points to a directory, and inside of that directory create a .env file with your database URI. Then try to install ULLD again from scratch.\n\nSee the docs ${terminalLink(\"here\", \"https://uhlittlelessdum.com/blog/tutorials/settingUpYourFirstApp\")} for more info\n`);\n        } else {\n            this.logVerbose(\"Generating database schema.\");\n            if (migrateDatabase) {\n                this.execPackageJsonScript(\n                    pkgManager,\n                    \"db:migrate\",\n                    this.paths.projectRoot,\n                );\n            }\n            this.execPackageJsonScript(\n                pkgManager,\n                \"db:generate\",\n                this.paths.projectRoot,\n            );\n        }\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA,OAAO,kBAAkB;AAUlB,IAAM,uBAAN,cAAmC,aAAa;AAAA,EAEnD,YACW,OACA,KACA,QACT;AACE,UAAM;AAJC;AACA;AACA;AAAA,EAGX;AAAA,EAPA,SAAgC;AAAA,EAQhC,oBAAoB;AAChB,QAAI,KAAK,IAAI,aAAa,cAAc;AACxC,QAAI,UAAU,GAAG,cAAc,CAAC,CAAC;AACjC,QAAI,aAAa,YAAY,YAAY,gBAAgB,KAAK,KAAK;AACnE,eAAW,aAAa,OAAO;AAAA,EACnC;AAAA,EACA,SACI,WACA,YACA,kBAA2B,OAC7B;AACE,QAAI,CAAC,UAAU,QAAQ;AACnB,YAAM,IAAI,MAAM,+CAA+C;AAAA,IACnE;AACA,QAAI,WAAW,KAAK,OAAO,gBAAgB,UAAU,MAAM;AAC3D,QAAI,CAAC,UAAU;AACX,WAAK,SAAS;AAAA;AAAA;AAAA,4CAGkB,KAAK,IAAI,uBAAuB,UAAU,OAAO,MAAM,SAAS,IAAI,EAAE,QAAQ;AAAA;AAAA;AAAA;AAAA,eAI3G,aAAa,QAAQ,kEAAkE,CAAC;AAAA,CACtG;AAAA,IACO,OAAO;AACH,WAAK,WAAW,6BAA6B;AAC7C,UAAI,iBAAiB;AACjB,aAAK;AAAA,UACD;AAAA,UACA;AAAA,UACA,KAAK,MAAM;AAAA,QACf;AAAA,MACJ;AACA,WAAK;AAAA,QACD;AAAA,QACA;AAAA,QACA,KAAK,MAAM;AAAA,MACf;AAAA,IACJ;AAAA,EACJ;AACJ;","names":[]}