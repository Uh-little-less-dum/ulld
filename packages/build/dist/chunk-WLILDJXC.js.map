{"version":3,"sources":["../src/__test__/data/getTestData.ts"],"sourcesContent":["import { ulldSlots } from \"@ulld/configschema/slotsSchema\";\nimport { PluginComponent } from \"../../classes/component\";\nimport { UlldBuildProcess } from \"../../classes/build\";\nimport { randomFromArr, forN } from \"@ulld/utilities/listUtils\";\nimport { UlldPlugin } from \"../../classes/plugin\";\nimport { PluginSlot } from \"../../classes/slot\";\nimport { PluginSlotKey } from \"@ulld/configschema/developerTypes\";\nimport { PluginPage } from \"../../classes/page\";\nimport testData from \"./testData.json\" with {type: \"json\"};\nimport { TargetPaths } from \"../../classes/paths\";\n\nlet letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\nconst withOverlap = (n: number) => Math.ceil(n / 3);\n\nconst getRandomId = (n: number = 10) =>\n    forN(n, () => randomFromArr(letters)).join(\"\");\n\nconst getRandomSubSlots = (n: number) => forN(withOverlap(n), () => getRandomId());\n\nconst getRandomSlot = (): PluginSlotKey => randomFromArr(ulldSlots) as PluginSlotKey\n\nexport const getRandomComponents = (n: number = 15, slot: PluginSlotKey, _subSlots?: string[]) => {\n    const overlap = withOverlap(n)\n    const pluginNames = forN(overlap, () => getRandomId(5));\n    const parentSlot = slot || getRandomId();\n    const slots = ulldSlots.slice(overlap);\n    const subSlots = _subSlots || getRandomSubSlots(n)\n\n\n    const testComponents = forN(\n        n,\n        () =>\n            new PluginComponent(\n                {\n                    slot: slot,\n                    export: getRandomId(),\n                },\n                {\n                    pluginName: randomFromArr(slots),\n                    parentSlot: slot\n                },\n            ),\n    );\n    return testComponents;\n};\n\nconst getRandomPages = (n: number = 5, pageOptions?: string[], paths: TargetPaths) => {\n    let pageOpts = pageOptions || getRandomSubSlots(10)\n    const targetUrl = randomFromArr(pageOpts)\n    return forN(n, (i) => new PluginPage({\n        targetUrl,\n        export: getRandomId()\n    }, \"test\", i, paths))\n}\n\nconst getRandomPackages = (\n    n: number = 20,\n    testDir: string = \"/Users/bigsexy/Desktop/current/ulldApp\",\n    nComponents: number = 10,\n    nPages: number = 5,\n): UlldPlugin[] => { \n    const _randomSubSlots = getRandomSubSlots(nComponents)\n    const _randomPages = getRandomSubSlots(n)\n    const paths = new TargetPaths(testDir)\n     return forN(n, () => {\n        let p = new UlldPlugin(paths, getRandomId())\n        p.slot = new PluginSlot(p.name, getRandomSlot())\n        p.pages = getRandomPages(nPages, _randomPages, paths)\n        p.components = getRandomComponents(nComponents, p.slot.slot, _randomSubSlots)\n        return p\n    })\n};\n\nexport const getTestBuild = (\n    testDir: string = \"/Users/bigsexy/Desktop/current/ulldApp\",\n    packages: number = 15,\n) => {\n    const build = new UlldBuildProcess(testDir);\n    build.plugins = getRandomPackages();\n    return build;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,SAAS,iBAAiB;AAG1B,SAAS,eAAe,YAAY;AAQpC,IAAI,UAAU;AAEd,IAAM,cAAc,CAAC,MAAc,KAAK,KAAK,IAAI,CAAC;AAElD,IAAM,cAAc,CAAC,IAAY,OAC7B,KAAK,GAAG,MAAM,cAAc,OAAO,CAAC,EAAE,KAAK,EAAE;AAEjD,IAAM,oBAAoB,CAAC,MAAc,KAAK,YAAY,CAAC,GAAG,MAAM,YAAY,CAAC;AAEjF,IAAM,gBAAgB,MAAqB,cAAc,SAAS;AAE3D,IAAM,sBAAsB,CAAC,IAAY,IAAI,MAAqB,cAAyB;AAC9F,QAAM,UAAU,YAAY,CAAC;AAC7B,QAAM,cAAc,KAAK,SAAS,MAAM,YAAY,CAAC,CAAC;AACtD,QAAM,aAAa,QAAQ,YAAY;AACvC,QAAM,QAAQ,UAAU,MAAM,OAAO;AACrC,QAAM,WAAW,aAAa,kBAAkB,CAAC;AAGjD,QAAM,iBAAiB;AAAA,IACnB;AAAA,IACA,MACI,IAAI;AAAA,MACA;AAAA,QACI;AAAA,QACA,QAAQ,YAAY;AAAA,MACxB;AAAA,MACA;AAAA,QACI,YAAY,cAAc,KAAK;AAAA,QAC/B,YAAY;AAAA,MAChB;AAAA,IACJ;AAAA,EACR;AACA,SAAO;AACX;AAEA,IAAM,iBAAiB,CAAC,IAAY,GAAG,aAAwB,UAAuB;AAClF,MAAI,WAAW,eAAe,kBAAkB,EAAE;AAClD,QAAM,YAAY,cAAc,QAAQ;AACxC,SAAO,KAAK,GAAG,CAAC,MAAM,IAAI,WAAW;AAAA,IACjC;AAAA,IACA,QAAQ,YAAY;AAAA,EACxB,GAAG,QAAQ,GAAG,KAAK,CAAC;AACxB;AAEA,IAAM,oBAAoB,CACtB,IAAY,IACZ,UAAkB,0CAClB,cAAsB,IACtB,SAAiB,MACF;AACf,QAAM,kBAAkB,kBAAkB,WAAW;AACrD,QAAM,eAAe,kBAAkB,CAAC;AACxC,QAAM,QAAQ,IAAI,YAAY,OAAO;AACpC,SAAO,KAAK,GAAG,MAAM;AAClB,QAAI,IAAI,IAAI,WAAW,OAAO,YAAY,CAAC;AAC3C,MAAE,OAAO,IAAI,WAAW,EAAE,MAAM,cAAc,CAAC;AAC/C,MAAE,QAAQ,eAAe,QAAQ,cAAc,KAAK;AACpD,MAAE,aAAa,oBAAoB,aAAa,EAAE,KAAK,MAAM,eAAe;AAC5E,WAAO;AAAA,EACX,CAAC;AACL;AAEO,IAAM,eAAe,CACxB,UAAkB,0CAClB,WAAmB,OAClB;AACD,QAAM,QAAQ,IAAI,iBAAiB,OAAO;AAC1C,QAAM,UAAU,kBAAkB;AAClC,SAAO;AACX;","names":[]}