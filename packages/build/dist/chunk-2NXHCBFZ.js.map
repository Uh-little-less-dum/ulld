{"version":3,"sources":["../src/classes/baseClasses/shell.ts"],"sourcesContent":["import cp, { ExecException } from \"child_process\";\nimport chalk from \"chalk\";\nimport { PackageManagers } from \"../../types.js\";\n\ntype LogLevel = \"normal\" | \"verbose\" | \"debug\";\n\ntype ExecLogger = (\n    error: ExecException | null,\n    stdout: string | Buffer,\n    stderr: string | Buffer,\n) => void;\n\nconst packageManagerExecution: Record<PackageManagers, string> = {\n    npm: \"npm run\",\n    yarn: \"yarn run\",\n    pnpm: \"pnpm run\",\n};\n\nexport class ShellManager {\n    logLevel: LogLevel = \"normal\";\n    private logLevelOrder: LogLevel[] = [\"normal\", \"verbose\", \"debug\"];\n    constructor() {\n        if (\n            process.env.ULLD_LOG_LEVEL &&\n            this.logLevelOrder.includes(process.env.ULLD_LOG_LEVEL as any)\n        ) {\n            this.logLevel = process.env.ULLD_LOG_LEVEL as LogLevel;\n        }\n    }\n    tempFiles: string[] = [];\n\n    shouldLog(level: LogLevel) {\n        return (\n            this.logLevelOrder.indexOf(this.logLevel) >=\n            this.logLevelOrder.indexOf(level)\n        );\n    }\n\n    logFixme(val: any, ...vals: any) {\n        console.log(chalk.bgBlue.whiteBright(val, ...vals));\n    }\n\n    log(val: any, ...vals: any) {\n        console.log(val, ...vals);\n    }\n\n    logDebug(val: any, ...vals: any) {\n        if (!this.shouldLog(\"debug\")) return;\n        console.log(val, ...vals);\n    }\n\n    logVerbose(val: any, ...vals: any) {\n        if (!this.shouldLog(\"verbose\")) return;\n        console.log(val, ...vals);\n    }\n\n    logError(val: any, ...vals: any) {\n        console.error(val, ...vals);\n    }\n    logWarn(val: any, ...vals: any) {\n        console.warn(val, ...vals);\n    }\n\n    logTable(val: any, ...vals: any) {\n        console.table(val, ...vals);\n    }\n    logTrace(val: any, ...vals: any) {\n        console.trace(val, ...vals);\n    }\n\n    ulld() {\n        return `${chalk.hex(\"#0ba5e9\")(\"U\")}LLD`;\n    }\n\n    // async genTempFile(content: string){\n    //     let fileName  = \"ulld_\"\n    //     Array(12).fill(0).forEach(() => fileName += validChars[Math.floor(Math.random() * validChars.length)])\n    //     let tempDir = os.tmpdir()\n    //     await fs.promises.writeFile(path.join(tempDir, ))\n    // }\n\n    clearLastTempFile() {\n        if (this.tempFiles.length === 0) {\n            return;\n        }\n        this.tempFiles = this.tempFiles.slice(0, this.tempFiles.length - 1);\n    }\n    private execLogger(\n        error: ExecException | null,\n        stdout: string | Buffer,\n        stderr: string | Buffer,\n    ) { }\n    execAsync(val: string, cwd?: string, logger?: ExecLogger) {\n        return cp.exec(val, { cwd }, logger || this.execLogger);\n    }\n    exec(val: string, cwd?: string) {\n        return cp.execSync(val, { cwd, stdio: \"inherit\" });\n    }\n    execPackageJsonScriptAsync(\n        pkgManager: PackageManagers,\n        script: string,\n        cwd?: string,\n        logger?: ExecLogger\n    ) {\n        return this.execAsync(`${packageManagerExecution[pkgManager]} ${script}`, cwd, logger);\n    }\n    execPackageJsonScript(\n        pkgManager: PackageManagers,\n        script: string,\n        cwd?: string,\n    ) {\n        return this.exec(`${packageManagerExecution[pkgManager]} ${script}`, cwd);\n    }\n}\n"],"mappings":";;;;;AAAA;AAAA,OAAO,QAA2B;AAClC,OAAO,WAAW;AAWlB,IAAM,0BAA2D;AAAA,EAC7D,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AACV;AAEO,IAAM,eAAN,MAAmB;AAAA,EACtB,WAAqB;AAAA,EACb,gBAA4B,CAAC,UAAU,WAAW,OAAO;AAAA,EACjE,cAAc;AACV,QACI,QAAQ,IAAI,kBACZ,KAAK,cAAc,SAAS,QAAQ,IAAI,cAAqB,GAC/D;AACE,WAAK,WAAW,QAAQ,IAAI;AAAA,IAChC;AAAA,EACJ;AAAA,EACA,YAAsB,CAAC;AAAA,EAEvB,UAAU,OAAiB;AACvB,WACI,KAAK,cAAc,QAAQ,KAAK,QAAQ,KACxC,KAAK,cAAc,QAAQ,KAAK;AAAA,EAExC;AAAA,EAEA,SAAS,QAAa,MAAW;AAC7B,YAAQ,IAAI,MAAM,OAAO,YAAY,KAAK,GAAG,IAAI,CAAC;AAAA,EACtD;AAAA,EAEA,IAAI,QAAa,MAAW;AACxB,YAAQ,IAAI,KAAK,GAAG,IAAI;AAAA,EAC5B;AAAA,EAEA,SAAS,QAAa,MAAW;AAC7B,QAAI,CAAC,KAAK,UAAU,OAAO;AAAG;AAC9B,YAAQ,IAAI,KAAK,GAAG,IAAI;AAAA,EAC5B;AAAA,EAEA,WAAW,QAAa,MAAW;AAC/B,QAAI,CAAC,KAAK,UAAU,SAAS;AAAG;AAChC,YAAQ,IAAI,KAAK,GAAG,IAAI;AAAA,EAC5B;AAAA,EAEA,SAAS,QAAa,MAAW;AAC7B,YAAQ,MAAM,KAAK,GAAG,IAAI;AAAA,EAC9B;AAAA,EACA,QAAQ,QAAa,MAAW;AAC5B,YAAQ,KAAK,KAAK,GAAG,IAAI;AAAA,EAC7B;AAAA,EAEA,SAAS,QAAa,MAAW;AAC7B,YAAQ,MAAM,KAAK,GAAG,IAAI;AAAA,EAC9B;AAAA,EACA,SAAS,QAAa,MAAW;AAC7B,YAAQ,MAAM,KAAK,GAAG,IAAI;AAAA,EAC9B;AAAA,EAEA,OAAO;AACH,WAAO,GAAG,MAAM,IAAI,SAAS,EAAE,GAAG,CAAC;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,oBAAoB;AAChB,QAAI,KAAK,UAAU,WAAW,GAAG;AAC7B;AAAA,IACJ;AACA,SAAK,YAAY,KAAK,UAAU,MAAM,GAAG,KAAK,UAAU,SAAS,CAAC;AAAA,EACtE;AAAA,EACQ,WACJ,OACA,QACA,QACF;AAAA,EAAE;AAAA,EACJ,UAAU,KAAa,KAAc,QAAqB;AACtD,WAAO,GAAG,KAAK,KAAK,EAAE,IAAI,GAAG,UAAU,KAAK,UAAU;AAAA,EAC1D;AAAA,EACA,KAAK,KAAa,KAAc;AAC5B,WAAO,GAAG,SAAS,KAAK,EAAE,KAAK,OAAO,UAAU,CAAC;AAAA,EACrD;AAAA,EACA,2BACI,YACA,QACA,KACA,QACF;AACE,WAAO,KAAK,UAAU,GAAG,wBAAwB,UAAU,CAAC,IAAI,MAAM,IAAI,KAAK,MAAM;AAAA,EACzF;AAAA,EACA,sBACI,YACA,QACA,KACF;AACE,WAAO,KAAK,KAAK,GAAG,wBAAwB,UAAU,CAAC,IAAI,MAAM,IAAI,GAAG;AAAA,EAC5E;AACJ;","names":[]}