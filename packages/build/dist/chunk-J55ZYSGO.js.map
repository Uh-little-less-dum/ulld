{"version":3,"sources":["../src/classes/templateFile.ts","../src/utils/templateStringData.json"],"sourcesContent":["import {\n    TemplateStringId,\n    TemplateStringVariableRecord,\n} from \"../utils/templateKeys.js\";\nimport templateData from \"../utils/templateStringData.json\"  with {type: \"json\"};\nimport path from \"path\";\nimport fs from \"fs\";\n\nexport class TemplateFile<T extends TemplateStringId> {\n    absPath: string;\n    itemData: (typeof templateData)[\"data\"][number];\n    constructor(public templateKey: T) {\n        let itemData = templateData.data.find((f) => f.id === templateKey);\n        if (!itemData) {\n            throw new Error(`Could not find item data for id ${templateKey}`);\n        }\n        this.itemData = itemData;\n        this.absPath = path.join(templateData.basePath, itemData.path);\n    }\n    private getFileContent() {\n        return fs.readFileSync(this.absPath, { encoding: \"utf-8\" });\n    }\n    getNewContent(replacements: TemplateStringVariableRecord<T>) {\n        let c = this.getFileContent();\n        for (const k in replacements) {\n            c = c.replaceAll(\n                `<<${k}>>`,\n                replacements[k as keyof typeof replacements],\n            );\n        }\n        return c;\n    }\n}\n","{\n    \"basePath\": \"/Users/bigsexy/Desktop/current/ulld/packages/build/src/fileContent\",\n    \"data\": [\n        {\n            \"path\": \"prismaSchema.txt\",\n            \"id\": \"prismaSchema\",\n            \"variables\": [],\n            \"typeName\": \"PrismaSchema\"\n        },\n        {\n            \"path\": \"settings/settingsPage.txt\",\n            \"id\": \"settingsPage\",\n            \"variables\": [\n                \"PLUGIN_NAME\",\n                \"PLUGIN_SETTING_PAGE_EXPORT\"\n            ],\n            \"typeName\": \"SettingsPage\"\n        },\n        {\n            \"path\": \"prisma/clientGenerators/sqliteClientGenerator.txt\",\n            \"id\": \"sqliteClientGenerator\",\n            \"variables\": [],\n            \"typeName\": \"SqliteClientGenerator\"\n        },\n        {\n            \"path\": \"prisma/clientGenerators/postgresClientGenerator.txt\",\n            \"id\": \"postgresClientGenerator\",\n            \"variables\": [],\n            \"typeName\": \"PostgresClientGenerator\"\n        },\n        {\n            \"path\": \"npmrc/pnpm.txt\",\n            \"id\": \"pnpm\",\n            \"variables\": [],\n            \"typeName\": \"Pnpm\"\n        },\n        {\n            \"path\": \"noteType/noteTypePage.txt\",\n            \"id\": \"noteTypePage\",\n            \"variables\": [\n                \"CATEGORY_ID\",\n                \"BASE_URL\"\n            ],\n            \"typeName\": \"NoteTypePage\"\n        },\n        {\n            \"path\": \"noteType/individualNotePage.txt\",\n            \"id\": \"individualNotePage\",\n            \"variables\": [\n                \"CATEGORY_ID\"\n            ],\n            \"typeName\": \"IndividualNotePage\"\n        },\n        {\n            \"path\": \"generalFiles/gitignore.txt\",\n            \"id\": \"gitignore\",\n            \"variables\": [],\n            \"typeName\": \"Gitignore\"\n        }\n    ]\n}"],"mappings":";;;;;AAAA;;;ACAA;AAAA,EACI,UAAY;AAAA,EACZ,MAAQ;AAAA,IACJ;AAAA,MACI,MAAQ;AAAA,MACR,IAAM;AAAA,MACN,WAAa,CAAC;AAAA,MACd,UAAY;AAAA,IAChB;AAAA,IACA;AAAA,MACI,MAAQ;AAAA,MACR,IAAM;AAAA,MACN,WAAa;AAAA,QACT;AAAA,QACA;AAAA,MACJ;AAAA,MACA,UAAY;AAAA,IAChB;AAAA,IACA;AAAA,MACI,MAAQ;AAAA,MACR,IAAM;AAAA,MACN,WAAa,CAAC;AAAA,MACd,UAAY;AAAA,IAChB;AAAA,IACA;AAAA,MACI,MAAQ;AAAA,MACR,IAAM;AAAA,MACN,WAAa,CAAC;AAAA,MACd,UAAY;AAAA,IAChB;AAAA,IACA;AAAA,MACI,MAAQ;AAAA,MACR,IAAM;AAAA,MACN,WAAa,CAAC;AAAA,MACd,UAAY;AAAA,IAChB;AAAA,IACA;AAAA,MACI,MAAQ;AAAA,MACR,IAAM;AAAA,MACN,WAAa;AAAA,QACT;AAAA,QACA;AAAA,MACJ;AAAA,MACA,UAAY;AAAA,IAChB;AAAA,IACA;AAAA,MACI,MAAQ;AAAA,MACR,IAAM;AAAA,MACN,WAAa;AAAA,QACT;AAAA,MACJ;AAAA,MACA,UAAY;AAAA,IAChB;AAAA,IACA;AAAA,MACI,MAAQ;AAAA,MACR,IAAM;AAAA,MACN,WAAa,CAAC;AAAA,MACd,UAAY;AAAA,IAChB;AAAA,EACJ;AACJ;;;ADvDA,OAAO,UAAU;AACjB,OAAO,QAAQ;AAER,IAAM,eAAN,MAA+C;AAAA,EAGlD,YAAmB,aAAgB;AAAhB;AACf,QAAI,WAAW,2BAAa,KAAK,KAAK,CAAC,MAAM,EAAE,OAAO,WAAW;AACjE,QAAI,CAAC,UAAU;AACX,YAAM,IAAI,MAAM,mCAAmC,WAAW,EAAE;AAAA,IACpE;AACA,SAAK,WAAW;AAChB,SAAK,UAAU,KAAK,KAAK,2BAAa,UAAU,SAAS,IAAI;AAAA,EACjE;AAAA,EATA;AAAA,EACA;AAAA,EASQ,iBAAiB;AACrB,WAAO,GAAG,aAAa,KAAK,SAAS,EAAE,UAAU,QAAQ,CAAC;AAAA,EAC9D;AAAA,EACA,cAAc,cAA+C;AACzD,QAAI,IAAI,KAAK,eAAe;AAC5B,eAAW,KAAK,cAAc;AAC1B,UAAI,EAAE;AAAA,QACF,KAAK,CAAC;AAAA,QACN,aAAa,CAA8B;AAAA,MAC/C;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACJ;","names":[]}