{"version":3,"sources":["../src/classes/page.ts"],"sourcesContent":["import { DeveloperConfigOutput } from \"@ulld/configschema/developer\";\nimport { TargetPaths } from \"./paths.js\";\nimport { ShellManager } from \"./baseClasses/shell.js\";\nimport slotStaticData from \"@ulld/utilities/slotMap.json\"  with {type: \"json\"};\nimport buildData from \"@ulld/utilities/buildStaticData.json\"  with {type: \"json\"};\nimport { SubSlot } from \"./subslot.js\";\nimport { PluginAdditionalPage } from \"./pluginAdditionalPage.js\";\nimport { SlotDataType } from \"@ulld/utilities/slotDataType\";\nimport { AnySubSlotKey, PluginSlotKey } from \"@ulld/configschema/slotMapType\";\n\nexport class PluginPage extends ShellManager {\n    shouldUse: boolean = true;\n    importName: string = \"GeneratedPageComponent\";\n    formattedImportName: string = \"GeneratedPageComponent\";\n    slotData?: SlotDataType;\n    targetUrl: string;\n    targetFile: string;\n    formattedComponentImport: string;\n    formattedExport: string\n    haveModifiedImportName: boolean = false;\n    subSlot?: SubSlot\n    initialComponentImport: string\n    additionalPage?: PluginAdditionalPage\n    allowImportPageProps: boolean = false\n    constructor(\n        public data: DeveloperConfigOutput[\"pages\"][number],\n        public pluginName: string,\n        public pageIndex: number,\n        public paths: TargetPaths,\n        public parentSlotKey?: PluginSlotKey,\n        public subSlotKey?: AnySubSlotKey,\n    ) {\n        super();\n        if (data.slot && parentSlotKey) {\n            this.slotData =\n                slotStaticData[parentSlotKey]?.[\n                data.slot as keyof (typeof slotStaticData)[typeof parentSlotKey]\n                ];\n        }\n        if(this.parentSlotKey && this.subSlotKey){\n            this.subSlot = new SubSlot(this.pluginName, this.parentSlotKey, this.subSlotKey, this.paths)\n        } else {\n            this.additionalPage = new PluginAdditionalPage(this.pluginName, this.parentSlotKey, this.subSlotKey, this.paths)\n        }\n        this.formattedExport = `${this.pluginName}/${this.data.export}`\n        this.formattedComponentImport = this.getFormattedComponentImport();\n        this.initialComponentImport = this.formattedComponentImport\n        this.targetUrl = this.getTargetUrl();\n        let targetFile = this.getTargetFile();\n        if(!targetFile){\n            this.throwTargetPathNotFound()\n        }\n        this.targetFile = targetFile as string\n    }\n    cancel() {\n        this.shouldUse = false;\n    }\n    getFormattedComponentImport(){\n        return \"PageComponent\"\n    }\n    getImportString() {\n        return `import ${this.importName}${(this.data.exportsPageProps && this.allowImportPageProps) ? \", { PageProps }\" : \"\"} from \"${this.pluginName}/${this.data.export}\";`;\n    }\n    throwTargetPathNotFound() {\n        throw new Error(\n            `Could not find the target url for ${this.pluginName} at ${this.parentSlotKey} -> ${this.data.slot}`,\n        );\n    }\n    getTargetFile() {\n        return this.slotData?.path || this.data.targetUrl;\n    }\n    getTargetUrl() {\n        if (this.data.targetUrl) {\n            return this.data.targetUrl;\n        }\n        if (!this.parentSlotKey || !this.subSlotKey) {\n            this.throwTargetPathNotFound();\n        }\n        let protectedPathData = buildData.protectedPaths.find(\n            (q) =>\n                q.pageFor.slot === this.parentSlotKey &&\n                q.pageFor.subSlot === this.subSlotKey,\n        );\n        if (!protectedPathData) {\n            this.throwTargetPathNotFound();\n        }\n        return protectedPathData?.route as string;\n    }\n    logWriteToFile() {\n        if (this.parentSlotKey && this.subSlotKey) {\n            this.logVerbose(`Writing ${this.parentSlotKey} -> ${this.subSlotKey} to file.`);\n        } else {\n            this.logVerbose(\n                `Writing component from ${this.formattedExport} to file.`,\n            );\n        }\n    }\n\n    writeToFile() {\n        if (!this.shouldUse) {\n            return this.log(\n                `Not writing page ${this.targetUrl} from plugin ${this.pluginName}. There was an issue with their configuration.`,\n            );\n        }\n        if (this.subSlot) {\n            this.logWriteToFile()\n            this.subSlot.writeToFile(this.formattedExport, this.formattedComponentImport);\n        } else if(this.additionalPage) {\n            this.logWriteToFile()\n            this.additionalPage.writeToFile(this.formattedExport, this.formattedComponentImport);\n        }\n    }\n}\n"],"mappings":"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","names":[]}