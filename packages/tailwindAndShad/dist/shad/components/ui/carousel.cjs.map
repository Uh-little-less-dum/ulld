{"version":3,"sources":["../../../../src/shad/components/ui/carousel.tsx"],"names":["React","useEmblaCarousel","ArrowLeft","ArrowRight","CarouselContext","useCarousel","context","Carousel","orientation","opts","setApi","plugins","className","children","props","ref","carouselRef","api","canScrollPrev","setCanScrollPrev","canScrollNext","setCanScrollNext","onSelect","scrollPrev","scrollNext","handleKeyDown","event","cn","CarouselContent","CarouselItem","CarouselPrevious","variant","size","Button","CarouselNext"],"mappings":"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","sourcesContent":["\"use client\"\nimport * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nimport { Button } from \"./button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n"]}