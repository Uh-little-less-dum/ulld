{"version":3,"sources":["../../../../src/shad/components/ui/alert.tsx"],"names":["React","cva","alertVariants","Alert","className","variant","props","ref","cn","AlertTitle","AlertDescription"],"mappings":"oFAAA,UAAYA,MAAW,QACvB,OAAS,OAAAC,MAA8B,2BAIvC,IAAMC,EAAgBD,EACpB,4JACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,gCACT,YACE,yFACJ,CACF,EACA,gBAAiB,CACf,QAAS,SACX,CACF,CACF,EAEME,EAAc,aAGlB,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAS,GAAGC,CAAM,EAAGC,IACnC,gBAAC,OACC,IAAKA,EACL,KAAK,QACL,UAAWC,EAAGN,EAAc,CAAE,QAAAG,CAAQ,CAAC,EAAGD,CAAS,EAClD,GAAGE,EACN,CACD,EACDH,EAAM,YAAc,QAEpB,IAAMM,EAAmB,aAGvB,CAAC,CAAE,UAAAL,EAAW,GAAGE,CAAM,EAAGC,IAC1B,gBAAC,MACC,IAAKA,EACL,UAAWC,EAAG,+CAAgDJ,CAAS,EACtE,GAAGE,EACN,CACD,EACDG,EAAW,YAAc,aAEzB,IAAMC,EAAyB,aAG7B,CAAC,CAAE,UAAAN,EAAW,GAAGE,CAAM,EAAGC,IAC1B,gBAAC,OACC,IAAKA,EACL,UAAWC,EAAG,gCAAiCJ,CAAS,EACvD,GAAGE,EACN,CACD,EACDI,EAAiB,YAAc","sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"]}