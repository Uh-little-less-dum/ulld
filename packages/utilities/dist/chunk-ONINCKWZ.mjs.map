{"version":3,"sources":["../src/utils/fsUtils.ts"],"names":["axios","withForwardSlash","p","withForwardSlashOptional","noTrailingSlash","withTrailingSlash","makeHref","s","noLeadingSlash","setSlashes","value","leading","trailing","v","parentDir","getFilenameFromString","ensureRootRelative","fsRoot","ensureAbsolute","getParentDirAndFilename","ensureRootRelativeParent","fileExtension","path","replacePrefix","content","regex","replaceWith","replaceAppendix","getFsRootGlob","props","res","err"],"mappings":"AAEA,OAAOA,MAAW,QAEX,IAAMC,EAAoBC,GAC7BA,EAAE,WAAW,GAAG,EAAIA,EAAI,IAAIA,CAAC,GAEpBC,EAA4BD,GACrC,OAAOA,EAAM,IAAc,OAAYD,EAAiBC,CAAC,EAEhDE,EAAmBF,GAC5BA,EAAE,SAAS,GAAG,EAAIA,EAAE,MAAM,EAAGA,EAAE,OAAS,CAAC,EAAIA,EAEpCG,EAAqBH,GAAeA,EAAE,SAAS,GAAG,EAAIA,EAAI,GAAGA,CAAC,IAE9DI,EAAYC,GACjB,mBAAmB,KAAKA,CAAC,GAG1B,OAAO,OAAW,IACVA,EAKJ,IAHO,QAAQ,UAAU,KAAK,WAAW,MAAM,EAChD,OAAO,SAAS,KAAK,WAAW,OAAO,EACvC,QAAQ,IAAI,+BACE,QAAU,MAAM,MAAMA,CAAC,GAGlCC,EAAkBN,GAC3BA,EAAE,WAAW,GAAG,EAAIA,EAAE,MAAM,EAAGA,EAAE,MAAM,EAAIA,EAElCO,EAAa,CAAC,CACvB,MAAAC,EACA,QAAAC,EACA,SAAAC,CACJ,IAIM,CACF,IAAIC,EAAIH,EACR,OAAAG,EAAIF,EAAUV,EAAiBY,CAAC,EAAIL,EAAeK,CAAC,EACpDA,EAAID,EAAWP,EAAkBQ,CAAC,EAAIT,EAAgBS,CAAC,EAChDA,CACX,EAEaC,EAAaZ,GACtBA,EAAE,QAAQ,GAAG,GAAK,EAAIA,EAAE,MAAM,EAAGA,EAAE,YAAY,GAAG,CAAC,EAAIA,EAE9Ca,EAAyBb,GAClCA,EAAE,QAAQ,GAAG,IAAM,GAAKA,EAAIA,EAAE,MAAMA,EAAE,YAAY,GAAG,EAAI,EAAGA,EAAE,MAAM,EAE3Dc,EAAqB,CAACd,EAAWe,IAC1ChB,EAAiBC,EAAE,QAAQe,CAAM,IAAM,GAAKf,EAAIA,EAAE,MAAMe,CAAM,EAAE,CAAC,CAAC,EAEzDC,EAAiB,CAAChB,EAAWe,IAC/Bf,EAAE,SAASe,CAAM,EAClBf,EACA,GAAGe,CAAM,GAAGR,EAAW,CAAE,MAAOP,EAAG,QAAS,GAAM,SAAU,EAAM,CAAC,CAAC,GAGjEiB,EAA0B,CACnCjB,EACAkB,EAAoC,GACpCH,KAEO,CACH,OAAQG,EACFJ,EAAmBF,EAAUZ,CAAC,EAAGe,CAAM,EACvCH,EAAUZ,CAAC,EACjB,SAAUa,EAAsBb,CAAC,CACrC,GAGSmB,EAAiBC,GACnBA,EAAK,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,YAAY,EAGlCC,EAAgB,CACzBC,EACAC,EACAC,EAAsB,KAEfF,EAAQ,WAAWC,CAAK,EACzB,GAAGC,CAAW,GAAGF,EAAQ,MAAMC,CAAK,EAAE,CAAC,CAAC,GACxCD,EAGGG,EAAkB,CAC3BH,EACAC,EACAC,EAAsB,KAEfF,EAAQ,SAASC,CAAK,EACvB,GAAGD,EAAQ,MAAM,EAAGA,EAAQ,OAASC,EAAM,MAAM,CAAC,GAAGC,CAAW,GAChEF,EAGGI,EAAgB,MACzBC,GACC,CACD,GAAI,CACA,IAAIC,EAAM,MAAM9B,EAAM,KAAK,YAAa6B,CAAK,EAC7C,GAAGC,EAAI,KAAK,UACR,OAAOA,EAAI,KAAK,SAExB,OAASC,EAAK,CACV,QAAQ,MAAMA,CAAG,CACrB,CACJ","sourcesContent":["import { filePathGlobPropsSchema } from \"../schemas/filePath/filePathInput.js\";\nimport { z } from \"zod\";\nimport axios from \"axios\";\n\nexport const withForwardSlash = (p: string) =>\n    p.startsWith(\"/\") ? p : `/${p}`;\n\nexport const withForwardSlashOptional = (p?: string) =>\n    typeof p === \"undefined\" ? undefined : withForwardSlash(p);\n\nexport const noTrailingSlash = (p: string) =>\n    p.endsWith(\"/\") ? p.slice(0, p.length - 1) : p;\n\nexport const withTrailingSlash = (p: string) => (p.endsWith(\"/\") ? p : `${p}/`);\n\nexport const makeHref = (s: string) => {\n    if (/^http(s?):\\/\\//gm.test(s)) {\n        return s;\n    }\n    if(typeof window === \"undefined\"){\n        return s\n    }\n    let isHttps = window?.location?.href.startsWith(\"http\")\n        ? window.location.href.startsWith(\"https\")\n        : process.env.NEXT_PUBLIC_PRODUCTION_REMOTE;\n    return `${isHttps ? \"https\" : \"http\"}://${s}`;\n};\n\nexport const noLeadingSlash = (p: string) =>\n    p.startsWith(\"/\") ? p.slice(1, p.length) : p;\n\nexport const setSlashes = ({\n    value,\n    leading,\n    trailing,\n}: {\n    value: string;\n    leading: boolean;\n    trailing: boolean;\n}) => {\n    let v = value;\n    v = leading ? withForwardSlash(v) : noLeadingSlash(v);\n    v = trailing ? withTrailingSlash(v) : noTrailingSlash(v);\n    return v;\n};\n\nexport const parentDir = (p: string) =>\n    p.indexOf(\"/\") >= 0 ? p.slice(0, p.lastIndexOf(\"/\")) : p;\n\nexport const getFilenameFromString = (p: string) =>\n    p.indexOf(\"/\") === -1 ? p : p.slice(p.lastIndexOf(\"/\") + 1, p.length);\n\nexport const ensureRootRelative = (p: string, fsRoot: string) =>\n    withForwardSlash(p.indexOf(fsRoot) === -1 ? p : p.split(fsRoot)[1]);\n\nexport const ensureAbsolute = (p: string, fsRoot: string) => {\n    return p.includes(fsRoot)\n        ? p\n        : `${fsRoot}${setSlashes({ value: p, leading: true, trailing: false })}`;\n};\n\nexport const getParentDirAndFilename = (\n    p: string,\n    ensureRootRelativeParent: boolean = true,\n    fsRoot: string,\n) => {\n    return {\n        parent: ensureRootRelativeParent\n            ? ensureRootRelative(parentDir(p), fsRoot)\n            : parentDir(p),\n        filename: getFilenameFromString(p),\n    };\n};\n\nexport const fileExtension = (path: string) => {\n    return path.split(\".\").at(-1)?.toLowerCase();\n};\n\nexport const replacePrefix = (\n    content: string,\n    regex: string,\n    replaceWith: string = \"\",\n) => {\n    return content.startsWith(regex)\n        ? `${replaceWith}${content.split(regex)[1]}`\n        : content;\n};\n\nexport const replaceAppendix = (\n    content: string,\n    regex: string,\n    replaceWith: string = \"\",\n) => {\n    return content.endsWith(regex)\n        ? `${content.slice(0, content.length - regex.length)}${replaceWith}`\n        : content;\n};\n\nexport const getFsRootGlob = async (\n    props: z.input<typeof filePathGlobPropsSchema>,\n) => {\n    try {\n        let res = await axios.post(\"/api/glob\", props);\n        if(res.data.filePaths){\n            return res.data.filePaths as string[];\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\n"]}