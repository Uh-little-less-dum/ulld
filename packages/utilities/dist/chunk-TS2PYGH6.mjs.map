{"version":3,"sources":["../src/__scripts__/generateValidIconNameData/getValidIconNames.ts"],"names":["path","globSync","admonitionTypeList","allDynamicLucideImports","iconNameMap","getValidIconData","icons","lucideIcon","logoIconDirectory","getUlldDevRoot","f","a","k"],"mappings":"yCAAA,OAAOA,MAAU,OACjB,OAAS,YAAAC,MAAgB,OACzB,OAAS,sBAAAC,MAA0B,8BACnC,OAAOC,MAA6B,kCACpC,OAAS,eAAAC,MAAmB,0BAWrB,IAAMC,EAAmB,IAAkB,CAC9C,IAAMC,EAAoB,CAAC,EAC3B,QAAWC,KAAcJ,EACrBG,EAAM,KAAK,CACP,KAAM,SACN,KAAMC,CACV,CAAC,EAEL,IAAMC,EAAoBR,EAAK,KAC3BS,EAAe,mBAAmB,EAClC,8BACJ,EACAR,EAAS,gBAAiB,CACtB,IAAKO,EACL,MAAO,EACX,CAAC,EAAE,QAASE,GAAM,CACdJ,EAAM,KAAK,CACP,KAAM,OACN,KAAMN,EAAK,MAAMU,CAAC,EAAE,IACxB,CAAC,CACL,CAAC,EACDR,EAAmB,QAASS,GAAM,CAC9BL,EAAM,KAAK,CACP,KAAM,aACN,KAAMK,CACV,CAAC,CACL,CAAC,EACD,QAAWC,KAAKR,EACZE,EAAM,KAAK,CACP,KAAM,UACN,KAAMM,CACV,CAAC,EAEL,OAAON,CACX","sourcesContent":["import path from \"path\";\nimport { globSync } from \"glob\";\nimport { admonitionTypeList } from \"@ulld/types/admonitionTypes\";\nimport allDynamicLucideImports from \"lucide-react/dynamicIconImports\";\nimport { iconNameMap } from \"@ulld/types/iconNameMap\";\nimport { getUlldDevRoot } from \"../../developmentUtilities/getUlldDevRoot.js\";\n\ntype IconType = \"logo\" | \"lucide\" | \"admonition\" | \"nameMap\";\n\ninterface IconData {\n    type: IconType;\n    name: string;\n}\n\n\nexport const getValidIconData = (): IconData[] => {\n    const icons: IconData[] = [];\n    for (const lucideIcon in allDynamicLucideImports) {\n        icons.push({\n            type: \"lucide\",\n            name: lucideIcon,\n        });\n    }\n    const logoIconDirectory = path.join(\n        getUlldDevRoot(\"getValidIconNames\"),\n        \"packages/icons/src/logoIcons\",\n    );\n    globSync(\"**/*.{ts,tsx}\", {\n        cwd: logoIconDirectory,\n        nodir: true,\n    }).forEach((f) => {\n        icons.push({\n            type: \"logo\",\n            name: path.parse(f).name,\n        });\n    });\n    admonitionTypeList.forEach((a) => {\n        icons.push({\n            type: \"admonition\",\n            name: a,\n        });\n    });\n    for (const k in iconNameMap) {\n        icons.push({\n            type: \"nameMap\",\n            name: k,\n        });\n    }\n    return icons;\n};\n"]}