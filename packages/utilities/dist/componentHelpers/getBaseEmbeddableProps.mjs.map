{"version":3,"sources":["../../src/componentHelpers/getBaseEmbeddableProps.ts"],"names":["getBaseEmbeddableProps","d","defaultClassNames","defaultStyles","cn_default"],"mappings":"wEAeO,IAAMA,EAAyB,CAAwBC,EAAoCC,EAA4BC,KAChH,CACN,UAAWF,EAAE,WAAaC,EAAoBE,EAAGF,EAAmBD,EAAE,SAAS,EAAI,OACnF,GAAIA,EAAE,IAAM,OACZ,MAAO,CACH,GAAGE,EACH,GAAIF,EAAE,OAAS,CAAE,GAAGA,EAAE,KAAM,EAC5B,IAAKA,EAAE,WAAaA,EAAE,eAAiB,CAAE,MAAO,OAAQ,OAAQ,MAAO,CAC3E,CACJ","sourcesContent":["import { CSSProperties, HTMLProps } from \"react\"\nimport cn from \"../utils/cn\"\n\nexport interface BaseEmbeddableComponentProps<T extends HTMLElement> extends HTMLProps<T> {\n    /** Whether component should expand to occupy the entire available space. */\n    fitParent?: boolean\n    /** Alias for fitParent */\n    fitContainer?: boolean\n}\n\n\ninterface FormattedBaseComponentProps<T extends HTMLElement> extends BaseEmbeddableComponentProps<T> {\n    [k: string]: any\n}\n\nexport const getBaseEmbeddableProps = <T extends HTMLElement>(d: BaseEmbeddableComponentProps<T>, defaultClassNames?: string, defaultStyles?: CSSProperties): FormattedBaseComponentProps<T> => {\n    let res = {\n        className: d.className || defaultClassNames ? cn(defaultClassNames, d.className) : undefined,\n        id: d.id || undefined,\n        style: {\n            ...defaultStyles,\n            ...(d.style && { ...d.style }),\n            ...((d.fitParent || d.fitContainer) && { width: \"100%\", height: \"100%\" })\n        }\n    } satisfies FormattedBaseComponentProps<T>\n    return res\n}\n"]}