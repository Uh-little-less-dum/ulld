{"version":3,"sources":["../../../src/loaders/installerComponents/Mathjax.tsx"],"names":[],"mappings":";;;AACA,OAAO,WAAW;AAClB,OAAO,YAA6B;AAG7B,IAAM,mBAAmB,MAAM;AAClC,UAAQ,IAAI,qBAAqB;AACjC,SACI;AAAA,IAAC;AAAA;AAAA,MACG,IAAG;AAAA,MACH,KAAI;AAAA,MACJ,UAAS;AAAA;AAAA,EACb;AAER;AAEO,IAAM,qBAAqB,MAAM;AACpC,UAAQ,IAAI,uBAAuB;AACnC,SACI;AAAA,IAAC;AAAA;AAAA,MACG,IAAG;AAAA,MACH,KAAI;AAAA,MACJ,UAAS;AAAA;AAAA,EACb;AAER;AAMO,IAAM,sBAAsB,MAAM;AACrC,SACI;AAAA,IAAC;AAAA;AAAA,MACG,MAAK;AAAA,MACL,IAAG;AAAA,MACH,UAAS;AAAA;AAAA,IAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaL;AAER;AAOO,IAAM,gBAAgB,CAAC,EAAE,OAAO,MAAM,MAAa;AACtD,MAAI,QAAyC;AAAA,IACzC,OAAO,SAAS,QAAQ,OAAO,KAAK,SAAS,OAAO;AAAA,IACpD,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,KAAK;AAAA,IAChD,QAAQ,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ;AAAA,EAC1D;AACA,SACI,0DACK,MAAM,UACP,oCAAC,yBAAoB,GAEpB,MAAM,OAAO,oCAAC,sBAAiB,GAC/B,MAAM,SAAS,oCAAC,wBAAmB,CACxC;AAER;AAEA,cAAc,cAAc;AAE5B,IAAO,kBAAQ","sourcesContent":["\"use client\";\nimport React from 'react'\nimport Script, { ScriptProps } from \"next/script\";\nimport { MathJaxLoaders } from \"./initialLoader.js\";\n\nexport const MathjaxSvgLoader = () => {\n    console.log(`Loading Mathjax Svg`);\n    return (\n        <Script\n            id=\"mathjax-script\"\n            src=\"/utils/tex-mml-svg.js\"\n            strategy=\"lazyOnload\"\n        />\n    );\n};\n\nexport const MathjaxChtmlLoader = () => {\n    console.log(`Loading Mathjax Chtml`);\n    return (\n        <Script\n            id=\"mathjax-chtml-loader\"\n            src=\"/utils/tex-chtml.js\"\n            strategy=\"beforeInteractive\"\n        />\n    );\n};\n\ninterface Props extends Omit<ScriptProps, \"type\"> {\n    type?: MathJaxLoaders[] | \"all\";\n}\n\nexport const MathjaxConfigScript = () => {\n    return (\n        <Script\n            type=\"text/x-mathjax-config\"\n            id=\"mathjax-settings\"\n            strategy=\"beforeInteractive\"\n        >\n            {`window.MathJax = {\n \"HTML-CSS\": {linebreaks: { automatic: true }},\n  tex: {\n    inlineMath: [['$', '$']]\n  },\n  menuSettings: {\n    autocollapse: true\n  },\n  chtml: {\n    minScale: 0.2,\n    fontURL: \"/font/mathjax\",\n  }\n}`}\n        </Script>\n    );\n};\n\n/* TODO: This current issue with the style element text not matching and forcing a switch to client side rendering might be resolvable by finding the '\\u001B' like syntax for the error output that's replacing quotes and whatnot. Finding those character's and replacing them with actual character's might resolve the issue. */\n/* files if question:  */\n/* - /Users/bigsexy/Desktop/notes/App/node_modules/rehype-mathjax/lib/create-renderer.js */\n/* - /Users/bigsexy/Desktop/notes/App/node_modules/next-mdx-remote/dist/rsc.js */\n\nexport const MathjaxLoader = ({ type = \"all\" }: Props) => {\n    let types: Record<MathJaxLoaders, boolean> = {\n        chtml: type === \"all\" ? true : type.includes(\"chtml\"),\n        svg: type === \"all\" ? true : type.includes(\"svg\"),\n        config: type === \"all\" ? true : type.includes(\"config\"),\n    };\n    return (\n        <>\n            {types.config && (\n            <MathjaxConfigScript />\n            )}\n            {types.svg && <MathjaxSvgLoader />}\n            {types.chtml && <MathjaxChtmlLoader />}\n        </>\n    );\n};\n\nMathjaxLoader.displayName = \"MathjaxLoader\";\n\nexport default MathjaxLoader;\n"]}