{"version":3,"sources":["../src/developmentUtilities/developmentOutput/fileSystemUtils.ts"],"names":["path","fs","DevelopmentOutputFSUtils","opts","content"],"mappings":"AAAA,OAAOA,MAAU,OACjB,OAAOC,MAAQ,KAIR,IAAeC,EAAf,KAAwC,CAGjC,oBAAoBC,EAAgC,CAC1D,GAAIA,EAAK,eACL,OAAOA,EAAK,SAEhB,GAAI,CAAC,QAAQ,IAAI,cACb,MAAM,IAAI,MACN,qFACJ,EAEJ,OAAOH,EAAK,KAAK,QAAQ,IAAI,cAAeG,EAAK,QAAQ,CAC7D,CAGA,aAAaC,EAAiBD,EAA+B,CACpDA,GAGLF,EAAG,cAAc,KAAK,oBAAoBE,CAAI,EAAGC,EAAS,CACtD,SAAU,OACd,CAAC,CACL,CACJ","sourcesContent":["import path from 'path'\nimport fs from 'fs'\nimport type { OutputToFileOpts } from \"./types\";\n\n\nexport abstract class DevelopmentOutputFSUtils {\n\n\n    protected getOutputToFilePath(opts: OutputToFileOpts): string {\n        if (opts.isAbsolutePath) {\n            return opts.filePath;\n        }\n        if (!process.env.ULLD_DEV_ROOT) {\n            throw new Error(\n                `Cannot find ULLD_DEV_ROOT variable. Cannot continue in the DevelopmentOutput class.`,\n            );\n        }\n        return path.join(process.env.ULLD_DEV_ROOT, opts.filePath);\n    }\n\n\n    outputToFile(content: string, opts?: OutputToFileOpts): void {\n        if (!opts) {\n            return;\n        }\n        fs.writeFileSync(this.getOutputToFilePath(opts), content, {\n            encoding: \"utf-8\",\n        });\n    }\n}\n"]}