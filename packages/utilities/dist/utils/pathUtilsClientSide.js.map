{"version":3,"sources":["../../src/utils/pathUtilsClientSide.ts"],"names":[],"mappings":";;;;;;AASO,IAAM,eAAe,CAAC,GAAW,WAAmB;AACvD,SAAO,EAAE,SAAS,MAAM;AAC5B;AAEO,IAAM,eAAe,CAAC,GAAW,WAAmB;AACvD,SAAO,EAAE,SAAS,MAAM,IAAI,IAAI,GAAG,MAAM,GAAG,iBAAiB,CAAC,CAAC;AACnE;AAGO,IAAM,eAAe,CAAC,WAA8B;AACvD,QAAM,KAAK,IAAI,gBAAgB;AAC/B,KAAG,IAAI,YAAY,OAAO,YAAY,KAAK;AAC3C,MAAI,OAAO,kBAAkB;AACzB,OAAG,IAAI,oBAAoB,MAAM;AAAA,EACrC;AACA,SAAO,WAAW,UAAU,OAAO,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC;AAClE","sourcesContent":["import { withForwardSlash } from \"./fsUtils.js\";\nimport monacoLanguages from \"../monaco/languages.js\";\n\nexport interface EditorModalConfig {\n    language?: (typeof monacoLanguages)[number] | \"mdx\";\n    contentId: string;\n    useExistingValue?: boolean;\n}\n\nexport const includesRoot = (p: string, fsRoot: string) => {\n    return p.includes(fsRoot);\n};\n\nexport const makeAbsolute = (p: string, fsRoot: string) => {\n    return p.includes(fsRoot) ? p : `${fsRoot}${withForwardSlash(p)}`;\n};\n\n\nexport const getEditorUrl = (config: EditorModalConfig) => {\n    const sp = new URLSearchParams();\n    sp.set(\"language\", config.language || \"mdx\");\n    if (config.useExistingValue) {\n        sp.set(\"useExistingValue\", \"true\");\n    }\n    return `/editor/${encodeURI(config.contentId)}?${sp.toString()}`;\n};\n"]}