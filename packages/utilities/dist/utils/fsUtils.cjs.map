{"version":3,"sources":["../../src/utils/fsUtils.ts"],"names":[],"mappings":";AAEA,OAAO,WAAW;AAEX,IAAM,mBAAmB,CAAC,MAC7B,EAAE,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC;AAE1B,IAAM,2BAA2B,CAAC,MACrC,OAAO,MAAM,cAAc,SAAY,iBAAiB,CAAC;AAEtD,IAAM,kBAAkB,CAAC,MAC5B,EAAE,SAAS,GAAG,IAAI,EAAE,MAAM,GAAG,EAAE,SAAS,CAAC,IAAI;AAE1C,IAAM,oBAAoB,CAAC,MAAe,EAAE,SAAS,GAAG,IAAI,IAAI,GAAG,CAAC;AAEpE,IAAM,WAAW,CAAC,MAAc;AACnC,MAAI,mBAAmB,KAAK,CAAC,GAAG;AAC5B,WAAO;AAAA,EACX;AACA,MAAG,OAAO,WAAW,aAAY;AAC7B,WAAO;AAAA,EACX;AACA,MAAI,UAAU,QAAQ,UAAU,KAAK,WAAW,MAAM,IAChD,OAAO,SAAS,KAAK,WAAW,OAAO,IACvC,QAAQ,IAAI;AAClB,SAAO,GAAG,UAAU,UAAU,MAAM,MAAM,CAAC;AAC/C;AAEO,IAAM,iBAAiB,CAAC,MAC3B,EAAE,WAAW,GAAG,IAAI,EAAE,MAAM,GAAG,EAAE,MAAM,IAAI;AAExC,IAAM,aAAa,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AACJ,MAIM;AACF,MAAI,IAAI;AACR,MAAI,UAAU,iBAAiB,CAAC,IAAI,eAAe,CAAC;AACpD,MAAI,WAAW,kBAAkB,CAAC,IAAI,gBAAgB,CAAC;AACvD,SAAO;AACX;AAEO,IAAM,YAAY,CAAC,MACtB,EAAE,QAAQ,GAAG,KAAK,IAAI,EAAE,MAAM,GAAG,EAAE,YAAY,GAAG,CAAC,IAAI;AAEpD,IAAM,wBAAwB,CAAC,MAClC,EAAE,QAAQ,GAAG,MAAM,KAAK,IAAI,EAAE,MAAM,EAAE,YAAY,GAAG,IAAI,GAAG,EAAE,MAAM;AAEjE,IAAM,qBAAqB,CAAC,GAAW,WAC1C,iBAAiB,EAAE,QAAQ,MAAM,MAAM,KAAK,IAAI,EAAE,MAAM,MAAM,EAAE,CAAC,CAAC;AAE/D,IAAM,iBAAiB,CAAC,GAAW,WAAmB;AACzD,SAAO,EAAE,SAAS,MAAM,IAClB,IACA,GAAG,MAAM,GAAG,WAAW,EAAE,OAAO,GAAG,SAAS,MAAM,UAAU,MAAM,CAAC,CAAC;AAC9E;AAEO,IAAM,0BAA0B,CACnC,GACA,2BAAoC,MACpC,WACC;AACD,SAAO;AAAA,IACH,QAAQ,2BACF,mBAAmB,UAAU,CAAC,GAAG,MAAM,IACvC,UAAU,CAAC;AAAA,IACjB,UAAU,sBAAsB,CAAC;AAAA,EACrC;AACJ;AAEO,IAAM,gBAAgB,CAAC,SAAiB;AAC3C,SAAO,KAAK,MAAM,GAAG,EAAE,GAAG,EAAE;AAChC;AAEO,IAAM,gBAAgB,CACzB,SACA,OACA,cAAsB,OACrB;AACD,SAAO,QAAQ,WAAW,KAAK,IACzB,GAAG,WAAW,GAAG,QAAQ,MAAM,KAAK,EAAE,CAAC,CAAC,KACxC;AACV;AAEO,IAAM,kBAAkB,CAC3B,SACA,OACA,cAAsB,OACrB;AACD,SAAO,QAAQ,SAAS,KAAK,IACvB,GAAG,QAAQ,MAAM,GAAG,QAAQ,SAAS,MAAM,MAAM,CAAC,GAAG,WAAW,KAChE;AACV;AAEO,IAAM,gBAAgB,OACzB,UACC;AACD,MAAI;AACA,QAAI,MAAM,MAAM,MAAM,KAAK,aAAa,KAAK;AAC7C,QAAG,IAAI,KAAK,WAAU;AAClB,aAAO,IAAI,KAAK;AAAA,IACpB;AAAA,EACJ,SAAS,KAAK;AACV,YAAQ,MAAM,GAAG;AAAA,EACrB;AACJ","sourcesContent":["import { filePathGlobPropsSchema } from \"../schemas/filePath/filePathInput.js\";\nimport { z } from \"zod\";\nimport axios from \"axios\";\n\nexport const withForwardSlash = (p: string) =>\n    p.startsWith(\"/\") ? p : `/${p}`;\n\nexport const withForwardSlashOptional = (p?: string) =>\n    typeof p === \"undefined\" ? undefined : withForwardSlash(p);\n\nexport const noTrailingSlash = (p: string) =>\n    p.endsWith(\"/\") ? p.slice(0, p.length - 1) : p;\n\nexport const withTrailingSlash = (p: string) => (p.endsWith(\"/\") ? p : `${p}/`);\n\nexport const makeHref = (s: string) => {\n    if (/^http(s?):\\/\\//gm.test(s)) {\n        return s;\n    }\n    if(typeof window === \"undefined\"){\n        return s\n    }\n    let isHttps = window?.location?.href.startsWith(\"http\")\n        ? window.location.href.startsWith(\"https\")\n        : process.env.NEXT_PUBLIC_PRODUCTION_REMOTE;\n    return `${isHttps ? \"https\" : \"http\"}://${s}`;\n};\n\nexport const noLeadingSlash = (p: string) =>\n    p.startsWith(\"/\") ? p.slice(1, p.length) : p;\n\nexport const setSlashes = ({\n    value,\n    leading,\n    trailing,\n}: {\n    value: string;\n    leading: boolean;\n    trailing: boolean;\n}) => {\n    let v = value;\n    v = leading ? withForwardSlash(v) : noLeadingSlash(v);\n    v = trailing ? withTrailingSlash(v) : noTrailingSlash(v);\n    return v;\n};\n\nexport const parentDir = (p: string) =>\n    p.indexOf(\"/\") >= 0 ? p.slice(0, p.lastIndexOf(\"/\")) : p;\n\nexport const getFilenameFromString = (p: string) =>\n    p.indexOf(\"/\") === -1 ? p : p.slice(p.lastIndexOf(\"/\") + 1, p.length);\n\nexport const ensureRootRelative = (p: string, fsRoot: string) =>\n    withForwardSlash(p.indexOf(fsRoot) === -1 ? p : p.split(fsRoot)[1]);\n\nexport const ensureAbsolute = (p: string, fsRoot: string) => {\n    return p.includes(fsRoot)\n        ? p\n        : `${fsRoot}${setSlashes({ value: p, leading: true, trailing: false })}`;\n};\n\nexport const getParentDirAndFilename = (\n    p: string,\n    ensureRootRelativeParent: boolean = true,\n    fsRoot: string,\n) => {\n    return {\n        parent: ensureRootRelativeParent\n            ? ensureRootRelative(parentDir(p), fsRoot)\n            : parentDir(p),\n        filename: getFilenameFromString(p),\n    };\n};\n\nexport const fileExtension = (path: string) => {\n    return path.split(\".\").at(-1);\n};\n\nexport const replacePrefix = (\n    content: string,\n    regex: string,\n    replaceWith: string = \"\",\n) => {\n    return content.startsWith(regex)\n        ? `${replaceWith}${content.split(regex)[1]}`\n        : content;\n};\n\nexport const replaceAppendix = (\n    content: string,\n    regex: string,\n    replaceWith: string = \"\",\n) => {\n    return content.endsWith(regex)\n        ? `${content.slice(0, content.length - regex.length)}${replaceWith}`\n        : content;\n};\n\nexport const getFsRootGlob = async (\n    props: z.input<typeof filePathGlobPropsSchema>,\n) => {\n    try {\n        let res = await axios.post(\"/api/glob\", props);\n        if(res.data.filePaths){\n            return res.data.filePaths as string[];\n        }\n    } catch (err) {\n        console.error(err);\n    }\n};\n"]}