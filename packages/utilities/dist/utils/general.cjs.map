{"version":3,"sources":["../../src/utils/general.ts"],"names":[],"mappings":";AAAO,IAAM,qBAAqB,CAAC,OAAe,SAA0B,cAAsB,OAAe;AAC7G,MAAI,OAAO,YAAY,UAAU;AAC7B,QAAI,MAAM,SAAS,OAAO,GAAG;AACzB,aAAO,mBAAmB,MAAM,QAAQ,SAAS,WAAW,GAAG,SAAS,WAAW;AAAA,IACvF;AACA,WAAO;AAAA,EACX;AACA,MAAI,QAAQ,KAAK,KAAK,GAAG;AACrB,WAAO,mBAAmB,MAAM,QAAQ,SAAS,WAAW,GAAG,SAAS,WAAW;AAAA,EACvF;AACA,SAAO;AACX;AAGO,IAAM,eAAe,CAAoB,OAAe,QAAa;AACrE,SAAO,IAAI,QAAQ,IAAI,MAAM;AACpC","sourcesContent":["export const replaceRecursively = (value: string, replace: string | RegExp, replaceWith: string = \"\"): string => {\n    if (typeof replace === \"string\") {\n        if (value.includes(replace)) {\n            return replaceRecursively(value.replace(replace, replaceWith), replace, replaceWith)\n        }\n        return value\n    }\n    if (replace.test(value)) {\n        return replaceRecursively(value.replace(replace, replaceWith), replace, replaceWith)\n    }\n    return value\n}\n\n\nexport const clampInArray = <T extends unknown>(index: number, arr: T[]) => {\n       return arr[index % arr.length]\n}\n"]}