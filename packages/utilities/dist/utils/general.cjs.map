{"version":3,"sources":["../../src/utils/general.ts"],"names":["replaceRecursively","value","replace","replaceWith","clampInArray","index","arr"],"mappings":"8BAAO,IAAMA,EAAqB,CAACC,EAAeC,EAA0BC,EAAsB,KAC1F,OAAOD,GAAY,SACfD,EAAM,SAASC,CAAO,EACfF,EAAmBC,EAAM,QAAQC,EAASC,CAAW,EAAGD,EAASC,CAAW,EAEhFF,EAEPC,EAAQ,KAAKD,CAAK,EACXD,EAAmBC,EAAM,QAAQC,EAASC,CAAW,EAAGD,EAASC,CAAW,EAEhFF,EAIEG,EAAe,CAAoBC,EAAeC,IACjDA,EAAID,EAAQC,EAAI,MAAM","sourcesContent":["export const replaceRecursively = (value: string, replace: string | RegExp, replaceWith: string = \"\"): string => {\n    if (typeof replace === \"string\") {\n        if (value.includes(replace)) {\n            return replaceRecursively(value.replace(replace, replaceWith), replace, replaceWith)\n        }\n        return value\n    }\n    if (replace.test(value)) {\n        return replaceRecursively(value.replace(replace, replaceWith), replace, replaceWith)\n    }\n    return value\n}\n\n\nexport const clampInArray = <T extends unknown>(index: number, arr: T[]) => {\n       return arr[index % arr.length]\n}\n"]}