{"version":3,"sources":["../../../src/utils/colors/convertColorString.ts"],"names":["tinycolor","convertColorString","value","format"],"mappings":"gCAAA,OAAOA,MAAe,aAGf,IAAMC,EAAqB,CAC9BC,EACAC,EAAsC,QACrC,CACD,GAAID,EAAM,QAAQ,KAAK,IAAM,GACzB,OAAOA,EAEX,GAAIC,IAAW,MACX,OAAOH,EAAUE,CAAK,EAAE,YAAY,EAGxC,GAAIC,IAAW,MACX,OAAOH,EAAUE,CAAK,EAAE,YAAY,EAExC,GAAIC,IAAW,MACX,OAAOH,EAAUE,CAAK,EAAE,YAAY,EAExC,GAAIC,IAAW,MACX,OAAOH,EAAUE,CAAK,EAAE,YAAY,CAE5C","sourcesContent":["import tinycolor from \"tinycolor2\";\nimport { AvailableColorStringFormats } from \"../../types/colors.js\";\n\nexport const convertColorString = (\n    value: string,\n    format: AvailableColorStringFormats = \"hsl\",\n) => {\n    if (value.indexOf(\"var\") !== -1) {\n        return value;\n    }\n    if (format === \"hsl\") {\n        return tinycolor(value).toHslString();\n    }\n\n    if (format === \"hex\") {\n        return tinycolor(value).toHexString();\n    }\n    if (format === \"hsv\") {\n        return tinycolor(value).toHsvString();\n    }\n    if (format === \"rgb\") {\n        return tinycolor(value).toRgbString();\n    }\n};\n"]}