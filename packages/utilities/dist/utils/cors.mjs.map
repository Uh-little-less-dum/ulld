{"version":3,"sources":["../../src/utils/cors.ts"],"names":["NextResponse","getCorsHeaders","req","_status","origin","optionsMethodResponse","ctx"],"mappings":"8BACA,OAA2B,gBAAAA,MAAoB,cAExC,IAAMC,EAAiB,CAACC,EAA4BC,EAAkB,MAAQ,CACjF,IAAMC,EAASF,EAAI,QAAQ,IAAI,QAAQ,GAAK,IAC5C,MAAO,CACH,OAAQC,EACR,QAAS,CACL,8BAA+BC,EAC/B,eAAgB,mBAChB,+BAAgC,kCAChC,+BAAgC,6BACpC,CACJ,CACJ,EAEaC,EAAwB,MAAOH,EAA4BI,IAC7D,IAAIN,EAAa,KAAMC,EAAeC,CAAG,CAAC","sourcesContent":["import { RequestContext } from \"next/dist/server/base-server\"\nimport { type NextRequest, NextResponse } from \"next/server\"\n\nexport const getCorsHeaders = (req: NextRequest | Request, _status: number = 200) => {\n    const origin = req.headers.get(\"origin\") || \"*\"\n    return {\n        status: _status,\n        headers: {\n            \"Access-Control-Allow-Origin\": origin,\n            \"Content-Type\": \"application/json\",\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n        }\n    }\n}\n\nexport const optionsMethodResponse = async (req: NextRequest | Request, ctx: RequestContext) => {\n    return new NextResponse(null, getCorsHeaders(req))\n}\n"]}