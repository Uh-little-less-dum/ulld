{"version":3,"sources":["../../src/utils/listUtils.ts"],"names":["randomFromArr","arr","forN","cb","_","i","removeArrayOverlap","data","newData","k"],"mappings":"8BAAO,IAAMA,EAAoCC,GACtCA,EAAI,KAAK,MAAM,KAAK,OAAO,EAAIA,EAAI,MAAM,CAAC,EAKxCC,EAAO,CAAoB,EAAWC,IAC/C,MAAM,CAAC,EACF,KAAK,CAAC,EACN,IAAI,CAACC,EAAGC,IAAMF,EAAGE,CAAC,CAAC,EAGfC,EAAyCC,GAAc,CAChE,IAAIC,EAAe,CAAC,EACpB,QAAWC,KAAKF,EACTC,EAAQ,SAASC,CAAC,GACjBD,EAAQ,KAAKC,CAAC,EAGtB,OAAOD,CACX","sourcesContent":["export const randomFromArr = <T extends unknown>(arr: T[]): T => {\n    return arr[Math.floor(Math.random() * arr.length)] as T\n}\n\n\n\nexport const forN = <T extends unknown>(n: number, cb: (idx: number) => T): T[] =>\n    Array(n)\n        .fill(0)\n        .map((_, i) => cb(i));\n\n\nexport const removeArrayOverlap = <T extends unknown>(data: T[]) => {\n    let newData: T[] = []\n    for (const k of data) {\n       if(!newData.includes(k)){\n            newData.push(k)\n        } \n    }\n    return newData\n}\n"]}