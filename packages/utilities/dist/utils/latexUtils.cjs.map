{"version":3,"sources":["../../src/utils/latexUtils.ts"],"names":[],"mappings":";AAAO,IAAM,sBAAsB,CAAC,GAAW,MAAc;AACzD,MAAI,CAAC,KAAK,OAAO,MAAM;AAAU,WAAO;AACxC,MAAI,IAAI,EAAE,QAAQ,CAAC;AACnB,SAAO,MAAM,MAAM,MAAM,EAAE,YAAY,CAAC;AAC5C;AAEO,IAAM,iBAAiB,CAAC,MAAqB;AAChD,MAAI,CAAC,KAAK,OAAO,MAAM;AAAU,WAAO;AACxC,SAAO,oBAAoB,GAAG,GAAG;AACrC;AAEO,IAAM,eAAe,CAAC,MAAe;AACxC,MAAI,CAAC;AAAG,WAAO;AACf,MAAI,EAAE,SAAS,GAAG,KAAK,EAAE,SAAS,GAAG;AAAG,WAAO;AAC/C,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,EAAE,KAAK,CAAC,MAAM,oBAAoB,GAAG,CAAC,CAAC;AAC3C;AAKO,IAAM,eAAe,CAAC,MAAc,UAAmB,SAAS;AACnE,QAAM,IAAI,UAAU,OAAO;AAC3B,MAAI,OAAO,KAAK,QAAQ,CAAC;AACzB,MAAK,SAAS,MAAQ,SAAS,KAAK,YAAY,CAAC,GAAI;AACjD,WAAO,GAAG,CAAC;AAAA,EACjB,IAAI;AAAA,EACJ,CAAC;AAAA,EACC;AACA,SAAO;AACX","sourcesContent":["export const stringHasPairedKeys = (s: string, k: string) => {\n    if (!s || typeof s !== \"string\") return false\n    let i = s.indexOf(k)\n    return i !== -1 && i !== s.lastIndexOf(k)\n}\n\nexport const stringHasLatex = (s?: string | any) => {\n    if (!s || typeof s !== \"string\") return false\n    return stringHasPairedKeys(s, \"$\")\n}\n\nexport const stringHasMdx = (s?: string) => {\n    if (!s) return false\n    if (s.includes(\"<\") && s.includes(\">\")) return true\n    return [\n        \"_\",\n        \"*\",\n        \"-\",\n        \"$\"\n    ].some((k) => stringHasPairedKeys(s, k))\n}\n\n\n\n\nexport const autoWrapMath = (math: string, display: boolean = true) => {\n    const s = display ? \"$$\" : \"$\"\n    let _idx = math.indexOf(s)\n    if ((_idx === -1) || (_idx === math.lastIndexOf(s))) {\n        return `${s}\n${math}\n${s}`\n    }\n    return math\n}\n\n"]}