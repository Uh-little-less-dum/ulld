{"version":3,"sources":["../../../src/actions/sync/syncRootDirectory.ts"],"names":["toast","syncRootDirectory","resBody","err","errorToastRecord"],"mappings":"4KAAA,OAAS,SAAAA,MAAa,2BAIf,IAAMC,EAAoB,SAAY,CAUzC,IAAIC,EAAU,MATJ,MAAM,MAAM,qBAAsB,CACxC,OAAQ,OACR,KAAM,KAAK,UAAU,CACjB,QAAS,CAAC,UAAU,OAEpB,gBAAiB,GACjB,gBAAiB,EACrB,CAAC,CACL,CAAC,GACuB,KAAK,EAO7B,GAAIA,GAAS,oBAAsBA,GAAS,oBAAoB,OAC5D,QAAWC,KAAOD,EAAQ,mBACtBF,EACII,EAAiBD,EAAI,QAAyC,CAClE,OAEGD,EAAQ,SACfF,EAAM,CACF,MAAO,UACP,YAAa,uCACjB,CAAC,EAEL,MAAO,EACX","sourcesContent":["import { toast } from \"@ulld/tailwind/use-toast\";\nimport { errorToastRecord } from \"../../errorHandling/main\";\n\n\nexport const syncRootDirectory = async () => {\n    let res = await fetch(\"/api/events/onSync\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            offline: !navigator.onLine,\n            // TODO: Actually enable these options through something like a 'hard' sync or the like.\n            removeIfNotInFs: false,\n            cleanBeforeSync: false,\n        }),\n    });\n    let resBody = await res.json();\n    // let res = await axios.post(getDevPath(\"/api/events/onSync\"), {\n    //     offline: !navigator.onLine,\n    //     // TODO: Actually enable these options through something like a 'hard' sync or the like.\n    //     removeIfNotInFs: false,\n    //     cleanBeforeSync: false,\n    // });\n    if (resBody?.errorNotifications && resBody?.errorNotifications?.length) {\n        for (const err of resBody.errorNotifications) {\n            toast(\n                errorToastRecord[err.errorKey as keyof typeof errorToastRecord],\n            );\n        }\n    } else if (resBody.success) {\n        toast({\n            title: \"Success\",\n            description: \"File system was synced with database.\",\n        });\n    }\n    return true;\n};\n"]}