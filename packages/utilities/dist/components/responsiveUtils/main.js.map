{"version":3,"sources":["../../../src/components/responsiveUtils/main.tsx"],"names":[],"mappings":";;;;AAEA,SAAS,qBAAqB;AAQvB,IAAM,gBAAgB,CAAC,EAAE,SAAS,MAA6B;AAClE,QAAM,YAAY,cAAc,EAAE,UAAU,IAAI,CAAC;AACjD,SAAO,YAAY,WAAW;AAClC;AAGO,IAAM,eAAe,CAAC,EAAE,SAAS,MAA6B;AACjE,QAAM,WAAW,cAAc,EAAE,UAAU,KAAK,UAAU,IAAI,CAAC;AAC/D,SAAO,WAAW,WAAW;AACjC;AAGO,IAAM,eAAe,CAAC,EAAE,SAAS,MAA6B;AACjE,QAAM,WAAW,cAAc,EAAE,UAAU,IAAI,CAAC;AAChD,SAAO,WAAW,WAAW;AACjC;AAGO,IAAM,kBAAkB,CAAC,EAAE,SAAS,MAA6B;AACpE,QAAM,cAAc,cAAc,EAAE,UAAU,IAAI,CAAC;AACnD,SAAO,cAAc,WAAW;AACpC","sourcesContent":["\"use client\"\nimport { ReactNode } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\ninterface ScreenResponsiveProps {\n    children: ReactNode;\n}\n\n\n/** minWidth: 992px */\nexport const ScreenDesktop = ({ children }: ScreenResponsiveProps) => {\n    const isDesktop = useMediaQuery({ minWidth: 992 });\n    return isDesktop ? children : null;\n};\n\n/** minWidth: 768px, maxWidth: 991px */\nexport const ScreenTablet = ({ children }: ScreenResponsiveProps) => {\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\n    return isTablet ? children : null;\n};\n\n/** maxWidth: 767px */\nexport const ScreenMobile = ({ children }: ScreenResponsiveProps) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n    return isMobile ? children : null;\n};\n\n/** minWidth: 768px */\nexport const ScreenNotMobile = ({ children }: ScreenResponsiveProps) => {\n    const isNotMobile = useMediaQuery({ minWidth: 768 });\n    return isNotMobile ? children : null;\n};\n"]}