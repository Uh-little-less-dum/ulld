{"version":3,"sources":["../src/classes/file/jsonFile.ts"],"names":["fs","JsonFile","FileData","path","content","indentation","newContent"],"mappings":"yCACA,OAAOA,MAAQ,KAER,IAAMC,EAAN,cAA8CC,CAAS,CAC1D,YAAmBC,EAAc,CAC7B,MAAMA,EAAM,EAAK,EADF,UAAAA,CAEnB,CACA,gBAAoB,CAChB,YAAK,iBAAiB,EACf,KAAK,MAAM,KAAK,WAAW,CAAC,CACvC,CACA,aAAaC,EAA2BC,EAAsB,EAAS,CACnE,IAAIC,EAAaF,GAAW,KAAK,QACjC,GAAI,CAACE,EACD,MAAM,IAAI,MAAM,6CAA6C,EAE7D,OAAOA,GAAe,WACtBA,EAAa,KAAK,UAAUA,EAAY,KAAMD,CAAW,GAE7DL,EAAG,cAAc,KAAK,KAAMM,EAAY,CAAE,SAAU,OAAQ,CAAC,CACjE,CACJ","sourcesContent":["import { FileData } from \"./main.js\";\nimport fs from \"fs\";\n\nexport class JsonFile<T extends object = {}> extends FileData {\n    constructor(public path: string) {\n        super(path, false);\n    }\n    getJsonContent(): T {\n        this.throwIfNotExists();\n        return JSON.parse(this.getContent());\n    }\n    writeContent(content?: string | object, indentation: number = 2): void {\n        let newContent = content || this.content;\n        if (!newContent) {\n            throw new Error(`Cannot write content. No content was found.`);\n        }\n        if (typeof newContent === \"object\") {\n            newContent = JSON.stringify(newContent, null, indentation);\n        }\n        fs.writeFileSync(this.path, newContent, { encoding: \"utf-8\" });\n    }\n}\n"]}