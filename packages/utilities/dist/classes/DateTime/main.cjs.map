{"version":3,"sources":["../../../src/classes/DateTime/main.ts"],"names":["duration"],"mappings":"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","sourcesContent":["import dayjs, { Dayjs } from \"dayjs\";\nimport advancedFormat from \"dayjs/plugin/advancedFormat\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport utc from \"dayjs/plugin/utc\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport duration from \"dayjs/plugin/duration\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { TimeDisplayType } from \"./dateTimeUtils\";\nimport { AppConfigSchemaOutput } from \"@ulld/types\";\ndayjs.extend(customParseFormat);\ndayjs.extend(duration);\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\ndayjs.extend(timezone);\ndayjs.extend(advancedFormat);\n\nexport const timePeriodOptions = [\n    \"24 hours\",\n    \"1 week\",\n    \"30 Days\",\n    \"60 Days\",\n    \"90 Days\",\n    \"6 Months\",\n    \"Previous Year\",\n    \"Year to Date\",\n    \"All Time\",\n] as const;\n\nexport type TimePeriodOption = (typeof timePeriodOptions)[number];\n\nexport class DateTime {\n    t: Date;\n    dayjs: Dayjs;\n    withoutSuffix: boolean = false;\n    timezone: string;\n    flat: boolean = false;\n    constructor(\n        t: Date | string,\n        public config?: AppConfigSchemaOutput,\n    ) {\n        this.timezone = config?.dateHandling.defaultTimeZone || this.getTimezone();\n        if (this.timezone) {\n            dayjs.tz.setDefault(this.timezone);\n        }\n        this.dayjs = t instanceof Date ? dayjs(t) : dayjs(t).tz(this.timezone);\n        this.t = this.dayjs.toDate();\n    }\n\n    private getTimezone() {\n        return (\n            Intl.DateTimeFormat().resolvedOptions().timeZone || \"America/Chicago\"\n        );\n    }\n\n    djs(t: Date | string | Dayjs) {\n        return dayjs.tz(t, this.timezone);\n    }\n\n    updateOnInterval(\n        intervalSeconds: number,\n        type: TimeDisplayType,\n        callback: (s: string) => void,\n    ) {\n        let interval = setInterval(() => {\n            callback(this.relativeTime(type));\n        }, intervalSeconds * 1000);\n        return interval;\n    }\n\n    formatDate(withTime?: boolean) {\n        const formatStr = withTime ? \"MMM Do YYYY [at] h:mm a\" : \"MMM Do YYYY\";\n        return this.dayjs.local().format(formatStr);\n    }\n\n    now(asValue: boolean = false) {\n        return asValue ? new Date().valueOf() : new Date();\n    }\n\n    secondDifference(fromTo: Date = new Date()) {\n        return this.dayjs.local().diff(fromTo, \"seconds\");\n    }\n\n    diffAsDuration(t: Date = new Date()) {\n        return dayjs.duration(this.secondDifference(t), \"seconds\");\n    }\n\n    formatTimeDiff(duration?: duration.Duration, t: Date = new Date()) {\n        let dur = duration || this.diffAsDuration(t);\n        return {\n            years: dur.years(),\n            days: dur.days(),\n            asDays: dur.asDays(),\n            months: dur.months(),\n            hours: dur.hours(),\n            minutes: dur.minutes(),\n            seconds: dur.seconds(),\n        };\n    }\n\n    private getDiffBaseString(duration: duration.Duration) {\n        let days = duration.days();\n        let months = duration.months();\n        let s = \"\";\n        if (this.flat) {\n            let asDays = Math.floor(duration.asDays());\n            if (asDays > 0) s += `[${asDays} ${asDays === 1 ? \"day\" : \"days\"} ]`;\n        } else {\n            if (months > 0) s += months === 1 ? \"M [month] \" : \"M [months] \";\n            if (days > 0) s += days === 1 ? \"D [day] \" : \"D [days] \";\n        }\n        return s;\n    }\n\n    private relativeTimeAnalog() {\n        let duration = this.diffAsDuration();\n        let s = this.getDiffBaseString(duration);\n        return duration.format(`${s} HH:mm:ss`);\n    }\n\n    private relativeTimeDescriptive() {\n        let duration = this.diffAsDuration();\n        let s = this.getDiffBaseString(duration);\n        let dt = this.formatTimeDiff(duration);\n        if (dt.hours) s += dt.hours === 1 ? \"H [hour] \" : \"H [hours] \";\n        if (dt.minutes) s += dt.minutes === 1 ? \"m [minute] \" : \"m [minutes] \";\n        if (dt.seconds) s += dt.seconds === 1 ? \"ss [second] \" : \"ss [seconds] \";\n        return duration.format(s.trim());\n    }\n\n    private relativeTimeSummarized() {\n        return this.dayjs.local().fromNow(this.withoutSuffix);\n    }\n\n    replaceExtraNegatives(t: string) {\n        let f1 = t.indexOf(\"-\");\n        let f2 = t.lastIndexOf(\"-\");\n        if (f1 < 0 || f1 === f2) {\n            return t;\n        }\n        return `${t.slice(0, f1 + 1)}${t.slice(f1, t.length).replaceAll(\"-\", \"\")}`;\n    }\n\n    relativeTime(type: \"descriptive\" | \"analog\" | \"summarized\") {\n        if (type === \"analog\")\n            return this.replaceExtraNegatives(this.relativeTimeAnalog());\n        if (type === \"summarized\")\n            return this.replaceExtraNegatives(this.relativeTimeSummarized());\n        if (type === \"descriptive\")\n            return this.replaceExtraNegatives(this.relativeTimeDescriptive());\n        return \"\";\n    }\n\n    startOfDay() {\n        return dayjs().startOf(\"day\");\n    }\n\n    dayOfWeek() {\n        return dayjs().get(\"day\");\n    }\n\n    static filterByDateRange<T extends unknown>(\n        items: T[],\n        getDate: (item: T) => Date,\n        start: Date | string,\n        end?: Date | string,\n    ) {\n        let returnItems: T[] = [];\n        let startValue = (\n            typeof start === \"string\" ? new Date(start) : start\n        ).valueOf();\n        let endValue = (\n            typeof end === \"undefined\"\n                ? new Date()\n                : typeof end === \"string\"\n                    ? new Date(end)\n                    : end\n        ).valueOf();\n        for (const k of items) {\n            let val = getDate(k).valueOf();\n            if (val >= startValue && val <= endValue) {\n                returnItems.push(k);\n            }\n        }\n        return returnItems;\n    }\n    static formatDate(d: Date | string | number, withTime?: boolean, formatString?: string) {\n        const formatStr = formatString ? formatString : withTime ? \"MMM Do YYYY [at] h:mm a\" : \"MMM Do YYYY\";\n        return dayjs(d).format(formatStr);\n    }\n    static formattedQuantityToString(d: {\n        hours: number;\n        minutes: number;\n        seconds: number;\n    }) {\n        let s = \"\";\n        if (d.hours > 0) {\n            s += `${d.hours}:`;\n        }\n        if (d.minutes > 0) {\n            s += `${d.minutes}:`;\n        }\n        s += `${d.seconds > 0 ? d.seconds : \"00\"}`;\n        return s;\n    }\n    static formattedQuantityToDescriptiveString(d: {\n        hours: number;\n        minutes: number;\n        seconds: number;\n    }) {\n        let s = \"\";\n        if (d.hours > 0) {\n            s += `${d.hours} ${d.hours === 1 ? \"hour\" : \"hours\"} `;\n        }\n        if (d.minutes > 0) {\n            s += `${d.minutes} ${d.minutes === 1 ? \"minute\" : \"minutes\"} `;\n        }\n        if (d.seconds > 0) {\n            s += `${d.seconds} ${d.seconds === 1 ? \"second\" : \"seconds\"} `;\n        }\n        return s;\n    }\n    static formatTimeQuantity(seconds: number) {\n        let hr = Math.floor(seconds / 3600);\n        let min = Math.floor((seconds - hr * 3600) / 60);\n        let sec = Math.floor(seconds - (hr * 3600 + min * 60));\n        return {\n            hours: hr,\n            minutes: min,\n            seconds: sec,\n        };\n    }\n    static getTimePeriod(opt: TimePeriodOption) {\n        let timePeriodRecord: Record<\n            TimePeriodOption,\n            number | ((d: Date) => number)\n        > = {\n            \"24 hours\": 86400000,\n            \"1 week\": 604800000,\n            \"30 Days\": 2592000000, // 60 * 60 * 24 * 30 * 1000\n            \"60 Days\": 5184000000,\n            \"90 Days\": 7776000000,\n            \"Previous Year\": 31536000000, // 60 * 60 * 24 * 365 * 1000\n            \"6 Months\": 15768000000,\n            \"Year to Date\": (d) =>\n                d.valueOf() - new Date(`1/1/${d.getFullYear()}`).valueOf(),\n            \"All Time\": (d) => d.valueOf() - new Date(`1/1/1970`).valueOf(),\n        };\n        let f = timePeriodRecord[opt];\n        let _now = new Date();\n        if (typeof f === \"function\") {\n            return new Date(_now.valueOf() - f(_now));\n        } else {\n            return new Date(_now.valueOf() - f);\n        }\n    }\n    static thirtyDaysAgo() {\n        let n = 2592000000; // 60 * 60 * 24 * 30 * 1000\n        return new Date(new Date().valueOf() - n);\n    }\n    static consistentlyFormatDay(val: Date) {\n        return `${val.getMonth() + 1}/${val.getDate()}/${val.getFullYear()}`;\n    }\n    static groupByDay<J extends unknown>(\n        items: J[],\n        getDate: ((item: J) => Date | null),\n    ) {\n        let days: Record<string, J[]> = {};\n        for (const k of items) {\n            let d = getDate(k);\n            if (d) {\n                let s = DateTime.consistentlyFormatDay(d);\n                if (!(s in days)) {\n                    days[s] = [];\n                }\n                days[s].push(k);\n            }\n        }\n        return days;\n    }\n    static groupByHour<J extends unknown>(\n        items: J[],\n        getDate: ((item: J) => Date | null),\n    ) {\n        let days: Record<string, J[]> = {};\n        for (const k of items) {\n            let d = getDate(k);\n            if (d) {\n                let v = dayjs(d)\n                let s = v.format(\"HH\")\n                if (!(s in days)) {\n                    days[s] = [];\n                }\n                days[s].push(k);\n            }\n        }\n        return days;\n    }\n}\n\nexport const ensureDate = <T extends Date | null | undefined>(\n    d: Date | string | undefined | null,\n    _default: \"item\" | \"null\" | \"now\" | \"undefined\" = \"null\",\n) => {\n    return (\n        d instanceof Date\n            ? d\n            : typeof d === \"string\"\n                ? new Date(d)\n                : _default === \"item\"\n                    ? d\n                    : _default === \"now\"\n                        ? new Date()\n                        : _default === \"undefined\"\n                            ? undefined\n                            : null\n    ) as Date | T;\n};\n"]}