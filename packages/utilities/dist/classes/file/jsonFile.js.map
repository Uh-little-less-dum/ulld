{"version":3,"sources":["../../../src/classes/file/jsonFile.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,QAAQ;AAER,IAAM,WAAN,cAA8C,SAAS;AAAA,EAC1D,YAAmB,MAAc;AAC7B,UAAM,MAAM,KAAK;AADF;AAAA,EAEnB;AAAA,EACA,iBAAoB;AAChB,SAAK,iBAAiB;AACtB,WAAO,KAAK,MAAM,KAAK,WAAW,CAAC;AAAA,EACvC;AAAA,EACA,aAAa,SAA2B,cAAsB,GAAS;AACnE,QAAI,aAAa,WAAW,KAAK;AACjC,QAAI,CAAC,YAAY;AACb,YAAM,IAAI,MAAM,6CAA6C;AAAA,IACjE;AACA,QAAI,OAAO,eAAe,UAAU;AAChC,mBAAa,KAAK,UAAU,YAAY,MAAM,WAAW;AAAA,IAC7D;AACA,OAAG,cAAc,KAAK,MAAM,YAAY,EAAE,UAAU,QAAQ,CAAC;AAAA,EACjE;AACJ","sourcesContent":["import { FileData } from \"./main.js\";\nimport fs from \"fs\";\n\nexport class JsonFile<T extends object = {}> extends FileData {\n    constructor(public path: string) {\n        super(path, false);\n    }\n    getJsonContent(): T {\n        this.throwIfNotExists();\n        return JSON.parse(this.getContent());\n    }\n    writeContent(content?: string | object, indentation: number = 2): void {\n        let newContent = content || this.content;\n        if (!newContent) {\n            throw new Error(`Cannot write content. No content was found.`);\n        }\n        if (typeof newContent === \"object\") {\n            newContent = JSON.stringify(newContent, null, indentation);\n        }\n        fs.writeFileSync(this.path, newContent, { encoding: \"utf-8\" });\n    }\n}\n"]}