{"version":3,"sources":["../../../src/classes/glob/main.ts"],"names":["globSync","path","UlldGlob","fsRoot","pattern","ignore","includeDirs","f","fileType","FileData"],"mappings":"8EAAA,OAAS,YAAAA,MAAgB,OAGzB,OAAOC,MAAU,OAGV,IAAMC,EAAN,KAAe,CAClB,YAAmBC,EAAgB,CAAhB,YAAAA,CAAkB,CAErC,KAAKC,EAAiBC,EAAmB,CAAC,kBAAkB,EAAGC,EAAuB,GAAM,CACxF,OAAON,EAASI,EAAS,CACrB,IAAK,KAAK,OACV,OAAQC,EACR,MAAO,CAACC,CACZ,CAAC,EAAE,IAAKC,GAAMN,EAAK,KAAK,KAAK,OAAQM,CAAC,CAAC,CAC3C,CACA,gBAAgBC,EAA6B,CACzC,OAAO,KAAK,KAAK,QAAQA,CAAQ,EAAE,EAAE,IAAKD,GAAMN,EAAK,KAAK,KAAK,OAAQM,CAAC,CAAC,CAC7E,CACA,YAAYC,EAA6B,CACrC,OAAO,KAAK,gBAAgBA,CAAQ,EAAE,IAAKD,GAAM,IAAIE,EAASF,CAAC,CAAC,CACpE,CACJ","sourcesContent":["import { globSync } from \"glob\";\nimport { SupportedFileType } from \"@ulld/types/enums\";\nimport { FileData } from \"../file/main.js\";\nimport path from \"path\";\n\n\nexport class UlldGlob {\n    constructor(public fsRoot: string) { }\n    /** Returns paths as absolute paths */\n    glob(pattern: string, ignore: string[] = [\"**node_modules**\"], includeDirs: boolean = true) {\n        return globSync(pattern, {\n            cwd: this.fsRoot,\n            ignore: ignore,\n            nodir: !includeDirs\n        }).map((f) => path.join(this.fsRoot, f))\n    }\n    filePathsOfType(fileType: SupportedFileType) {\n        return this.glob(`**/*.${fileType}`).map((f) => path.join(this.fsRoot, f));\n    }\n    filesOfType(fileType: SupportedFileType) {\n        return this.filePathsOfType(fileType).map((f) => new FileData(f));\n    }\n}\n"]}