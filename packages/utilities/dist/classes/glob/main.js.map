{"version":3,"sources":["../../../src/classes/glob/main.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,gBAAgB;AAGzB,OAAO,UAAU;AAGV,IAAM,WAAN,MAAe;AAAA,EAClB,YAAmB,QAAgB;AAAhB;AAAA,EAAkB;AAAA;AAAA,EAErC,KAAK,SAAiB,SAAmB,CAAC,kBAAkB,GAAG,cAAuB,MAAM;AACxF,WAAO,SAAS,SAAS;AAAA,MACrB,KAAK,KAAK;AAAA,MACV;AAAA,MACA,OAAO,CAAC;AAAA,IACZ,CAAC,EAAE,IAAI,CAAC,MAAM,KAAK,KAAK,KAAK,QAAQ,CAAC,CAAC;AAAA,EAC3C;AAAA,EACA,gBAAgB,UAA6B;AACzC,WAAO,KAAK,KAAK,QAAQ,QAAQ,EAAE,EAAE,IAAI,CAAC,MAAM,KAAK,KAAK,KAAK,QAAQ,CAAC,CAAC;AAAA,EAC7E;AAAA,EACA,YAAY,UAA6B;AACrC,WAAO,KAAK,gBAAgB,QAAQ,EAAE,IAAI,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC;AAAA,EACpE;AACJ","sourcesContent":["import { globSync } from \"glob\";\nimport { SupportedFileType } from \"@ulld/types/enums\";\nimport { FileData } from \"../file/main.js\";\nimport path from \"path\";\n\n\nexport class UlldGlob {\n    constructor(public fsRoot: string) { }\n    /** Returns paths as absolute paths */\n    glob(pattern: string, ignore: string[] = [\"**node_modules**\"], includeDirs: boolean = true) {\n        return globSync(pattern, {\n            cwd: this.fsRoot,\n            ignore: ignore,\n            nodir: !includeDirs\n        }).map((f) => path.join(this.fsRoot, f))\n    }\n    filePathsOfType(fileType: SupportedFileType) {\n        return this.glob(`**/*.${fileType}`).map((f) => path.join(this.fsRoot, f));\n    }\n    filesOfType(fileType: SupportedFileType) {\n        return this.filePathsOfType(fileType).map((f) => new FileData(f));\n    }\n}\n"]}