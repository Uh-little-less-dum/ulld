{"version":3,"sources":["../src/utils/generatedUtils/getInternalLocationsAndActions.ts"],"names":["getInternalLocationsAndActions","items","loc","internalAppLocationsLabelMap","actionId","internalGlobalActionsIdMap"],"mappings":"6EAmBO,IAAMA,EAAiC,IAAmC,CAC7E,IAAMC,EAAqC,CAAC,EAC5C,QAAWC,KAAOC,EACdF,EAAM,KAAK,CACP,KAAM,MACN,MAAOE,EAA6BD,CAA6B,EACjE,GAAIA,CACR,CAAC,EAEL,QAAWE,KAAYC,EACnBJ,EAAM,KAAK,CACP,KAAM,SACN,GAAIG,EACJ,MAAOC,EAA2BD,CAAmC,EAAE,MACvE,YAAaC,EAA2BD,CAAmC,EAAE,WACjF,CAAC,EAEL,OAAOH,CACX","sourcesContent":["import type { ValidIconName } from \"@ulld/types/types\"\nimport type {InternalAppLocationIds} from \"./internalAppLocations\";\nimport { internalAppLocationsLabelMap} from \"./internalAppLocations\"\nimport type {InternalGlobalActionIds} from \"./internalGlobalActions\";\nimport { internalGlobalActionsIdMap} from \"./internalGlobalActions\"\n\nexport type InternalLocationAndAction = {\n    type: \"action\"\n    id: InternalGlobalActionIds\n    label: string\n    defaultIcon: ValidIconName\n} | {\n    type: \"url\"\n    id: InternalAppLocationIds\n    label: string\n}\n\n\n// RESUME: Come back here and handle the generation of all location data dynamically from a single source of truth, and use that to more reliably implement the internal locations input. Need to then adjust the sidebar form to allow for seperating by position.\nexport const getInternalLocationsAndActions = (): InternalLocationAndAction[] => {\n    const items: InternalLocationAndAction[] = []\n    for (const loc in internalAppLocationsLabelMap) {\n        items.push({\n            type: \"url\",\n            label: internalAppLocationsLabelMap[loc as InternalAppLocationIds],\n            id: loc as InternalAppLocationIds\n        })\n    }\n    for (const actionId in internalGlobalActionsIdMap) {\n        items.push({\n            type: \"action\",\n            id: actionId as InternalGlobalActionIds,\n            label: internalGlobalActionsIdMap[actionId as InternalGlobalActionIds].label,\n            defaultIcon: internalGlobalActionsIdMap[actionId as InternalGlobalActionIds].defaultIcon,\n        })\n    }\n    return items\n}\n"]}