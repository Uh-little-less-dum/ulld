{"version":3,"sources":["../../src/navigation/getTocFromContent.ts"],"names":["getTableOfContents","getLatexTocEntries","toc","content","titles","f","t","entry","newTitle","parseMarkdownTitle","getTocFromContent","tocItems"],"mappings":"wEAAA,OAAS,sBAAAA,MAAuC,uBAOzC,IAAMC,EAAqB,CAC9BC,EAAqB,CAAC,EACtBC,IACC,CACD,IAAIC,EAASD,EAAQ,MAAM;AAAA,CAAI,EAAE,OAAQE,GAAMA,EAAE,KAAK,EAAE,WAAW,GAAG,CAAC,EACnEC,EAAoB,CAAC,EACzB,OAAIJ,EAAI,SAAWE,EAAO,QACtB,QAAQ,MACJ,uDAAuDF,EAAI,MAAM,2BAA2BE,EAAO,MAAM,GAC7G,EAEJF,EAAI,QAAQ,CAACK,EAAO,IAAM,CACtB,IAAMC,EAAWJ,EAAO,CAAC,EAAE,KAAK,EAChCE,EAAE,KAAK,CACH,GAAGC,EACH,MAAOE,EAAmBD,CAAQ,CAItC,CAAC,CACL,CAAC,EACMF,CACX,EAMaI,EAAoB,MAAOP,GAAoB,CACxD,IAAIQ,EAAW,MAAMX,EAAmBG,CAAO,EAC/C,OAAOF,EACHU,EACAR,CACJ,CACJ","sourcesContent":["import { getTableOfContents, TOCItemType } from 'fumadocs-core/server';\nimport { parseMarkdownTitle } from '../additionalParsers/mdx/getContentHeadings.js';\n\n\nexport type { TOCItemType }\n\n\nexport const getLatexTocEntries = (\n    toc: TOCItemType[] = [],\n    content: string,\n) => { \n    let titles = content.split(\"\\n\").filter((f) => f.trim().startsWith(\"#\"));\n    let t: TOCItemType[]  = [];\n    if (toc.length !== titles.length) {\n        console.error(\n            `Found different lengths for the toc. Fumadocs found ${toc.length} entries, and you found ${titles.length}.`,\n        );\n    }\n    toc.forEach((entry, i) => {\n        const newTitle = titles[i].trim();\n        t.push({\n            ...entry,\n            title: parseMarkdownTitle(newTitle),\n            // Removed this. No longer checking for validity and relying only on index. THe validity check was unreliable previously, but if this causes new issues revisit this.\n            // let s = Array(entry.depth).fill(\"#\").join(\"\");\n            // title: titles[i].startsWith(s) ? parseTitle(newTitle) : entry.title,\n        });\n    });\n    return t;\n};\n\n\n\n\n\nexport const getTocFromContent = async (content: string) => {\n    let tocItems = await getTableOfContents(content)\n    return getLatexTocEntries(\n        tocItems,\n        content\n    )\n}\n"]}