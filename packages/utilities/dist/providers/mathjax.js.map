{"version":3,"sources":["../../src/providers/mathjax.tsx"],"names":["MathJaxContext","React","mathJaxOptions","MathjaxProvider","children","className","mathjax_default"],"mappings":"0CACA,OAAS,kBAAAA,MAA2C,uBACpD,OAAOC,MAA0B,QAc1B,IAAMC,EAAsC,CAC/C,OAAQ,CACJ,IAAK,CACD,WAAY,CAAC,CAAC,IAAK,GAAG,CAAC,EACvB,YAAa,CAAC,CAAC,KAAM,IAAI,CAAC,CAC9B,EACA,QAAS,CACL,MAAO,IAAM,CAET,QAAQ,QAAQ,aAAa,EAE7B,QAAQ,QAAQ,QAAQ,KAAK,IAAM,CAC/B,OAAO,cAAc,IAAI,YAAY,gBAAgB,CAAC,CAC1D,CAAC,CACL,CACJ,CACJ,EACA,IACI,QAAQ,IAAI,WAAa,aACnB,0DACA,sBACV,OAAQ,IAAM,CACV,OAAO,cAAc,IAAI,YAAY,gBAAgB,CAAC,EACtD,QAAQ,IAAI,mBAAmB,CACnC,CACJ,EAEMC,EAAkB,CAAC,CAAE,SAAAC,EAAU,UAAAC,CAAU,IAEvCJ,EAAA,cAACD,EAAA,CACI,GAAGE,GAEHG,EAAYJ,EAAA,cAAC,OAAI,UAAWI,GAAYD,CAAS,EAASA,CAC/D,EAIRD,EAAgB,YAAc,kBAE9B,IAAOG,EAAQH","sourcesContent":["\"use client\";\nimport { MathJaxContext, MathJaxContextProps } from \"better-react-mathjax\";\nimport React, { ReactNode } from \"react\";\n\ninterface MathjaxProviderProps {\n    children: ReactNode;\n    className?: string;\n}\n\ndeclare global {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n    interface WindowEventMap {\n        \"mathjax-loaded\": CustomEvent;\n    }\n}\n\nexport const mathJaxOptions: MathJaxContextProps = {\n    config: {\n        tex: {\n            inlineMath: [[\"$\", \"$\"]],\n            displayMath: [[\"$$\", \"$$\"]],\n        },\n        startup: {\n            ready: () => {\n                /* @ts-ignore */\n                MathJax.startup.defaultReady();\n                /* @ts-ignore */\n                MathJax.startup.promise.then(() => {\n                    window.dispatchEvent(new CustomEvent(\"mathjax-loaded\"));\n                });\n            },\n        },\n    },\n    src:\n        process.env.NODE_ENV === \"production\"\n            ? \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js\"\n            : \"/utils/tex-chtml.js\",\n    onLoad: () => {\n        window.dispatchEvent(new CustomEvent(\"mathjax-loaded\"));\n        console.log(`Mathjax loaded...`);\n    },\n};\n\nconst MathjaxProvider = ({ children, className }: MathjaxProviderProps) => {\n    return (\n        <MathJaxContext\n            {...mathJaxOptions}\n        >\n            {className ? <div className={className}>{children}</div> : children}\n        </MathJaxContext>\n    );\n};\n\nMathjaxProvider.displayName = \"MathjaxProvider\";\n\nexport default MathjaxProvider;\n"]}