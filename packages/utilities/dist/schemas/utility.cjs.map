{"version":3,"sources":["../../src/schemas/utility.ts"],"names":[],"mappings":";AAAA,OAAO,WAAW;AAClB,SAAS,SAAS;AAEX,IAAM,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS;AACjD,IAAM,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS;AAEjD,IAAM,aAAa,CAAC,WAAoB,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAG,EAAE,OAAO,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,MAAM,EAAE,UAAU,OAAK,OAAO,MAAM,YAAY,IAAI,MAAM,MAAM;AAGzK,IAAM,kBAAkB,CAAC,WAAoB,OAAO,kBAAwB;AAC/E,MAAI,UAAU;AACV,WAAO,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,SAAS,GAAG,EAAE,OAAO,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,OAAK;AAC/F,UAAI,MAAM,CAAC,EAAE,QAAQ,GAAG;AACpB,eAAO,IAAI,KAAK,CAAW;AAAA,MAC/B;AACA,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AACA,SAAO,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,SAAS,GAAG,EAAE,OAAO,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,UAAU,OAAK;AACzE,WAAO,IAAI,KAAK,CAAW;AAAA,EAC/B,CAAC;AACL","sourcesContent":["import dayjs from \"dayjs\"\nimport { z } from \"zod\"\n\nexport const zodOptStr = z.string().optional().nullable()\nexport const zodOptNum = z.number().optional().nullable()\n\nexport const zodOptBool = (defVal: boolean) => z.union([z.boolean(), z.string()]).optional().nullable().default(defVal).transform(a => typeof a === \"boolean\" ? a : a === \"true\")\n\n\nexport const zodCoerceToDate = (optional: boolean = false, defaultReturn?: any) => {\n    if (optional) {\n        return z.union([z.string().datetime(), z.number(), z.date()]).optional().nullable().transform(a => {\n            if (dayjs(a).isValid()) {\n                return new Date(a as string)\n            }\n            return defaultReturn\n        })\n    }\n    return z.union([z.string().datetime(), z.number(), z.date()]).transform(a => {\n        return new Date(a as string)\n    })\n}\n"]}