{"version":3,"sources":["../../../src/types/packageJson/packageJsonType.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from \"zod\";\nimport { licenseUnion } from \"./licenseUnion.js\";\n\nconst exportFieldObject = z.object({\n    types: z.string().optional(),\n    import: z.string().optional(),\n    require: z.string().optional(),\n})\n\nexport const ulldCompletePackageJsonSchema = z.object({\n    name: z\n        .string()\n        .max(214)\n        .refine((a) => {\n            return a.toLowerCase() === a;\n        }),\n    version: z.string().optional().default(\"0.0.0\"),\n    exports: z.record(z.string(), z.string().or(exportFieldObject)).optional(),\n    files: z.string().array().optional().default([\"src\"]),\n    dependencies: z.record(z.string(), z.string()),\n    packageManager: z.string().optional().default(\"pnpm@8.1.1\"),\n    devDependencies: z.record(z.string(), z.string()).optional(),\n    peerDependencies: z.record(z.string(), z.string()).optional(),\n    peerDependenciesMeta: z.any().optional(),\n    optionalDependencies: z.record(z.string(), z.string()).optional(),\n    bundleDependencies: z.record(z.string(), z.string()).optional(),\n    type: z.string().optional(),\n    scripts: z.record(z.string(), z.string()).optional(),\n    private: z.boolean().optional(),\n    os: z.string().array().optional(),\n    cpu: z.string().array().optional(),\n    workspaces: z.string().array().optional(),\n    funding: z\n        .object({\n            type: z.union([z.literal(\"individual\"), z.literal(\"patreon\")]),\n            url: z.string().url(),\n        })\n        .optional(),\n    main: z.string().optional(),\n    bin: z.string().optional(),\n    man: z.union([\n        z.string(),\n        z.string().array()\n    ]).optional(),\n    keywords: z\n        .string()\n        .array()\n        .default([\"ulld-plugin\"])\n        .transform((a) => {\n            if (!a.includes(\"ulld-plugin\")) {\n                a.push(\"ulld-plugin\");\n            }\n            return a;\n        }),\n    homepage: z.string().url().optional(),\n    license: licenseUnion.default(\"MIT\"),\n    people: z\n        .union([\n            z.object({\n                name: z.string(),\n                email: z.string().email().optional(),\n                url: z.string().url().optional(),\n            }),\n            z.object({\n                author: z.string(),\n            }),\n        ])\n        .optional(),\n    description: z.string().optional()\n});\n\nexport type PackageJsonType = z.input<typeof ulldCompletePackageJsonSchema>;\n"]}