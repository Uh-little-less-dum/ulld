{"version":3,"sources":["../../../src/types/packageJson/packageJsonType.ts"],"names":["z","exportFieldObject","ulldCompletePackageJsonSchema","a","licenseUnion"],"mappings":"8EAAA,OAAS,KAAAA,MAAS,MAGlB,IAAMC,EAAoBD,EAAE,OAAO,CAC/B,MAAOA,EAAE,OAAO,EAAE,SAAS,EAC3B,OAAQA,EAAE,OAAO,EAAE,SAAS,EAC5B,QAASA,EAAE,OAAO,EAAE,SAAS,CACjC,CAAC,EAEYE,EAAgCF,EAAE,OAAO,CAClD,KAAMA,EACD,OAAO,EACP,IAAI,GAAG,EACP,OAAQG,GACEA,EAAE,YAAY,IAAMA,CAC9B,EACL,QAASH,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,OAAO,EAC9C,QAASA,EAAE,OAAOA,EAAE,OAAO,EAAGA,EAAE,OAAO,EAAE,GAAGC,CAAiB,CAAC,EAAE,SAAS,EACzE,MAAOD,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,EACpD,aAAcA,EAAE,OAAOA,EAAE,OAAO,EAAGA,EAAE,OAAO,CAAC,EAC7C,eAAgBA,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,YAAY,EAC1D,gBAAiBA,EAAE,OAAOA,EAAE,OAAO,EAAGA,EAAE,OAAO,CAAC,EAAE,SAAS,EAC3D,iBAAkBA,EAAE,OAAOA,EAAE,OAAO,EAAGA,EAAE,OAAO,CAAC,EAAE,SAAS,EAC5D,qBAAsBA,EAAE,IAAI,EAAE,SAAS,EACvC,qBAAsBA,EAAE,OAAOA,EAAE,OAAO,EAAGA,EAAE,OAAO,CAAC,EAAE,SAAS,EAChE,mBAAoBA,EAAE,OAAOA,EAAE,OAAO,EAAGA,EAAE,OAAO,CAAC,EAAE,SAAS,EAC9D,KAAMA,EAAE,OAAO,EAAE,SAAS,EAC1B,QAASA,EAAE,OAAOA,EAAE,OAAO,EAAGA,EAAE,OAAO,CAAC,EAAE,SAAS,EACnD,QAASA,EAAE,QAAQ,EAAE,SAAS,EAC9B,GAAIA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAChC,IAAKA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EACjC,WAAYA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EACxC,QAASA,EACJ,OAAO,CACJ,KAAMA,EAAE,MAAM,CAACA,EAAE,QAAQ,YAAY,EAAGA,EAAE,QAAQ,SAAS,CAAC,CAAC,EAC7D,IAAKA,EAAE,OAAO,EAAE,IAAI,CACxB,CAAC,EACA,SAAS,EACd,KAAMA,EAAE,OAAO,EAAE,SAAS,EAC1B,IAAKA,EAAE,OAAO,EAAE,SAAS,EACzB,IAAKA,EAAE,MAAM,CACTA,EAAE,OAAO,EACTA,EAAE,OAAO,EAAE,MAAM,CACrB,CAAC,EAAE,SAAS,EACZ,SAAUA,EACL,OAAO,EACP,MAAM,EACN,QAAQ,CAAC,aAAa,CAAC,EACvB,UAAWG,IACHA,EAAE,SAAS,aAAa,GACzBA,EAAE,KAAK,aAAa,EAEjBA,EACV,EACL,SAAUH,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EACpC,QAASI,EAAa,QAAQ,KAAK,EACnC,OAAQJ,EACH,MAAM,CACHA,EAAE,OAAO,CACL,KAAMA,EAAE,OAAO,EACf,MAAOA,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EACnC,IAAKA,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,CACnC,CAAC,EACDA,EAAE,OAAO,CACL,OAAQA,EAAE,OAAO,CACrB,CAAC,CACL,CAAC,EACA,SAAS,EACd,YAAaA,EAAE,OAAO,EAAE,SAAS,CACrC,CAAC","sourcesContent":["import { z } from \"zod\";\nimport { licenseUnion } from \"./licenseUnion.js\";\n\nconst exportFieldObject = z.object({\n    types: z.string().optional(),\n    import: z.string().optional(),\n    require: z.string().optional(),\n})\n\nexport const ulldCompletePackageJsonSchema = z.object({\n    name: z\n        .string()\n        .max(214)\n        .refine((a) => {\n            return a.toLowerCase() === a;\n        }),\n    version: z.string().optional().default(\"0.0.0\"),\n    exports: z.record(z.string(), z.string().or(exportFieldObject)).optional(),\n    files: z.string().array().optional().default([\"src\"]),\n    dependencies: z.record(z.string(), z.string()),\n    packageManager: z.string().optional().default(\"pnpm@8.1.1\"),\n    devDependencies: z.record(z.string(), z.string()).optional(),\n    peerDependencies: z.record(z.string(), z.string()).optional(),\n    peerDependenciesMeta: z.any().optional(),\n    optionalDependencies: z.record(z.string(), z.string()).optional(),\n    bundleDependencies: z.record(z.string(), z.string()).optional(),\n    type: z.string().optional(),\n    scripts: z.record(z.string(), z.string()).optional(),\n    private: z.boolean().optional(),\n    os: z.string().array().optional(),\n    cpu: z.string().array().optional(),\n    workspaces: z.string().array().optional(),\n    funding: z\n        .object({\n            type: z.union([z.literal(\"individual\"), z.literal(\"patreon\")]),\n            url: z.string().url(),\n        })\n        .optional(),\n    main: z.string().optional(),\n    bin: z.string().optional(),\n    man: z.union([\n        z.string(),\n        z.string().array()\n    ]).optional(),\n    keywords: z\n        .string()\n        .array()\n        .default([\"ulld-plugin\"])\n        .transform((a) => {\n            if (!a.includes(\"ulld-plugin\")) {\n                a.push(\"ulld-plugin\");\n            }\n            return a;\n        }),\n    homepage: z.string().url().optional(),\n    license: licenseUnion.default(\"MIT\"),\n    people: z\n        .union([\n            z.object({\n                name: z.string(),\n                email: z.string().email().optional(),\n                url: z.string().url().optional(),\n            }),\n            z.object({\n                author: z.string(),\n            }),\n        ])\n        .optional(),\n    description: z.string().optional()\n});\n\nexport type PackageJsonType = z.input<typeof ulldCompletePackageJsonSchema>;\n"]}