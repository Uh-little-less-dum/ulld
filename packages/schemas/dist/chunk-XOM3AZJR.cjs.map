{"version":3,"sources":["../src/database/outputTypeSchemas/AutoSettingCreateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,SAAS;AAMX,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,OAAO,EAAE,QAAQ,EAAE,SAAS;AAC9B,CAAC,EAAE,OAAO;AACH,IAAM,8BAAuE,EAAE,OAAO;AAAA,EAC3F,QAAQ,wBAAwB,SAAS;AAAA,EACzC,MAAM,EAAE,MAAM,CAAE,8BAA6B,qCAAsC,CAAC;AACtF,CAAC,EAAE,OAAO;AACV,IAAO,sCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { AutoSettingCreateInputSchema } from '../inputTypeSchemas/AutoSettingCreateInputSchema.js'\nimport { AutoSettingUncheckedCreateInputSchema } from '../inputTypeSchemas/AutoSettingUncheckedCreateInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const AutoSettingSelectSchema: z.ZodType<Prisma.AutoSettingSelect> = z.object({\n  id: z.boolean().optional(),\n  type: z.boolean().optional(),\n  glob: z.boolean().optional(),\n  value: z.boolean().optional(),\n}).strict()\nexport const AutoSettingCreateArgsSchema: z.ZodType<Prisma.AutoSettingCreateArgs> = z.object({\n  select: AutoSettingSelectSchema.optional(),\n  data: z.union([ AutoSettingCreateInputSchema,AutoSettingUncheckedCreateInputSchema ]),\n}).strict() ;\nexport default AutoSettingCreateArgsSchema;"]}