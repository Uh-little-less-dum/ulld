{"version":3,"sources":["../src/database/outputTypeSchemas/SnippetGroupByArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAMX,IAAM,2BAAiE,EAAE,OAAO;AAAA,EACrF,OAAO,wBAAwB,SAAS;AAAA,EACxC,SAAS,EAAE,MAAM,CAAE,yCAAyC,MAAM,GAAE,wCAAyC,CAAC,EAAE,SAAS;AAAA,EACzH,IAAI,6BAA6B,MAAM;AAAA,EACvC,QAAQ,4CAA4C,SAAS;AAAA,EAC7D,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AACV,IAAO,mCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { SnippetWhereInputSchema } from '../inputTypeSchemas/SnippetWhereInputSchema.js'\nimport { SnippetOrderByWithAggregationInputSchema } from '../inputTypeSchemas/SnippetOrderByWithAggregationInputSchema.js'\nimport { SnippetScalarFieldEnumSchema } from '../inputTypeSchemas/SnippetScalarFieldEnumSchema.js'\nimport { SnippetScalarWhereWithAggregatesInputSchema } from '../inputTypeSchemas/SnippetScalarWhereWithAggregatesInputSchema.js'\nexport const SnippetGroupByArgsSchema: z.ZodType<Prisma.SnippetGroupByArgs> = z.object({\n  where: SnippetWhereInputSchema.optional(),\n  orderBy: z.union([ SnippetOrderByWithAggregationInputSchema.array(),SnippetOrderByWithAggregationInputSchema ]).optional(),\n  by: SnippetScalarFieldEnumSchema.array(),\n  having: SnippetScalarWhereWithAggregatesInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\nexport default SnippetGroupByArgsSchema;"]}