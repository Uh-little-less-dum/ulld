{"version":3,"sources":["../src/database/inputTypeSchemas/WhiteboardWhereInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { StringFilterSchema } from './StringFilterSchema';\nimport { BytesFilterSchema } from './BytesFilterSchema';\n\nexport const WhiteboardWhereInputSchema: z.ZodType<Prisma.WhiteboardWhereInput> = z.object({\n  AND: z.union([ z.lazy(() => WhiteboardWhereInputSchema),z.lazy(() => WhiteboardWhereInputSchema).array() ]).optional(),\n  OR: z.lazy(() => WhiteboardWhereInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => WhiteboardWhereInputSchema),z.lazy(() => WhiteboardWhereInputSchema).array() ]).optional(),\n  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),\n  data: z.union([ z.lazy(() => BytesFilterSchema),z.instanceof(Buffer) ]).optional(),\n}).strict();\n\nexport default WhiteboardWhereInputSchema;\n"],"mappings":";;;;;;;;AAEA,SAAS,SAAS;AAIX,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,0BAA0B,GAAE,EAAE,KAAK,MAAM,0BAA0B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACrH,IAAI,EAAE,KAAK,MAAM,0BAA0B,EAAE,MAAM,EAAE,SAAS;AAAA,EAC9D,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,0BAA0B,GAAE,EAAE,KAAK,MAAM,0BAA0B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACrH,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kBAAkB,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACtE,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,iBAAiB,GAAE,EAAE,WAAW,MAAM,CAAE,CAAC,EAAE,SAAS;AACnF,CAAC,EAAE,OAAO;AAEV,IAAO,qCAAQ;","names":[]}