{"version":3,"sources":["../src/database/inputTypeSchemas/ToDoListOrderByWithRelationInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAOX,IAAM,yCAA6F,EAAE,OAAO;AAAA,EACjH,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,OAAO,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC9C,WAAW,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAClD,YAAY,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACnD,YAAY,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACnD,OAAO,EAAE,KAAK,MAAM,uCAAuC,EAAE,SAAS;AAAA,EACtE,MAAM,EAAE,KAAK,MAAM,sCAAsC,EAAE,SAAS;AAAA,EACpE,QAAQ,EAAE,KAAK,MAAM,wCAAwC,EAAE,SAAS;AAAA,EACxE,UAAU,EAAE,KAAK,MAAM,0CAA0C,EAAE,SAAS;AAAA,EAC5E,YAAY,EAAE,KAAK,MAAM,mCAAmC,EAAE,SAAS;AACzE,CAAC,EAAE,OAAO;AACV,IAAO,iDAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nimport { ToDoOrderByRelationAggregateInputSchema } from './ToDoOrderByRelationAggregateInputSchema.js';\nimport { TagOrderByRelationAggregateInputSchema } from './TagOrderByRelationAggregateInputSchema.js';\nimport { TopicOrderByRelationAggregateInputSchema } from './TopicOrderByRelationAggregateInputSchema.js';\nimport { SubjectOrderByRelationAggregateInputSchema } from './SubjectOrderByRelationAggregateInputSchema.js';\nimport { ToDoListOrderByRelevanceInputSchema } from './ToDoListOrderByRelevanceInputSchema.js';\nexport const ToDoListOrderByWithRelationInputSchema: z.ZodType<Prisma.ToDoListOrderByWithRelationInput> = z.object({\n  id: z.lazy(() => SortOrderSchema).optional(),\n  label: z.lazy(() => SortOrderSchema).optional(),\n  createdAt: z.lazy(() => SortOrderSchema).optional(),\n  lastUpdate: z.lazy(() => SortOrderSchema).optional(),\n  lastAccess: z.lazy(() => SortOrderSchema).optional(),\n  tasks: z.lazy(() => ToDoOrderByRelationAggregateInputSchema).optional(),\n  tags: z.lazy(() => TagOrderByRelationAggregateInputSchema).optional(),\n  topics: z.lazy(() => TopicOrderByRelationAggregateInputSchema).optional(),\n  subjects: z.lazy(() => SubjectOrderByRelationAggregateInputSchema).optional(),\n  _relevance: z.lazy(() => ToDoListOrderByRelevanceInputSchema).optional()\n}).strict();\nexport default ToDoListOrderByWithRelationInputSchema;"]}