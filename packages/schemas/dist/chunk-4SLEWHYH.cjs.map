{"version":3,"sources":["../src/database/outputTypeSchemas/KanBanListUpsertArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAaX,IAAM,yBAA6D,EAAE,OAAO;AAAA,EACjF,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,kBAAkB,EAAE,QAAQ,EAAE,SAAS;AAAA,EACvC,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,OAAO,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,4BAA4B,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,gBAAgB,CAAC,CAAC,EAAE,SAAS;AAAA,EACvE,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,mCAAmC,CAAC,CAAC,EAAE,SAAS;AAC5F,CAAC,EAAE,OAAO;AACH,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,QAAQ,uBAAuB,SAAS;AAAA,EACxC,SAAS,wBAAwB,SAAS;AAAA,EAC1C,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,6BAA4B,oCAAqC,CAAC;AAAA,EACpF,QAAQ,EAAE,MAAM,CAAE,6BAA4B,oCAAqC,CAAC;AACtF,CAAC,EAAE,OAAO;AACV,IAAO,qCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { KanBanListIncludeSchema } from '../inputTypeSchemas/KanBanListIncludeSchema.js'\nimport { KanBanListWhereUniqueInputSchema } from '../inputTypeSchemas/KanBanListWhereUniqueInputSchema.js'\nimport { KanBanListCreateInputSchema } from '../inputTypeSchemas/KanBanListCreateInputSchema.js'\nimport { KanBanListUncheckedCreateInputSchema } from '../inputTypeSchemas/KanBanListUncheckedCreateInputSchema.js'\nimport { KanBanListUpdateInputSchema } from '../inputTypeSchemas/KanBanListUpdateInputSchema.js'\nimport { KanBanListUncheckedUpdateInputSchema } from '../inputTypeSchemas/KanBanListUncheckedUpdateInputSchema.js'\nimport { KanBanCardFindManyArgsSchema } from \"../outputTypeSchemas/KanBanCardFindManyArgsSchema\"\nimport { KanbanArgsSchema } from \"../outputTypeSchemas/KanbanArgsSchema\"\nimport { KanBanListCountOutputTypeArgsSchema } from \"../outputTypeSchemas/KanBanListCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const KanBanListSelectSchema: z.ZodType<Prisma.KanBanListSelect> = z.object({\n  id: z.boolean().optional(),\n  indexWithinBoard: z.boolean().optional(),\n  title: z.boolean().optional(),\n  boardId: z.boolean().optional(),\n  cards: z.union([z.boolean(),z.lazy(() => KanBanCardFindManyArgsSchema)]).optional(),\n  Kanban: z.union([z.boolean(),z.lazy(() => KanbanArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => KanBanListCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport const KanBanListUpsertArgsSchema: z.ZodType<Prisma.KanBanListUpsertArgs> = z.object({\n  select: KanBanListSelectSchema.optional(),\n  include: KanBanListIncludeSchema.optional(),\n  where: KanBanListWhereUniqueInputSchema,\n  create: z.union([ KanBanListCreateInputSchema,KanBanListUncheckedCreateInputSchema ]),\n  update: z.union([ KanBanListUpdateInputSchema,KanBanListUncheckedUpdateInputSchema ]),\n}).strict() ;\nexport default KanBanListUpsertArgsSchema;"]}