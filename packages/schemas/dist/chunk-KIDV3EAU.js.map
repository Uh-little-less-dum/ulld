{"version":3,"sources":["../src/database/outputTypeSchemas/DJTFindManyArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { DJTWhereInputSchema } from '../inputTypeSchemas/DJTWhereInputSchema'\nimport { DJTOrderByWithRelationInputSchema } from '../inputTypeSchemas/DJTOrderByWithRelationInputSchema'\nimport { DJTWhereUniqueInputSchema } from '../inputTypeSchemas/DJTWhereUniqueInputSchema'\nimport { DJTScalarFieldEnumSchema } from '../inputTypeSchemas/DJTScalarFieldEnumSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const DJTSelectSchema: z.ZodType<Prisma.DJTSelect> = z.object({\n  id: z.boolean().optional(),\n  type: z.boolean().optional(),\n  data: z.boolean().optional(),\n}).strict()\n\nexport const DJTFindManyArgsSchema: z.ZodType<Prisma.DJTFindManyArgs> = z.object({\n  select: DJTSelectSchema.optional(),\n  where: DJTWhereInputSchema.optional(),\n  orderBy: z.union([ DJTOrderByWithRelationInputSchema.array(),DJTOrderByWithRelationInputSchema ]).optional(),\n  cursor: DJTWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n  distinct: z.union([ DJTScalarFieldEnumSchema,DJTScalarFieldEnumSchema.array() ]).optional(),\n}).strict() ;\n\nexport default DJTFindManyArgsSchema;\n"],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AASX,IAAM,kBAA+C,EAAE,OAAO;AAAA,EACnE,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,MAAM,EAAE,QAAQ,EAAE,SAAS;AAC7B,CAAC,EAAE,OAAO;AAEH,IAAM,wBAA2D,EAAE,OAAO;AAAA,EAC/E,QAAQ,gBAAgB,SAAS;AAAA,EACjC,OAAO,oBAAoB,SAAS;AAAA,EACpC,SAAS,EAAE,MAAM,CAAE,kCAAkC,MAAM,GAAE,iCAAkC,CAAC,EAAE,SAAS;AAAA,EAC3G,QAAQ,0BAA0B,SAAS;AAAA,EAC3C,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,UAAU,EAAE,MAAM,CAAE,0BAAyB,yBAAyB,MAAM,CAAE,CAAC,EAAE,SAAS;AAC5F,CAAC,EAAE,OAAO;AAEV,IAAO,gCAAQ;","names":[]}