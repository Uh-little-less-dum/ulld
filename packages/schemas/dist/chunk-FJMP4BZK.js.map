{"version":3,"sources":["../src/database/inputTypeSchemas/DietaryItemOrderByWithAggregationInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nimport { SortOrderInputSchema } from './SortOrderInputSchema.js';\nimport { DietaryItemCountOrderByAggregateInputSchema } from './DietaryItemCountOrderByAggregateInputSchema.js';\nimport { DietaryItemAvgOrderByAggregateInputSchema } from './DietaryItemAvgOrderByAggregateInputSchema.js';\nimport { DietaryItemMaxOrderByAggregateInputSchema } from './DietaryItemMaxOrderByAggregateInputSchema.js';\nimport { DietaryItemMinOrderByAggregateInputSchema } from './DietaryItemMinOrderByAggregateInputSchema.js';\nimport { DietaryItemSumOrderByAggregateInputSchema } from './DietaryItemSumOrderByAggregateInputSchema.js';\nexport const DietaryItemOrderByWithAggregationInputSchema: z.ZodType<Prisma.DietaryItemOrderByWithAggregationInput> = z.object({\n  id: z.lazy(() => SortOrderSchema).optional(),\n  name: z.lazy(() => SortOrderSchema).optional(),\n  barcode: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  gi: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  calsPerOz: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  glutenFree: z.lazy(() => SortOrderSchema).optional(),\n  minimalFructose: z.lazy(() => SortOrderSchema).optional(),\n  natural: z.lazy(() => SortOrderSchema).optional(),\n  organic: z.lazy(() => SortOrderSchema).optional(),\n  impactScore: z.lazy(() => SortOrderSchema).optional(),\n  _count: z.lazy(() => DietaryItemCountOrderByAggregateInputSchema).optional(),\n  _avg: z.lazy(() => DietaryItemAvgOrderByAggregateInputSchema).optional(),\n  _max: z.lazy(() => DietaryItemMaxOrderByAggregateInputSchema).optional(),\n  _min: z.lazy(() => DietaryItemMinOrderByAggregateInputSchema).optional(),\n  _sum: z.lazy(() => DietaryItemSumOrderByAggregateInputSchema).optional()\n}).strict();\nexport default DietaryItemOrderByWithAggregationInputSchema;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAQX,IAAM,+CAAyG,EAAE,OAAO;AAAA,EAC7H,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,MAAM,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC7C,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAChG,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC3F,WAAW,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAClG,YAAY,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACnD,iBAAiB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACxD,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAChD,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAChD,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,QAAQ,EAAE,KAAK,MAAM,2CAA2C,EAAE,SAAS;AAAA,EAC3E,MAAM,EAAE,KAAK,MAAM,yCAAyC,EAAE,SAAS;AAAA,EACvE,MAAM,EAAE,KAAK,MAAM,yCAAyC,EAAE,SAAS;AAAA,EACvE,MAAM,EAAE,KAAK,MAAM,yCAAyC,EAAE,SAAS;AAAA,EACvE,MAAM,EAAE,KAAK,MAAM,yCAAyC,EAAE,SAAS;AACzE,CAAC,EAAE,OAAO;AACV,IAAO,uDAAQ;","names":[]}