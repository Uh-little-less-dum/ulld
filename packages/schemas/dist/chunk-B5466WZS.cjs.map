{"version":3,"sources":["../src/database/outputTypeSchemas/ToDoAggregateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS;AAKX,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,OAAO,qBAAqB,SAAS;AAAA,EACrC,SAAS,EAAE,MAAM,CAAE,mCAAmC,MAAM,GAAE,kCAAmC,CAAC,EAAE,SAAS;AAAA,EAC7G,QAAQ,2BAA2B,SAAS;AAAA,EAC5C,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AACV,IAAO,kCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { ToDoWhereInputSchema } from '../inputTypeSchemas/ToDoWhereInputSchema.js'\nimport { ToDoOrderByWithRelationInputSchema } from '../inputTypeSchemas/ToDoOrderByWithRelationInputSchema.js'\nimport { ToDoWhereUniqueInputSchema } from '../inputTypeSchemas/ToDoWhereUniqueInputSchema.js'\nexport const ToDoAggregateArgsSchema: z.ZodType<Prisma.ToDoAggregateArgs> = z.object({\n  where: ToDoWhereInputSchema.optional(),\n  orderBy: z.union([ ToDoOrderByWithRelationInputSchema.array(),ToDoOrderByWithRelationInputSchema ]).optional(),\n  cursor: ToDoWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\nexport default ToDoAggregateArgsSchema;"]}