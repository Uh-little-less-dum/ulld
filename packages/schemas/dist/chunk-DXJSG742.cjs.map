{"version":3,"sources":["../src/database/inputTypeSchemas/SnippetOrderByWithAggregationInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAOX,IAAM,2CAAiG,EAAE,OAAO;AAAA,EACrH,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAChD,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,UAAU,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACjD,UAAU,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACjD,WAAW,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAClD,QAAQ,EAAE,KAAK,MAAM,uCAAuC,EAAE,SAAS;AAAA,EACvE,MAAM,EAAE,KAAK,MAAM,qCAAqC,EAAE,SAAS;AAAA,EACnE,MAAM,EAAE,KAAK,MAAM,qCAAqC,EAAE,SAAS;AAAA,EACnE,MAAM,EAAE,KAAK,MAAM,qCAAqC,EAAE,SAAS;AAAA,EACnE,MAAM,EAAE,KAAK,MAAM,qCAAqC,EAAE,SAAS;AACrE,CAAC,EAAE,OAAO;AACV,IAAO,mDAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nimport { SnippetCountOrderByAggregateInputSchema } from './SnippetCountOrderByAggregateInputSchema.js';\nimport { SnippetAvgOrderByAggregateInputSchema } from './SnippetAvgOrderByAggregateInputSchema.js';\nimport { SnippetMaxOrderByAggregateInputSchema } from './SnippetMaxOrderByAggregateInputSchema.js';\nimport { SnippetMinOrderByAggregateInputSchema } from './SnippetMinOrderByAggregateInputSchema.js';\nimport { SnippetSumOrderByAggregateInputSchema } from './SnippetSumOrderByAggregateInputSchema.js';\nexport const SnippetOrderByWithAggregationInputSchema: z.ZodType<Prisma.SnippetOrderByWithAggregationInput> = z.object({\n  id: z.lazy(() => SortOrderSchema).optional(),\n  content: z.lazy(() => SortOrderSchema).optional(),\n  description: z.lazy(() => SortOrderSchema).optional(),\n  keywords: z.lazy(() => SortOrderSchema).optional(),\n  language: z.lazy(() => SortOrderSchema).optional(),\n  createdAt: z.lazy(() => SortOrderSchema).optional(),\n  _count: z.lazy(() => SnippetCountOrderByAggregateInputSchema).optional(),\n  _avg: z.lazy(() => SnippetAvgOrderByAggregateInputSchema).optional(),\n  _max: z.lazy(() => SnippetMaxOrderByAggregateInputSchema).optional(),\n  _min: z.lazy(() => SnippetMinOrderByAggregateInputSchema).optional(),\n  _sum: z.lazy(() => SnippetSumOrderByAggregateInputSchema).optional()\n}).strict();\nexport default SnippetOrderByWithAggregationInputSchema;"]}