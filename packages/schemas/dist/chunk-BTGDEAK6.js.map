{"version":3,"sources":["../src/database/inputTypeSchemas/BusinessContactOrderByWithAggregationInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nimport { SortOrderInputSchema } from './SortOrderInputSchema.js';\nimport { BusinessContactCountOrderByAggregateInputSchema } from './BusinessContactCountOrderByAggregateInputSchema.js';\nimport { BusinessContactAvgOrderByAggregateInputSchema } from './BusinessContactAvgOrderByAggregateInputSchema.js';\nimport { BusinessContactMaxOrderByAggregateInputSchema } from './BusinessContactMaxOrderByAggregateInputSchema.js';\nimport { BusinessContactMinOrderByAggregateInputSchema } from './BusinessContactMinOrderByAggregateInputSchema.js';\nimport { BusinessContactSumOrderByAggregateInputSchema } from './BusinessContactSumOrderByAggregateInputSchema.js';\nexport const BusinessContactOrderByWithAggregationInputSchema: z.ZodType<Prisma.BusinessContactOrderByWithAggregationInput> = z.object({\n  id: z.lazy(() => SortOrderSchema).optional(),\n  companyName: z.lazy(() => SortOrderSchema).optional(),\n  contactName: z.lazy(() => SortOrderSchema).optional(),\n  contactPreference: z.lazy(() => SortOrderSchema).optional(),\n  email: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  phone: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  message: z.lazy(() => SortOrderSchema).optional(),\n  purpose: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  _count: z.lazy(() => BusinessContactCountOrderByAggregateInputSchema).optional(),\n  _avg: z.lazy(() => BusinessContactAvgOrderByAggregateInputSchema).optional(),\n  _max: z.lazy(() => BusinessContactMaxOrderByAggregateInputSchema).optional(),\n  _min: z.lazy(() => BusinessContactMinOrderByAggregateInputSchema).optional(),\n  _sum: z.lazy(() => BusinessContactSumOrderByAggregateInputSchema).optional()\n}).strict();\nexport default BusinessContactOrderByWithAggregationInputSchema;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAQX,IAAM,mDAAiH,EAAE,OAAO;AAAA,EACrI,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,mBAAmB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC1D,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9F,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9F,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAChD,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAChG,QAAQ,EAAE,KAAK,MAAM,+CAA+C,EAAE,SAAS;AAAA,EAC/E,MAAM,EAAE,KAAK,MAAM,6CAA6C,EAAE,SAAS;AAAA,EAC3E,MAAM,EAAE,KAAK,MAAM,6CAA6C,EAAE,SAAS;AAAA,EAC3E,MAAM,EAAE,KAAK,MAAM,6CAA6C,EAAE,SAAS;AAAA,EAC3E,MAAM,EAAE,KAAK,MAAM,6CAA6C,EAAE,SAAS;AAC7E,CAAC,EAAE,OAAO;AACV,IAAO,2DAAQ;","names":[]}