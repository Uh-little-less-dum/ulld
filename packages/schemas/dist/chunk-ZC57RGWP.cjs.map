{"version":3,"sources":["../src/database/inputTypeSchemas/SubjectOrderByWithAggregationInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAQX,IAAM,2CAAiG,EAAE,OAAO;AAAA,EACrH,OAAO,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC9C,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EACjG,WAAW,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAClD,YAAY,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACnD,QAAQ,EAAE,KAAK,MAAM,uCAAuC,EAAE,SAAS;AAAA,EACvE,MAAM,EAAE,KAAK,MAAM,qCAAqC,EAAE,SAAS;AAAA,EACnE,MAAM,EAAE,KAAK,MAAM,qCAAqC,EAAE,SAAS;AAAA,EACnE,MAAM,EAAE,KAAK,MAAM,qCAAqC,EAAE,SAAS;AAAA,EACnE,MAAM,EAAE,KAAK,MAAM,qCAAqC,EAAE,SAAS;AACrE,CAAC,EAAE,OAAO;AACV,IAAO,mDAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nimport { SortOrderInputSchema } from './SortOrderInputSchema.js';\nimport { SubjectCountOrderByAggregateInputSchema } from './SubjectCountOrderByAggregateInputSchema.js';\nimport { SubjectAvgOrderByAggregateInputSchema } from './SubjectAvgOrderByAggregateInputSchema.js';\nimport { SubjectMaxOrderByAggregateInputSchema } from './SubjectMaxOrderByAggregateInputSchema.js';\nimport { SubjectMinOrderByAggregateInputSchema } from './SubjectMinOrderByAggregateInputSchema.js';\nimport { SubjectSumOrderByAggregateInputSchema } from './SubjectSumOrderByAggregateInputSchema.js';\nexport const SubjectOrderByWithAggregationInputSchema: z.ZodType<Prisma.SubjectOrderByWithAggregationInput> = z.object({\n  value: z.lazy(() => SortOrderSchema).optional(),\n  kanbanId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  createdAt: z.lazy(() => SortOrderSchema).optional(),\n  lastAccess: z.lazy(() => SortOrderSchema).optional(),\n  _count: z.lazy(() => SubjectCountOrderByAggregateInputSchema).optional(),\n  _avg: z.lazy(() => SubjectAvgOrderByAggregateInputSchema).optional(),\n  _max: z.lazy(() => SubjectMaxOrderByAggregateInputSchema).optional(),\n  _min: z.lazy(() => SubjectMinOrderByAggregateInputSchema).optional(),\n  _sum: z.lazy(() => SubjectSumOrderByAggregateInputSchema).optional()\n}).strict();\nexport default SubjectOrderByWithAggregationInputSchema;"]}