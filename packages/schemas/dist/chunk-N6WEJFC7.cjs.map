{"version":3,"sources":["../src/database/inputTypeSchemas/ServingUpdateManyWithoutItemNestedInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAUX,IAAM,gDAA2G,EAAE,OAAO;AAAA,EAC/H,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,mCAAmC,GAAE,EAAE,KAAK,MAAM,mCAAmC,EAAE,MAAM,GAAE,EAAE,KAAK,MAAM,4CAA4C,GAAE,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACxQ,iBAAiB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,4CAA4C,GAAE,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACrK,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kDAAkD,GAAE,EAAE,KAAK,MAAM,kDAAkD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACxK,YAAY,EAAE,KAAK,MAAM,wCAAwC,EAAE,SAAS;AAAA,EAC5E,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,KAAK,MAAM,6BAA6B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC3H,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,KAAK,MAAM,6BAA6B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAClI,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,KAAK,MAAM,6BAA6B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9H,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,KAAK,MAAM,6BAA6B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC/H,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kDAAkD,GAAE,EAAE,KAAK,MAAM,kDAAkD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACxK,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gDAAgD,GAAE,EAAE,KAAK,MAAM,gDAAgD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACxK,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,KAAK,MAAM,6BAA6B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AACpI,CAAC,EAAE,OAAO;AACV,IAAO,wDAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { ServingCreateWithoutItemInputSchema } from './ServingCreateWithoutItemInputSchema.js';\nimport { ServingUncheckedCreateWithoutItemInputSchema } from './ServingUncheckedCreateWithoutItemInputSchema.js';\nimport { ServingCreateOrConnectWithoutItemInputSchema } from './ServingCreateOrConnectWithoutItemInputSchema.js';\nimport { ServingUpsertWithWhereUniqueWithoutItemInputSchema } from './ServingUpsertWithWhereUniqueWithoutItemInputSchema.js';\nimport { ServingCreateManyItemInputEnvelopeSchema } from './ServingCreateManyItemInputEnvelopeSchema.js';\nimport { ServingWhereUniqueInputSchema } from './ServingWhereUniqueInputSchema.js';\nimport { ServingUpdateWithWhereUniqueWithoutItemInputSchema } from './ServingUpdateWithWhereUniqueWithoutItemInputSchema.js';\nimport { ServingUpdateManyWithWhereWithoutItemInputSchema } from './ServingUpdateManyWithWhereWithoutItemInputSchema.js';\nimport { ServingScalarWhereInputSchema } from './ServingScalarWhereInputSchema.js';\nexport const ServingUpdateManyWithoutItemNestedInputSchema: z.ZodType<Prisma.ServingUpdateManyWithoutItemNestedInput> = z.object({\n  create: z.union([ z.lazy(() => ServingCreateWithoutItemInputSchema),z.lazy(() => ServingCreateWithoutItemInputSchema).array(),z.lazy(() => ServingUncheckedCreateWithoutItemInputSchema),z.lazy(() => ServingUncheckedCreateWithoutItemInputSchema).array() ]).optional(),\n  connectOrCreate: z.union([ z.lazy(() => ServingCreateOrConnectWithoutItemInputSchema),z.lazy(() => ServingCreateOrConnectWithoutItemInputSchema).array() ]).optional(),\n  upsert: z.union([ z.lazy(() => ServingUpsertWithWhereUniqueWithoutItemInputSchema),z.lazy(() => ServingUpsertWithWhereUniqueWithoutItemInputSchema).array() ]).optional(),\n  createMany: z.lazy(() => ServingCreateManyItemInputEnvelopeSchema).optional(),\n  set: z.union([ z.lazy(() => ServingWhereUniqueInputSchema),z.lazy(() => ServingWhereUniqueInputSchema).array() ]).optional(),\n  disconnect: z.union([ z.lazy(() => ServingWhereUniqueInputSchema),z.lazy(() => ServingWhereUniqueInputSchema).array() ]).optional(),\n  delete: z.union([ z.lazy(() => ServingWhereUniqueInputSchema),z.lazy(() => ServingWhereUniqueInputSchema).array() ]).optional(),\n  connect: z.union([ z.lazy(() => ServingWhereUniqueInputSchema),z.lazy(() => ServingWhereUniqueInputSchema).array() ]).optional(),\n  update: z.union([ z.lazy(() => ServingUpdateWithWhereUniqueWithoutItemInputSchema),z.lazy(() => ServingUpdateWithWhereUniqueWithoutItemInputSchema).array() ]).optional(),\n  updateMany: z.union([ z.lazy(() => ServingUpdateManyWithWhereWithoutItemInputSchema),z.lazy(() => ServingUpdateManyWithWhereWithoutItemInputSchema).array() ]).optional(),\n  deleteMany: z.union([ z.lazy(() => ServingScalarWhereInputSchema),z.lazy(() => ServingScalarWhereInputSchema).array() ]).optional(),\n}).strict();\nexport default ServingUpdateManyWithoutItemNestedInputSchema;"]}