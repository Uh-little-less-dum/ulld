{"version":3,"sources":["../src/database/outputTypeSchemas/DJTUpsertArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AASX,IAAM,kBAA+C,EAAE,OAAO;AAAA,EACnE,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,MAAM,EAAE,QAAQ,EAAE,SAAS;AAC7B,CAAC,EAAE,OAAO;AACH,IAAM,sBAAuD,EAAE,OAAO;AAAA,EAC3E,QAAQ,gBAAgB,SAAS;AAAA,EACjC,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,sBAAqB,6BAA8B,CAAC;AAAA,EACtE,QAAQ,EAAE,MAAM,CAAE,sBAAqB,6BAA8B,CAAC;AACxE,CAAC,EAAE,OAAO;AACV,IAAO,8BAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { DJTWhereUniqueInputSchema } from '../inputTypeSchemas/DJTWhereUniqueInputSchema.js'\nimport { DJTCreateInputSchema } from '../inputTypeSchemas/DJTCreateInputSchema.js'\nimport { DJTUncheckedCreateInputSchema } from '../inputTypeSchemas/DJTUncheckedCreateInputSchema.js'\nimport { DJTUpdateInputSchema } from '../inputTypeSchemas/DJTUpdateInputSchema.js'\nimport { DJTUncheckedUpdateInputSchema } from '../inputTypeSchemas/DJTUncheckedUpdateInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const DJTSelectSchema: z.ZodType<Prisma.DJTSelect> = z.object({\n  id: z.boolean().optional(),\n  type: z.boolean().optional(),\n  data: z.boolean().optional(),\n}).strict()\nexport const DJTUpsertArgsSchema: z.ZodType<Prisma.DJTUpsertArgs> = z.object({\n  select: DJTSelectSchema.optional(),\n  where: DJTWhereUniqueInputSchema,\n  create: z.union([ DJTCreateInputSchema,DJTUncheckedCreateInputSchema ]),\n  update: z.union([ DJTUpdateInputSchema,DJTUncheckedUpdateInputSchema ]),\n}).strict() ;\nexport default DJTUpsertArgsSchema;"]}