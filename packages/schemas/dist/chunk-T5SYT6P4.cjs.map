{"version":3,"sources":["../src/database/outputTypeSchemas/KanBanListFindFirstOrThrowArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAYX,IAAM,yBAA6D,EAAE,OAAO;AAAA,EACjF,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,kBAAkB,EAAE,QAAQ,EAAE,SAAS;AAAA,EACvC,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,OAAO,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,4BAA4B,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,gBAAgB,CAAC,CAAC,EAAE,SAAS;AAAA,EACvE,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,mCAAmC,CAAC,CAAC,EAAE,SAAS;AAC5F,CAAC,EAAE,OAAO;AACH,IAAM,uCAAyF,EAAE,OAAO;AAAA,EAC7G,QAAQ,uBAAuB,SAAS;AAAA,EACxC,SAAS,wBAAwB,SAAS;AAAA,EAC1C,OAAO,2BAA2B,SAAS;AAAA,EAC3C,SAAS,EAAE,MAAM,CAAE,yCAAyC,MAAM,GAAE,wCAAyC,CAAC,EAAE,SAAS;AAAA,EACzH,QAAQ,iCAAiC,SAAS;AAAA,EAClD,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,UAAU,EAAE,MAAM,CAAE,iCAAgC,gCAAgC,MAAM,CAAE,CAAC,EAAE,SAAS;AAC1G,CAAC,EAAE,OAAO;AACV,IAAO,+CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { KanBanListIncludeSchema } from '../inputTypeSchemas/KanBanListIncludeSchema.js'\nimport { KanBanListWhereInputSchema } from '../inputTypeSchemas/KanBanListWhereInputSchema.js'\nimport { KanBanListOrderByWithRelationInputSchema } from '../inputTypeSchemas/KanBanListOrderByWithRelationInputSchema.js'\nimport { KanBanListWhereUniqueInputSchema } from '../inputTypeSchemas/KanBanListWhereUniqueInputSchema.js'\nimport { KanBanListScalarFieldEnumSchema } from '../inputTypeSchemas/KanBanListScalarFieldEnumSchema.js'\nimport { KanBanCardFindManyArgsSchema } from \"../outputTypeSchemas/KanBanCardFindManyArgsSchema\"\nimport { KanbanArgsSchema } from \"../outputTypeSchemas/KanbanArgsSchema\"\nimport { KanBanListCountOutputTypeArgsSchema } from \"../outputTypeSchemas/KanBanListCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const KanBanListSelectSchema: z.ZodType<Prisma.KanBanListSelect> = z.object({\n  id: z.boolean().optional(),\n  indexWithinBoard: z.boolean().optional(),\n  title: z.boolean().optional(),\n  boardId: z.boolean().optional(),\n  cards: z.union([z.boolean(),z.lazy(() => KanBanCardFindManyArgsSchema)]).optional(),\n  Kanban: z.union([z.boolean(),z.lazy(() => KanbanArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => KanBanListCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport const KanBanListFindFirstOrThrowArgsSchema: z.ZodType<Prisma.KanBanListFindFirstOrThrowArgs> = z.object({\n  select: KanBanListSelectSchema.optional(),\n  include: KanBanListIncludeSchema.optional(),\n  where: KanBanListWhereInputSchema.optional(),\n  orderBy: z.union([ KanBanListOrderByWithRelationInputSchema.array(),KanBanListOrderByWithRelationInputSchema ]).optional(),\n  cursor: KanBanListWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n  distinct: z.union([ KanBanListScalarFieldEnumSchema,KanBanListScalarFieldEnumSchema.array() ]).optional(),\n}).strict() ;\nexport default KanBanListFindFirstOrThrowArgsSchema;"]}