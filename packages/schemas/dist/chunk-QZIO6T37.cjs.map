{"version":3,"sources":["../src/database/outputTypeSchemas/ToDoListFindUniqueArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAYX,IAAM,uBAAyD,EAAE,OAAO;AAAA,EAC7E,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,OAAO,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,sBAAsB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC5E,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC1E,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uBAAuB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC9E,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,iCAAiC,CAAC,CAAC,EAAE,SAAS;AAC1F,CAAC,EAAE,OAAO;AAEH,IAAM,+BAAyE,EAAE,OAAO;AAAA,EAC7F,QAAQ,qBAAqB,SAAS;AAAA,EACtC,SAAS,sBAAsB,SAAS;AAAA,EACxC,OAAO;AACT,CAAC,EAAE,OAAO;AAEV,IAAO,uCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { ToDoListIncludeSchema } from '../inputTypeSchemas/ToDoListIncludeSchema'\nimport { ToDoListWhereUniqueInputSchema } from '../inputTypeSchemas/ToDoListWhereUniqueInputSchema'\nimport { ToDoFindManyArgsSchema } from \"../outputTypeSchemas/ToDoFindManyArgsSchema\"\nimport { TagFindManyArgsSchema } from \"../outputTypeSchemas/TagFindManyArgsSchema\"\nimport { TopicFindManyArgsSchema } from \"../outputTypeSchemas/TopicFindManyArgsSchema\"\nimport { SubjectFindManyArgsSchema } from \"../outputTypeSchemas/SubjectFindManyArgsSchema\"\nimport { ToDoListCountOutputTypeArgsSchema } from \"../outputTypeSchemas/ToDoListCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const ToDoListSelectSchema: z.ZodType<Prisma.ToDoListSelect> = z.object({\n  id: z.boolean().optional(),\n  label: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n  lastUpdate: z.boolean().optional(),\n  lastAccess: z.boolean().optional(),\n  tasks: z.union([z.boolean(),z.lazy(() => ToDoFindManyArgsSchema)]).optional(),\n  tags: z.union([z.boolean(),z.lazy(() => TagFindManyArgsSchema)]).optional(),\n  topics: z.union([z.boolean(),z.lazy(() => TopicFindManyArgsSchema)]).optional(),\n  subjects: z.union([z.boolean(),z.lazy(() => SubjectFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => ToDoListCountOutputTypeArgsSchema)]).optional(),\n}).strict()\n\nexport const ToDoListFindUniqueArgsSchema: z.ZodType<Prisma.ToDoListFindUniqueArgs> = z.object({\n  select: ToDoListSelectSchema.optional(),\n  include: ToDoListIncludeSchema.optional(),\n  where: ToDoListWhereUniqueInputSchema,\n}).strict() ;\n\nexport default ToDoListFindUniqueArgsSchema;\n"]}