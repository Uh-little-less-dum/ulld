{"version":3,"sources":["../src/database/inputTypeSchemas/DietOrderByWithRelationInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAOX,IAAM,qCAAqF,EAAE,OAAO;AAAA,EACzG,MAAM,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC7C,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAChG,mBAAmB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC1D,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,OAAO,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC9C,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,YAAY,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACnD,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAChD,gBAAgB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACvD,gBAAgB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACvD,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7F,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC5F,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC5F,OAAO,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC9C,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAChD,YAAY,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACnD,OAAO,EAAE,KAAK,MAAM,8CAA8C,EAAE,SAAS;AAAA,EAC7E,iBAAiB,EAAE,KAAK,MAAM,6CAA6C,EAAE,SAAS;AAAA,EACtF,cAAc,EAAE,KAAK,MAAM,+CAA+C,EAAE,SAAS;AAAA,EACrF,YAAY,EAAE,KAAK,MAAM,+BAA+B,EAAE,SAAS;AACrE,CAAC,EAAE,OAAO;AACV,IAAO,6CAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nimport { SortOrderInputSchema } from './SortOrderInputSchema.js';\nimport { DietaryItemOrderByRelationAggregateInputSchema } from './DietaryItemOrderByRelationAggregateInputSchema.js';\nimport { TimePeriodOrderByRelationAggregateInputSchema } from './TimePeriodOrderByRelationAggregateInputSchema.js';\nimport { HealthReportOrderByRelationAggregateInputSchema } from './HealthReportOrderByRelationAggregateInputSchema.js';\nimport { DietOrderByRelevanceInputSchema } from './DietOrderByRelevanceInputSchema.js';\nexport const DietOrderByWithRelationInputSchema: z.ZodType<Prisma.DietOrderByWithRelationInput> = z.object({\n  name: z.lazy(() => SortOrderSchema).optional(),\n  summary: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  activelyFollowing: z.lazy(() => SortOrderSchema).optional(),\n  gf: z.lazy(() => SortOrderSchema).optional(),\n  vegan: z.lazy(() => SortOrderSchema).optional(),\n  pescatarian: z.lazy(() => SortOrderSchema).optional(),\n  vegetarian: z.lazy(() => SortOrderSchema).optional(),\n  fasting: z.lazy(() => SortOrderSchema).optional(),\n  cardioTraining: z.lazy(() => SortOrderSchema).optional(),\n  weightTraining: z.lazy(() => SortOrderSchema).optional(),\n  carb: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  pro: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  fat: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  goals: z.lazy(() => SortOrderSchema).optional(),\n  created: z.lazy(() => SortOrderSchema).optional(),\n  lastUpdate: z.lazy(() => SortOrderSchema).optional(),\n  items: z.lazy(() => DietaryItemOrderByRelationAggregateInputSchema).optional(),\n  periodsFollowed: z.lazy(() => TimePeriodOrderByRelationAggregateInputSchema).optional(),\n  HealthReport: z.lazy(() => HealthReportOrderByRelationAggregateInputSchema).optional(),\n  _relevance: z.lazy(() => DietOrderByRelevanceInputSchema).optional()\n}).strict();\nexport default DietOrderByWithRelationInputSchema;"]}