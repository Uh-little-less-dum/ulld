{"version":3,"sources":["../src/database/outputTypeSchemas/QuoteUpsertArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { QuoteWhereUniqueInputSchema } from '../inputTypeSchemas/QuoteWhereUniqueInputSchema'\nimport { QuoteCreateInputSchema } from '../inputTypeSchemas/QuoteCreateInputSchema'\nimport { QuoteUncheckedCreateInputSchema } from '../inputTypeSchemas/QuoteUncheckedCreateInputSchema'\nimport { QuoteUpdateInputSchema } from '../inputTypeSchemas/QuoteUpdateInputSchema'\nimport { QuoteUncheckedUpdateInputSchema } from '../inputTypeSchemas/QuoteUncheckedUpdateInputSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const QuoteSelectSchema: z.ZodType<Prisma.QuoteSelect> = z.object({\n  body: z.boolean().optional(),\n  author: z.boolean().optional(),\n  source: z.boolean().optional(),\n  pinned: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n}).strict()\n\nexport const QuoteUpsertArgsSchema: z.ZodType<Prisma.QuoteUpsertArgs> = z.object({\n  select: QuoteSelectSchema.optional(),\n  where: QuoteWhereUniqueInputSchema,\n  create: z.union([ QuoteCreateInputSchema,QuoteUncheckedCreateInputSchema ]),\n  update: z.union([ QuoteUpdateInputSchema,QuoteUncheckedUpdateInputSchema ]),\n}).strict() ;\n\nexport default QuoteUpsertArgsSchema;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAUX,IAAM,oBAAmD,EAAE,OAAO;AAAA,EACvE,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,QAAQ,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC7B,QAAQ,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC7B,QAAQ,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC7B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AAEH,IAAM,wBAA2D,EAAE,OAAO;AAAA,EAC/E,QAAQ,kBAAkB,SAAS;AAAA,EACnC,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,wBAAuB,+BAAgC,CAAC;AAAA,EAC1E,QAAQ,EAAE,MAAM,CAAE,wBAAuB,+BAAgC,CAAC;AAC5E,CAAC,EAAE,OAAO;AAEV,IAAO,gCAAQ;","names":[]}