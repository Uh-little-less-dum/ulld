{"version":3,"sources":["../src/database/inputTypeSchemas/TopicSelectSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAYX,IAAM,oBAAmD,EAAE,OAAO;AAAA,EACvE,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,YAAY,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uBAAuB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,wBAAwB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC/E,cAAc,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,8BAA8B,CAAC,CAAC,EAAE,SAAS;AAAA,EAC3F,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,sBAAsB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC3E,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,gBAAgB,CAAC,CAAC,EAAE,SAAS;AAAA,EACvE,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,0BAA0B,CAAC,CAAC,EAAE,SAAS;AAAA,EACnF,YAAY,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,0BAA0B,CAAC,CAAC,EAAE,SAAS;AAAA,EACrF,WAAW,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,0BAA0B,CAAC,CAAC,EAAE,SAAS;AAAA,EACpF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,8BAA8B,CAAC,CAAC,EAAE,SAAS;AACvF,CAAC,EAAE,OAAO;AACV,IAAO,4BAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { MdxNoteFindManyArgsSchema } from \"../outputTypeSchemas/MdxNoteFindManyArgsSchema\"\nimport { IpynbFindManyArgsSchema } from \"../outputTypeSchemas/IpynbFindManyArgsSchema\"\nimport { QAPairFindManyArgsSchema } from \"../outputTypeSchemas/QAPairFindManyArgsSchema\"\nimport { PracticeExamFindManyArgsSchema } from \"../outputTypeSchemas/PracticeExamFindManyArgsSchema\"\nimport { ToDoFindManyArgsSchema } from \"../outputTypeSchemas/ToDoFindManyArgsSchema\"\nimport { KanbanArgsSchema } from \"../outputTypeSchemas/KanbanArgsSchema\"\nimport { ToDoListFindManyArgsSchema } from \"../outputTypeSchemas/ToDoListFindManyArgsSchema\"\nimport { BibEntryFindManyArgsSchema } from \"../outputTypeSchemas/BibEntryFindManyArgsSchema\"\nimport { EquationFindManyArgsSchema } from \"../outputTypeSchemas/EquationFindManyArgsSchema\"\nimport { TopicCountOutputTypeArgsSchema } from \"../outputTypeSchemas/TopicCountOutputTypeArgsSchema\"\nexport const TopicSelectSchema: z.ZodType<Prisma.TopicSelect> = z.object({\n  value: z.boolean().optional(),\n  kanbanId: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n  lastAccess: z.boolean().optional(),\n  MdxNotes: z.union([z.boolean(),z.lazy(() => MdxNoteFindManyArgsSchema)]).optional(),\n  ipynbNotes: z.union([z.boolean(),z.lazy(() => IpynbFindManyArgsSchema)]).optional(),\n  QAPair: z.union([z.boolean(),z.lazy(() => QAPairFindManyArgsSchema)]).optional(),\n  practiceExam: z.union([z.boolean(),z.lazy(() => PracticeExamFindManyArgsSchema)]).optional(),\n  toDo: z.union([z.boolean(),z.lazy(() => ToDoFindManyArgsSchema)]).optional(),\n  Kanban: z.union([z.boolean(),z.lazy(() => KanbanArgsSchema)]).optional(),\n  todoList: z.union([z.boolean(),z.lazy(() => ToDoListFindManyArgsSchema)]).optional(),\n  bibEntries: z.union([z.boolean(),z.lazy(() => BibEntryFindManyArgsSchema)]).optional(),\n  equations: z.union([z.boolean(),z.lazy(() => EquationFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => TopicCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport default TopicSelectSchema;"]}