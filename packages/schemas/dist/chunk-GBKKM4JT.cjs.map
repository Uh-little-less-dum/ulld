{"version":3,"sources":["../src/database/inputTypeSchemas/BusinessContactCountOrderByAggregateInputSchema.ts"],"names":[],"mappings":";;;;;AACA,SAAS,SAAS;AAEX,IAAM,kDAA+G,EAAE,OAAO;AAAA,EACnI,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,mBAAmB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC1D,OAAO,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC9C,OAAO,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC9C,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAChD,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAClD,CAAC,EAAE,OAAO;AACV,IAAO,0DAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nexport const BusinessContactCountOrderByAggregateInputSchema: z.ZodType<Prisma.BusinessContactCountOrderByAggregateInput> = z.object({\n  id: z.lazy(() => SortOrderSchema).optional(),\n  companyName: z.lazy(() => SortOrderSchema).optional(),\n  contactName: z.lazy(() => SortOrderSchema).optional(),\n  contactPreference: z.lazy(() => SortOrderSchema).optional(),\n  email: z.lazy(() => SortOrderSchema).optional(),\n  phone: z.lazy(() => SortOrderSchema).optional(),\n  message: z.lazy(() => SortOrderSchema).optional(),\n  purpose: z.lazy(() => SortOrderSchema).optional()\n}).strict();\nexport default BusinessContactCountOrderByAggregateInputSchema;"]}