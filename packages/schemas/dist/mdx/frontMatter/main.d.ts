import { z } from "zod";
export declare const jsonSerializableValue: z.ZodUnion<[z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>>, z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>>>, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>>, "many">, z.ZodArray<z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>, "many">, z.ZodArray<z.ZodArray<z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>, "many">, "many">]>;
export declare const frontMatterSchema: z.ZodObject<{
    title: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updated: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    summary: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    subjects: z.ZodDefault<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, string[], string | string[]>>;
    topics: z.ZodDefault<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, string[], string | string[]>>;
    tags: z.ZodDefault<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, string[], string | string[]>>;
    importantValues: z.ZodDefault<z.ZodArray<z.ZodNumber, "many">>;
    id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    sequential: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    sequentialKey: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tableStyles: z.ZodOptional<z.ZodObject<{
        fullWidth: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        text: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodLiteral<"base">, z.ZodLiteral<"lg">, z.ZodLiteral<"xl">, z.ZodLiteral<"small">]>>>;
        math: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodLiteral<"base">, z.ZodLiteral<"lg">, z.ZodLiteral<"xl">, z.ZodLiteral<"small">]>>>;
        tableCenter: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        textCenter: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        headingCenter: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        float: z.ZodOptional<z.ZodNullable<z.ZodEnum<["right", "left"]>>>;
        noMax: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        expand: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
    }, "strip", z.ZodTypeAny, {
        expand: boolean | null;
        fullWidth: boolean | null;
        tableCenter: boolean | null;
        textCenter: boolean | null;
        headingCenter: boolean | null;
        noMax: boolean | null;
        math?: "base" | "lg" | "xl" | "small" | null | undefined;
        text?: "base" | "lg" | "xl" | "small" | null | undefined;
        float?: "right" | "left" | null | undefined;
    }, {
        math?: "base" | "lg" | "xl" | "small" | null | undefined;
        expand?: boolean | null | undefined;
        text?: "base" | "lg" | "xl" | "small" | null | undefined;
        float?: "right" | "left" | null | undefined;
        fullWidth?: boolean | null | undefined;
        tableCenter?: boolean | null | undefined;
        textCenter?: boolean | null | undefined;
        headingCenter?: boolean | null | undefined;
        noMax?: boolean | null | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    tags: string[];
    topics: string[];
    subjects: string[];
    importantValues: number[];
    id?: string | null | undefined;
    summary?: string | null | undefined;
    title?: string | null | undefined;
    sequentialKey?: string | null | undefined;
    created?: string | null | undefined;
    updated?: string | null | undefined;
    sequential?: number | null | undefined;
    tableStyles?: {
        expand: boolean | null;
        fullWidth: boolean | null;
        tableCenter: boolean | null;
        textCenter: boolean | null;
        headingCenter: boolean | null;
        noMax: boolean | null;
        math?: "base" | "lg" | "xl" | "small" | null | undefined;
        text?: "base" | "lg" | "xl" | "small" | null | undefined;
        float?: "right" | "left" | null | undefined;
    } | undefined;
}, {
    tags?: string | string[] | undefined;
    id?: string | null | undefined;
    summary?: string | null | undefined;
    title?: string | null | undefined;
    topics?: string | string[] | undefined;
    subjects?: string | string[] | undefined;
    sequentialKey?: string | null | undefined;
    importantValues?: number[] | undefined;
    created?: string | null | undefined;
    updated?: string | null | undefined;
    sequential?: number | null | undefined;
    tableStyles?: {
        math?: "base" | "lg" | "xl" | "small" | null | undefined;
        expand?: boolean | null | undefined;
        text?: "base" | "lg" | "xl" | "small" | null | undefined;
        float?: "right" | "left" | null | undefined;
        fullWidth?: boolean | null | undefined;
        tableCenter?: boolean | null | undefined;
        textCenter?: boolean | null | undefined;
        headingCenter?: boolean | null | undefined;
        noMax?: boolean | null | undefined;
    } | undefined;
}>;
export declare const extendedFrontMatterSchema: z.ZodIntersection<z.ZodObject<{
    title: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    updated: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    summary: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    subjects: z.ZodDefault<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, string[], string | string[]>>;
    topics: z.ZodDefault<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, string[], string | string[]>>;
    tags: z.ZodDefault<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodArray<z.ZodString, "many">]>, string[], string | string[]>>;
    importantValues: z.ZodDefault<z.ZodArray<z.ZodNumber, "many">>;
    id: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    sequential: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    sequentialKey: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    tableStyles: z.ZodOptional<z.ZodObject<{
        fullWidth: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        text: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodLiteral<"base">, z.ZodLiteral<"lg">, z.ZodLiteral<"xl">, z.ZodLiteral<"small">]>>>;
        math: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodLiteral<"base">, z.ZodLiteral<"lg">, z.ZodLiteral<"xl">, z.ZodLiteral<"small">]>>>;
        tableCenter: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        textCenter: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        headingCenter: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        float: z.ZodOptional<z.ZodNullable<z.ZodEnum<["right", "left"]>>>;
        noMax: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
        expand: z.ZodDefault<z.ZodOptional<z.ZodNullable<z.ZodBoolean>>>;
    }, "strip", z.ZodTypeAny, {
        expand: boolean | null;
        fullWidth: boolean | null;
        tableCenter: boolean | null;
        textCenter: boolean | null;
        headingCenter: boolean | null;
        noMax: boolean | null;
        math?: "base" | "lg" | "xl" | "small" | null | undefined;
        text?: "base" | "lg" | "xl" | "small" | null | undefined;
        float?: "right" | "left" | null | undefined;
    }, {
        math?: "base" | "lg" | "xl" | "small" | null | undefined;
        expand?: boolean | null | undefined;
        text?: "base" | "lg" | "xl" | "small" | null | undefined;
        float?: "right" | "left" | null | undefined;
        fullWidth?: boolean | null | undefined;
        tableCenter?: boolean | null | undefined;
        textCenter?: boolean | null | undefined;
        headingCenter?: boolean | null | undefined;
        noMax?: boolean | null | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    tags: string[];
    topics: string[];
    subjects: string[];
    importantValues: number[];
    id?: string | null | undefined;
    summary?: string | null | undefined;
    title?: string | null | undefined;
    sequentialKey?: string | null | undefined;
    created?: string | null | undefined;
    updated?: string | null | undefined;
    sequential?: number | null | undefined;
    tableStyles?: {
        expand: boolean | null;
        fullWidth: boolean | null;
        tableCenter: boolean | null;
        textCenter: boolean | null;
        headingCenter: boolean | null;
        noMax: boolean | null;
        math?: "base" | "lg" | "xl" | "small" | null | undefined;
        text?: "base" | "lg" | "xl" | "small" | null | undefined;
        float?: "right" | "left" | null | undefined;
    } | undefined;
}, {
    tags?: string | string[] | undefined;
    id?: string | null | undefined;
    summary?: string | null | undefined;
    title?: string | null | undefined;
    topics?: string | string[] | undefined;
    subjects?: string | string[] | undefined;
    sequentialKey?: string | null | undefined;
    importantValues?: number[] | undefined;
    created?: string | null | undefined;
    updated?: string | null | undefined;
    sequential?: number | null | undefined;
    tableStyles?: {
        math?: "base" | "lg" | "xl" | "small" | null | undefined;
        expand?: boolean | null | undefined;
        text?: "base" | "lg" | "xl" | "small" | null | undefined;
        float?: "right" | "left" | null | undefined;
        fullWidth?: boolean | null | undefined;
        tableCenter?: boolean | null | undefined;
        textCenter?: boolean | null | undefined;
        headingCenter?: boolean | null | undefined;
        noMax?: boolean | null | undefined;
    } | undefined;
}>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>>, z.ZodRecord<z.ZodString, z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>>>, z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>>, "many">, z.ZodArray<z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>, "many">, z.ZodArray<z.ZodArray<z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodNull]>, "many">, "many">]>>>;
export type ZodFrontMatterInput = z.input<typeof frontMatterSchema>;
export type ZodFrontMatterOutput = z.output<typeof frontMatterSchema>;
export type FrontMatterType<T extends object = object> = z.input<typeof frontMatterSchema> & T;
//# sourceMappingURL=main.d.ts.map