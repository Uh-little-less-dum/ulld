{"version":3,"sources":["../src/database/outputTypeSchemas/EquationCreateArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { EquationIncludeSchema } from '../inputTypeSchemas/EquationIncludeSchema'\nimport { EquationCreateInputSchema } from '../inputTypeSchemas/EquationCreateInputSchema'\nimport { EquationUncheckedCreateInputSchema } from '../inputTypeSchemas/EquationUncheckedCreateInputSchema'\nimport { RelatedValuesFindManyArgsSchema } from \"../outputTypeSchemas/RelatedValuesFindManyArgsSchema\"\nimport { TagFindManyArgsSchema } from \"../outputTypeSchemas/TagFindManyArgsSchema\"\nimport { TopicFindManyArgsSchema } from \"../outputTypeSchemas/TopicFindManyArgsSchema\"\nimport { SubjectFindManyArgsSchema } from \"../outputTypeSchemas/SubjectFindManyArgsSchema\"\nimport { MdxNoteFindManyArgsSchema } from \"../outputTypeSchemas/MdxNoteFindManyArgsSchema\"\nimport { EquationCountOutputTypeArgsSchema } from \"../outputTypeSchemas/EquationCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const EquationSelectSchema: z.ZodType<Prisma.EquationSelect> = z.object({\n  id: z.boolean().optional(),\n  equationId: z.boolean().optional(),\n  title: z.boolean().optional(),\n  desc: z.boolean().optional(),\n  content: z.boolean().optional(),\n  asPython: z.boolean().optional(),\n  variableLegend: z.boolean().optional(),\n  variables: z.boolean().optional(),\n  keywords: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n  lastAccess: z.boolean().optional(),\n  relatedValues: z.union([z.boolean(),z.lazy(() => RelatedValuesFindManyArgsSchema)]).optional(),\n  tags: z.union([z.boolean(),z.lazy(() => TagFindManyArgsSchema)]).optional(),\n  topics: z.union([z.boolean(),z.lazy(() => TopicFindManyArgsSchema)]).optional(),\n  subjects: z.union([z.boolean(),z.lazy(() => SubjectFindManyArgsSchema)]).optional(),\n  mdxNotes: z.union([z.boolean(),z.lazy(() => MdxNoteFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => EquationCountOutputTypeArgsSchema)]).optional(),\n}).strict()\n\nexport const EquationCreateArgsSchema: z.ZodType<Prisma.EquationCreateArgs> = z.object({\n  select: EquationSelectSchema.optional(),\n  include: EquationIncludeSchema.optional(),\n  data: z.union([ EquationCreateInputSchema,EquationUncheckedCreateInputSchema ]),\n}).strict() ;\n\nexport default EquationCreateArgsSchema;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAcX,IAAM,uBAAyD,EAAE,OAAO;AAAA,EAC7E,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,gBAAgB,EAAE,QAAQ,EAAE,SAAS;AAAA,EACrC,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,eAAe,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,+BAA+B,CAAC,CAAC,EAAE,SAAS;AAAA,EAC7F,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC1E,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uBAAuB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC9E,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,iCAAiC,CAAC,CAAC,EAAE,SAAS;AAC1F,CAAC,EAAE,OAAO;AAEH,IAAM,2BAAiE,EAAE,OAAO;AAAA,EACrF,QAAQ,qBAAqB,SAAS;AAAA,EACtC,SAAS,sBAAsB,SAAS;AAAA,EACxC,MAAM,EAAE,MAAM,CAAE,2BAA0B,kCAAmC,CAAC;AAChF,CAAC,EAAE,OAAO;AAEV,IAAO,mCAAQ;","names":[]}