{"version":3,"sources":["../src/database/inputTypeSchemas/PracticeExamWhereUniqueInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { PracticeExamWhereInputSchema } from './PracticeExamWhereInputSchema';\nimport { IntFilterSchema } from './IntFilterSchema';\nimport { DateTimeFilterSchema } from './DateTimeFilterSchema';\nimport { TopicListRelationFilterSchema } from './TopicListRelationFilterSchema';\nimport { TagListRelationFilterSchema } from './TagListRelationFilterSchema';\nimport { SubjectListRelationFilterSchema } from './SubjectListRelationFilterSchema';\nimport { QAPairListRelationFilterSchema } from './QAPairListRelationFilterSchema';\n\nexport const PracticeExamWhereUniqueInputSchema: z.ZodType<Prisma.PracticeExamWhereUniqueInput> = z.object({\n  id: z.number().int()\n})\n.and(z.object({\n  id: z.number().int().optional(),\n  AND: z.union([ z.lazy(() => PracticeExamWhereInputSchema),z.lazy(() => PracticeExamWhereInputSchema).array() ]).optional(),\n  OR: z.lazy(() => PracticeExamWhereInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => PracticeExamWhereInputSchema),z.lazy(() => PracticeExamWhereInputSchema).array() ]).optional(),\n  correctCount: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),\n  inCorrectCount: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),\n  timeLimitInSeconds: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),\n  timeCompletedInSeconds: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),\n  date: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),\n  topics: z.lazy(() => TopicListRelationFilterSchema).optional(),\n  tags: z.lazy(() => TagListRelationFilterSchema).optional(),\n  subjects: z.lazy(() => SubjectListRelationFilterSchema).optional(),\n  questions: z.lazy(() => QAPairListRelationFilterSchema).optional()\n}).strict());\n\nexport default PracticeExamWhereUniqueInputSchema;\n"],"mappings":";;;;;;;;;;;;;;;AAEA,SAAS,SAAS;AASX,IAAM,qCAAqF,EAAE,OAAO;AAAA,EACzG,IAAI,EAAE,OAAO,EAAE,IAAI;AACrB,CAAC,EACA,IAAI,EAAE,OAAO;AAAA,EACZ,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC9B,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,4BAA4B,GAAE,EAAE,KAAK,MAAM,4BAA4B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACzH,IAAI,EAAE,KAAK,MAAM,4BAA4B,EAAE,MAAM,EAAE,SAAS;AAAA,EAChE,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,4BAA4B,GAAE,EAAE,KAAK,MAAM,4BAA4B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACzH,cAAc,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC,EAAE,SAAS;AAAA,EACnF,gBAAgB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC,EAAE,SAAS;AAAA,EACrF,oBAAoB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC,EAAE,SAAS;AAAA,EACzF,wBAAwB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7F,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,oBAAoB,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AAAA,EAC/E,QAAQ,EAAE,KAAK,MAAM,6BAA6B,EAAE,SAAS;AAAA,EAC7D,MAAM,EAAE,KAAK,MAAM,2BAA2B,EAAE,SAAS;AAAA,EACzD,UAAU,EAAE,KAAK,MAAM,+BAA+B,EAAE,SAAS;AAAA,EACjE,WAAW,EAAE,KAAK,MAAM,8BAA8B,EAAE,SAAS;AACnE,CAAC,EAAE,OAAO,CAAC;AAEX,IAAO,6CAAQ;","names":[]}