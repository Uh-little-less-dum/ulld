{"version":3,"sources":["../src/database/outputTypeSchemas/BibEntryFindFirstArgsSchema.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { BibEntryIncludeSchema } from '../inputTypeSchemas/BibEntryIncludeSchema'\nimport { BibEntryWhereInputSchema } from '../inputTypeSchemas/BibEntryWhereInputSchema'\nimport { BibEntryOrderByWithRelationInputSchema } from '../inputTypeSchemas/BibEntryOrderByWithRelationInputSchema'\nimport { BibEntryWhereUniqueInputSchema } from '../inputTypeSchemas/BibEntryWhereUniqueInputSchema'\nimport { BibEntryScalarFieldEnumSchema } from '../inputTypeSchemas/BibEntryScalarFieldEnumSchema'\nimport { BibArgsSchema } from \"../outputTypeSchemas/BibArgsSchema\"\nimport { CitationsGroupFindManyArgsSchema } from \"../outputTypeSchemas/CitationsGroupFindManyArgsSchema\"\nimport { TagFindManyArgsSchema } from \"../outputTypeSchemas/TagFindManyArgsSchema\"\nimport { TopicFindManyArgsSchema } from \"../outputTypeSchemas/TopicFindManyArgsSchema\"\nimport { SubjectFindManyArgsSchema } from \"../outputTypeSchemas/SubjectFindManyArgsSchema\"\nimport { MdxNoteFindManyArgsSchema } from \"../outputTypeSchemas/MdxNoteFindManyArgsSchema\"\nimport { IpynbFindManyArgsSchema } from \"../outputTypeSchemas/IpynbFindManyArgsSchema\"\nimport { ReadingListFindManyArgsSchema } from \"../outputTypeSchemas/ReadingListFindManyArgsSchema\"\nimport { BibEntryCountOutputTypeArgsSchema } from \"../outputTypeSchemas/BibEntryCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const BibEntrySelectSchema: z.ZodType<Prisma.BibEntrySelect> = z.object({\n  id: z.boolean().optional(),\n  BibId: z.boolean().optional(),\n  OwnWork: z.boolean().optional(),\n  ColleaguesWork: z.boolean().optional(),\n  read: z.boolean().optional(),\n  htmlCitation: z.boolean().optional(),\n  PdfPath: z.boolean().optional(),\n  address: z.boolean().optional(),\n  annote: z.boolean().optional(),\n  author: z.boolean().optional(),\n  booktitle: z.boolean().optional(),\n  chapter: z.boolean().optional(),\n  crossref: z.boolean().optional(),\n  doi: z.boolean().optional(),\n  edition: z.boolean().optional(),\n  editor: z.boolean().optional(),\n  email: z.boolean().optional(),\n  howpublished: z.boolean().optional(),\n  institution: z.boolean().optional(),\n  journal: z.boolean().optional(),\n  month: z.boolean().optional(),\n  note: z.boolean().optional(),\n  number: z.boolean().optional(),\n  organization: z.boolean().optional(),\n  pages: z.boolean().optional(),\n  publisher: z.boolean().optional(),\n  school: z.boolean().optional(),\n  series: z.boolean().optional(),\n  title: z.boolean().optional(),\n  volume: z.boolean().optional(),\n  type: z.boolean().optional(),\n  year: z.boolean().optional(),\n  numpages: z.boolean().optional(),\n  url: z.boolean().optional(),\n  issue: z.boolean().optional(),\n  issn: z.boolean().optional(),\n  abstract: z.boolean().optional(),\n  urldate: z.boolean().optional(),\n  keywords: z.boolean().optional(),\n  copyright: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n  lastAccess: z.boolean().optional(),\n  Bib: z.union([z.boolean(),z.lazy(() => BibArgsSchema)]).optional(),\n  citationGroups: z.union([z.boolean(),z.lazy(() => CitationsGroupFindManyArgsSchema)]).optional(),\n  tags: z.union([z.boolean(),z.lazy(() => TagFindManyArgsSchema)]).optional(),\n  topics: z.union([z.boolean(),z.lazy(() => TopicFindManyArgsSchema)]).optional(),\n  subjects: z.union([z.boolean(),z.lazy(() => SubjectFindManyArgsSchema)]).optional(),\n  MdxNotes: z.union([z.boolean(),z.lazy(() => MdxNoteFindManyArgsSchema)]).optional(),\n  ipynbNotes: z.union([z.boolean(),z.lazy(() => IpynbFindManyArgsSchema)]).optional(),\n  readingList: z.union([z.boolean(),z.lazy(() => ReadingListFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => BibEntryCountOutputTypeArgsSchema)]).optional(),\n}).strict()\n\nexport const BibEntryFindFirstArgsSchema: z.ZodType<Prisma.BibEntryFindFirstArgs> = z.object({\n  select: BibEntrySelectSchema.optional(),\n  include: BibEntryIncludeSchema.optional(),\n  where: BibEntryWhereInputSchema.optional(),\n  orderBy: z.union([ BibEntryOrderByWithRelationInputSchema.array(),BibEntryOrderByWithRelationInputSchema ]).optional(),\n  cursor: BibEntryWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n  distinct: z.union([ BibEntryScalarFieldEnumSchema,BibEntryScalarFieldEnumSchema.array() ]).optional(),\n}).strict() ;\n\nexport default BibEntryFindFirstArgsSchema;\n"]}