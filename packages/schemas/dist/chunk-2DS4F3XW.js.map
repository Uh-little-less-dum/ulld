{"version":3,"sources":["../src/mdx/parsing/params/main.ts"],"sourcesContent":["import { mdxNotePropsSchema } from \"../../../api/prismaMdxRelations/mdxNote/classProps.js\";\n// import type { UnifiedMdxParser } from \"@ulld/api/types\";\nimport type { AppConfigSchemaDeepPartial } from \"@ulld/configschema/types\";\nimport { minimalParsableAppConfig } from \"@ulld/configschema/zod-refinedAppConfigs\";\nimport {\n  documentTypeConfigSchema,\n  documentTypeConfigSchemaInner,\n} from \"@ulld/configschema/zod/documentConfigSchema\";\nimport { appConfigSchema, type AppConfigSchemaOutput } from \"@ulld/configschema/zod/main\";\nimport type { WithRequired } from \"@ulld/utilities/types\";\nimport { z, type ZodTypeAny } from \"zod\";\nimport {\n  extendedFrontMatterSchema,\n  frontMatterSchema,\n} from \"../../frontMatter/main.js\";\n\nexport const mdxNoteFromStringPropsSchema = mdxNotePropsSchema\n  .pick({\n    raw: true,\n    rootRelativePath: true,\n    bookmarked: true,\n  })\n  .merge(\n    z.object({\n      docTypeData: documentTypeConfigSchema,\n    }),\n  );\n\nexport const mdxNoteIntriguingValSummaryPropsSchema = mdxNotePropsSchema\n  .omit({\n    latexTitle: true,\n    raw: true,\n    floatImages: true,\n    formatted: true,\n    citations: true,\n    quickLinkId: true,\n    citationsListOrder: true,\n    outgoingQuickLinks: true,\n    equationIds: true,\n    isProtected: true,\n    sequentialKey: true,\n    sequentialIndex: true,\n    remoteUrl: true,\n    noLog: true,\n    saveFormatted: true,\n    trackRemote: true,\n    topics: true,\n    tags: true,\n    subjects: true,\n  });\n\nconst noteDetailsReturn = z.object({\n  id: z.number().int(),\n  quickLink: z.string().nullish(),\n  bookmarked: z.boolean(),\n  sequentialKey: z.string().nullish(),\n  sequentialIndex: z.number().nullish(),\n  firstSync: z.date().or(z.string()),\n  lastSync: z.date().or(z.string()),\n});\n\nexport const unifiedMdxParserParamSchema = z.object({\n  content: z.string(),\n  docTypeData: documentTypeConfigSchemaInner.required({\n        docType: true,\n        id: true,\n        url: true,\n      }),\n  // docTypeData: z\n  //   .union([\n  //     documentTypeConfigSchemaInner.required({\n  //       docType: true,\n  //       id: true,\n  //       url: true,\n  //     }),\n  //     z.object({}),\n  //   ])\n  //   .default({}),\n  data: frontMatterSchema.deepPartial(),\n  appConfig: appConfigSchema,\n  serverClient: z.any(),\n  db: noteDetailsReturn.optional(),\n});\n\nexport const unifiedMdxParserSchema = z\n  .function()\n  .args(unifiedMdxParserParamSchema)\n  .returns(z.promise(extendedFrontMatterSchema));\n\nexport const fromMdxStringOptSchema = z\n  .object({\n    noteTypeId: z.string().optional(),\n  })\n  .default({});\n\nexport const parseParamsSchema = z.object({\n  appConfig: minimalParsableAppConfig,\n  docTypeData: z.union([documentTypeConfigSchema, z.object({})]).default({}),\n  parser: unifiedMdxParserSchema,\n});\n\nexport const internalMdxStringParseParamSchema = z.object({\n  _opts: fromMdxStringOptSchema,\n  props: mdxNoteFromStringPropsSchema,\n  parseParams: parseParamsSchema,\n});\n\nexport const internalMdxStringParseParamSchemaOptionalAppConfig =\n  internalMdxStringParseParamSchema\n    .omit({\n      parseParams: true,\n    })\n    .extend({\n      parseParams: parseParamsSchema.partial({\n        appConfig: true,\n      }),\n    });\n\nexport type UnifiedMdxParser = z.input<typeof unifiedMdxParserSchema>;\n\nexport type InternalMdxStringParseParams = z.output<\n  typeof internalMdxStringParseParamSchema\n>;\n\nexport type InternalMdxStringParseParamsInput = z.input<\n  typeof internalMdxStringParseParamSchema\n>;\n\n// TODO: Refine this partial app config to actually require the fields that are you know... required.\ntype WithModifiedAppConfig<\n  T extends ZodTypeAny,\n  J extends AppConfigSchemaDeepPartial = AppConfigSchemaDeepPartial,\n  RequiredFields extends keyof AppConfigSchemaOutput = \"fsRoot\",\n> = Omit<z.input<T>, \"appConfig\"> & {\n  appConfig: WithRequired<J, RequiredFields>;\n};\n\ntype WithModifiedAppConfigOutput<\n  T extends ZodTypeAny,\n  J extends AppConfigSchemaDeepPartial = AppConfigSchemaDeepPartial,\n> = Omit<z.output<T>, \"appConfig\"> & {\n  appConfig: J;\n};\n\nexport type UnifiedMdxParserParamsInput = WithModifiedAppConfig<\n  typeof unifiedMdxParserParamSchema\n>;\n\nexport type ParseParamsSchemaInput = z.input<typeof parseParamsSchema>;\n// export type ParseParamsSchemaInput = Omit<\n//     WithModifiedAppConfig<\n//         typeof parseParamsSchema,\n//         AppConfigSchemaDeepPartial,\n//         \"fsRoot\" | \"noteTypes\"\n//     >,\n//     \"parser\"\n// > & {\n//     parser: UnifiedMdxParser;\n// };\n\n// TODO: Remove all these unnecessary modifications to the appconfig\nexport type ParseParamsSchemaOutput = Omit<\n  WithModifiedAppConfigOutput<typeof parseParamsSchema>,\n  \"parser\"\n> & {\n  parser: UnifiedMdxParser;\n};\n\nexport type ParseParamsSchemaType = z.input<typeof parseParamsSchema>;\n\n// TODO: Moving this to configschema package.\nexport type MinimalParsableAppConfig = z.input<typeof minimalParsableAppConfig>;\nexport type MinimalParsableAppConfigOutput = z.output<\n  typeof minimalParsableAppConfig\n>;\n"],"mappings":";;;;;;;;;AAGA,SAAS,gCAAgC;AACzC;AAAA,EACE;AAAA,EACA;AAAA,OACK;AACP,SAAS,uBAAmD;AAE5D,SAAS,SAA0B;AAM5B,IAAM,+BAA+B,mBACzC,KAAK;AAAA,EACJ,KAAK;AAAA,EACL,kBAAkB;AAAA,EAClB,YAAY;AACd,CAAC,EACA;AAAA,EACC,EAAE,OAAO;AAAA,IACP,aAAa;AAAA,EACf,CAAC;AACH;AAEK,IAAM,yCAAyC,mBACnD,KAAK;AAAA,EACJ,YAAY;AAAA,EACZ,KAAK;AAAA,EACL,aAAa;AAAA,EACb,WAAW;AAAA,EACX,WAAW;AAAA,EACX,aAAa;AAAA,EACb,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,aAAa;AAAA,EACb,aAAa;AAAA,EACb,eAAe;AAAA,EACf,iBAAiB;AAAA,EACjB,WAAW;AAAA,EACX,OAAO;AAAA,EACP,eAAe;AAAA,EACf,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AACZ,CAAC;AAEH,IAAM,oBAAoB,EAAE,OAAO;AAAA,EACjC,IAAI,EAAE,OAAO,EAAE,IAAI;AAAA,EACnB,WAAW,EAAE,OAAO,EAAE,QAAQ;AAAA,EAC9B,YAAY,EAAE,QAAQ;AAAA,EACtB,eAAe,EAAE,OAAO,EAAE,QAAQ;AAAA,EAClC,iBAAiB,EAAE,OAAO,EAAE,QAAQ;AAAA,EACpC,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC;AAAA,EACjC,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC;AAClC,CAAC;AAEM,IAAM,8BAA8B,EAAE,OAAO;AAAA,EAClD,SAAS,EAAE,OAAO;AAAA,EAClB,aAAa,8BAA8B,SAAS;AAAA,IAC9C,SAAS;AAAA,IACT,IAAI;AAAA,IACJ,KAAK;AAAA,EACP,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWL,MAAM,kBAAkB,YAAY;AAAA,EACpC,WAAW;AAAA,EACX,cAAc,EAAE,IAAI;AAAA,EACpB,IAAI,kBAAkB,SAAS;AACjC,CAAC;AAEM,IAAM,yBAAyB,EACnC,SAAS,EACT,KAAK,2BAA2B,EAChC,QAAQ,EAAE,QAAQ,yBAAyB,CAAC;AAExC,IAAM,yBAAyB,EACnC,OAAO;AAAA,EACN,YAAY,EAAE,OAAO,EAAE,SAAS;AAClC,CAAC,EACA,QAAQ,CAAC,CAAC;AAEN,IAAM,oBAAoB,EAAE,OAAO;AAAA,EACxC,WAAW;AAAA,EACX,aAAa,EAAE,MAAM,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAAA,EACzE,QAAQ;AACV,CAAC;AAEM,IAAM,oCAAoC,EAAE,OAAO;AAAA,EACxD,OAAO;AAAA,EACP,OAAO;AAAA,EACP,aAAa;AACf,CAAC;AAEM,IAAM,qDACX,kCACG,KAAK;AAAA,EACJ,aAAa;AACf,CAAC,EACA,OAAO;AAAA,EACN,aAAa,kBAAkB,QAAQ;AAAA,IACrC,WAAW;AAAA,EACb,CAAC;AACH,CAAC;","names":[]}