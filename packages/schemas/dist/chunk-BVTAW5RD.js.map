{"version":3,"sources":["../src/database/outputTypeSchemas/SubjectUpsertArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { SubjectIncludeSchema } from '../inputTypeSchemas/SubjectIncludeSchema.js'\nimport { SubjectWhereUniqueInputSchema } from '../inputTypeSchemas/SubjectWhereUniqueInputSchema.js'\nimport { SubjectCreateInputSchema } from '../inputTypeSchemas/SubjectCreateInputSchema.js'\nimport { SubjectUncheckedCreateInputSchema } from '../inputTypeSchemas/SubjectUncheckedCreateInputSchema.js'\nimport { SubjectUpdateInputSchema } from '../inputTypeSchemas/SubjectUpdateInputSchema.js'\nimport { SubjectUncheckedUpdateInputSchema } from '../inputTypeSchemas/SubjectUncheckedUpdateInputSchema.js'\nimport { MdxNoteFindManyArgsSchema } from \"../outputTypeSchemas/MdxNoteFindManyArgsSchema\"\nimport { IpynbFindManyArgsSchema } from \"../outputTypeSchemas/IpynbFindManyArgsSchema\"\nimport { QAPairFindManyArgsSchema } from \"../outputTypeSchemas/QAPairFindManyArgsSchema\"\nimport { PracticeExamFindManyArgsSchema } from \"../outputTypeSchemas/PracticeExamFindManyArgsSchema\"\nimport { KanbanArgsSchema } from \"../outputTypeSchemas/KanbanArgsSchema\"\nimport { ToDoListFindManyArgsSchema } from \"../outputTypeSchemas/ToDoListFindManyArgsSchema\"\nimport { ToDoFindManyArgsSchema } from \"../outputTypeSchemas/ToDoFindManyArgsSchema\"\nimport { BibEntryFindManyArgsSchema } from \"../outputTypeSchemas/BibEntryFindManyArgsSchema\"\nimport { EquationFindManyArgsSchema } from \"../outputTypeSchemas/EquationFindManyArgsSchema\"\nimport { SubjectCountOutputTypeArgsSchema } from \"../outputTypeSchemas/SubjectCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const SubjectSelectSchema: z.ZodType<Prisma.SubjectSelect> = z.object({\n  value: z.boolean().optional(),\n  kanbanId: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n  lastAccess: z.boolean().optional(),\n  MdxNotes: z.union([z.boolean(),z.lazy(() => MdxNoteFindManyArgsSchema)]).optional(),\n  IpynbNotes: z.union([z.boolean(),z.lazy(() => IpynbFindManyArgsSchema)]).optional(),\n  QaPair: z.union([z.boolean(),z.lazy(() => QAPairFindManyArgsSchema)]).optional(),\n  practiceExam: z.union([z.boolean(),z.lazy(() => PracticeExamFindManyArgsSchema)]).optional(),\n  Kanban: z.union([z.boolean(),z.lazy(() => KanbanArgsSchema)]).optional(),\n  todoList: z.union([z.boolean(),z.lazy(() => ToDoListFindManyArgsSchema)]).optional(),\n  toDo: z.union([z.boolean(),z.lazy(() => ToDoFindManyArgsSchema)]).optional(),\n  bibEntries: z.union([z.boolean(),z.lazy(() => BibEntryFindManyArgsSchema)]).optional(),\n  equations: z.union([z.boolean(),z.lazy(() => EquationFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => SubjectCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport const SubjectUpsertArgsSchema: z.ZodType<Prisma.SubjectUpsertArgs> = z.object({\n  select: SubjectSelectSchema.optional(),\n  include: SubjectIncludeSchema.optional(),\n  where: SubjectWhereUniqueInputSchema,\n  create: z.union([ SubjectCreateInputSchema,SubjectUncheckedCreateInputSchema ]),\n  update: z.union([ SubjectUpdateInputSchema,SubjectUncheckedUpdateInputSchema ]),\n}).strict() ;\nexport default SubjectUpsertArgsSchema;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAoBX,IAAM,sBAAuD,EAAE,OAAO;AAAA,EAC3E,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,YAAY,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uBAAuB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,wBAAwB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC/E,cAAc,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,8BAA8B,CAAC,CAAC,EAAE,SAAS;AAAA,EAC3F,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,gBAAgB,CAAC,CAAC,EAAE,SAAS;AAAA,EACvE,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,0BAA0B,CAAC,CAAC,EAAE,SAAS;AAAA,EACnF,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,sBAAsB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC3E,YAAY,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,0BAA0B,CAAC,CAAC,EAAE,SAAS;AAAA,EACrF,WAAW,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,0BAA0B,CAAC,CAAC,EAAE,SAAS;AAAA,EACpF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,gCAAgC,CAAC,CAAC,EAAE,SAAS;AACzF,CAAC,EAAE,OAAO;AACH,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,QAAQ,oBAAoB,SAAS;AAAA,EACrC,SAAS,qBAAqB,SAAS;AAAA,EACvC,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,0BAAyB,iCAAkC,CAAC;AAAA,EAC9E,QAAQ,EAAE,MAAM,CAAE,0BAAyB,iCAAkC,CAAC;AAChF,CAAC,EAAE,OAAO;AACV,IAAO,kCAAQ;","names":[]}