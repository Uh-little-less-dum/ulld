{"version":3,"sources":["../src/database/outputTypeSchemas/DailyFocusUpsertArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { DailyFocusWhereUniqueInputSchema } from '../inputTypeSchemas/DailyFocusWhereUniqueInputSchema.js'\nimport { DailyFocusCreateInputSchema } from '../inputTypeSchemas/DailyFocusCreateInputSchema.js'\nimport { DailyFocusUncheckedCreateInputSchema } from '../inputTypeSchemas/DailyFocusUncheckedCreateInputSchema.js'\nimport { DailyFocusUpdateInputSchema } from '../inputTypeSchemas/DailyFocusUpdateInputSchema.js'\nimport { DailyFocusUncheckedUpdateInputSchema } from '../inputTypeSchemas/DailyFocusUncheckedUpdateInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const DailyFocusSelectSchema: z.ZodType<Prisma.DailyFocusSelect> = z.object({\n  value: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n}).strict()\nexport const DailyFocusUpsertArgsSchema: z.ZodType<Prisma.DailyFocusUpsertArgs> = z.object({\n  select: DailyFocusSelectSchema.optional(),\n  where: DailyFocusWhereUniqueInputSchema,\n  create: z.union([ DailyFocusCreateInputSchema,DailyFocusUncheckedCreateInputSchema ]),\n  update: z.union([ DailyFocusUpdateInputSchema,DailyFocusUncheckedUpdateInputSchema ]),\n}).strict() ;\nexport default DailyFocusUpsertArgsSchema;"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AASX,IAAM,yBAA6D,EAAE,OAAO;AAAA,EACjF,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AACH,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,QAAQ,uBAAuB,SAAS;AAAA,EACxC,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,6BAA4B,oCAAqC,CAAC;AAAA,EACpF,QAAQ,EAAE,MAAM,CAAE,6BAA4B,oCAAqC,CAAC;AACtF,CAAC,EAAE,OAAO;AACV,IAAO,qCAAQ;","names":[]}