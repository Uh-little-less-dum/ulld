{"version":3,"sources":["../src/database/outputTypeSchemas/QuoteUpdateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,oBAAmD,EAAE,OAAO;AAAA,EACvE,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,QAAQ,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC7B,QAAQ,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC7B,QAAQ,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC7B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AACH,IAAM,wBAA2D,EAAE,OAAO;AAAA,EAC/E,QAAQ,kBAAkB,SAAS;AAAA,EACnC,MAAM,EAAE,MAAM,CAAE,wBAAuB,+BAAgC,CAAC;AAAA,EACxE,OAAO;AACT,CAAC,EAAE,OAAO;AACV,IAAO,gCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { QuoteUpdateInputSchema } from '../inputTypeSchemas/QuoteUpdateInputSchema.js'\nimport { QuoteUncheckedUpdateInputSchema } from '../inputTypeSchemas/QuoteUncheckedUpdateInputSchema.js'\nimport { QuoteWhereUniqueInputSchema } from '../inputTypeSchemas/QuoteWhereUniqueInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const QuoteSelectSchema: z.ZodType<Prisma.QuoteSelect> = z.object({\n  body: z.boolean().optional(),\n  author: z.boolean().optional(),\n  source: z.boolean().optional(),\n  pinned: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n}).strict()\nexport const QuoteUpdateArgsSchema: z.ZodType<Prisma.QuoteUpdateArgs> = z.object({\n  select: QuoteSelectSchema.optional(),\n  data: z.union([ QuoteUpdateInputSchema,QuoteUncheckedUpdateInputSchema ]),\n  where: QuoteWhereUniqueInputSchema,\n}).strict() ;\nexport default QuoteUpdateArgsSchema;"]}