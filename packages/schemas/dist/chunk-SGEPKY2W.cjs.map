{"version":3,"sources":["../src/database/outputTypeSchemas/NoteTypeCreateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,uBAAyD,EAAE,OAAO;AAAA,EAC7E,MAAM,EAAE,QAAQ,EAAE,SAAS;AAC7B,CAAC,EAAE,OAAO;AAEH,IAAM,2BAAiE,EAAE,OAAO;AAAA,EACrF,QAAQ,qBAAqB,SAAS;AAAA,EACtC,MAAM,EAAE,MAAM,CAAE,2BAA0B,kCAAmC,CAAC;AAChF,CAAC,EAAE,OAAO;AAEV,IAAO,mCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { NoteTypeCreateInputSchema } from '../inputTypeSchemas/NoteTypeCreateInputSchema'\nimport { NoteTypeUncheckedCreateInputSchema } from '../inputTypeSchemas/NoteTypeUncheckedCreateInputSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const NoteTypeSelectSchema: z.ZodType<Prisma.NoteTypeSelect> = z.object({\n  name: z.boolean().optional(),\n}).strict()\n\nexport const NoteTypeCreateArgsSchema: z.ZodType<Prisma.NoteTypeCreateArgs> = z.object({\n  select: NoteTypeSelectSchema.optional(),\n  data: z.union([ NoteTypeCreateInputSchema,NoteTypeUncheckedCreateInputSchema ]),\n}).strict() ;\n\nexport default NoteTypeCreateArgsSchema;\n"]}