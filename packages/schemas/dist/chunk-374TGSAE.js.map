{"version":3,"sources":["../src/database/inputTypeSchemas/ToDoOrderByWithAggregationInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nimport { SortOrderInputSchema } from './SortOrderInputSchema.js';\nimport { ToDoCountOrderByAggregateInputSchema } from './ToDoCountOrderByAggregateInputSchema.js';\nimport { ToDoAvgOrderByAggregateInputSchema } from './ToDoAvgOrderByAggregateInputSchema.js';\nimport { ToDoMaxOrderByAggregateInputSchema } from './ToDoMaxOrderByAggregateInputSchema.js';\nimport { ToDoMinOrderByAggregateInputSchema } from './ToDoMinOrderByAggregateInputSchema.js';\nimport { ToDoSumOrderByAggregateInputSchema } from './ToDoSumOrderByAggregateInputSchema.js';\nexport const ToDoOrderByWithAggregationInputSchema: z.ZodType<Prisma.ToDoOrderByWithAggregationInput> = z.object({\n  id: z.lazy(() => SortOrderSchema).optional(),\n  createdAt: z.lazy(() => SortOrderSchema).optional(),\n  task: z.lazy(() => SortOrderSchema).optional(),\n  dueAt: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  details: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  parentId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  category: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  bookmarked: z.lazy(() => SortOrderSchema).optional(),\n  status: z.lazy(() => SortOrderSchema).optional(),\n  priority: z.lazy(() => SortOrderSchema).optional(),\n  toDoListId: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  completedOn: z.union([ z.lazy(() => SortOrderSchema),z.lazy(() => SortOrderInputSchema) ]).optional(),\n  _count: z.lazy(() => ToDoCountOrderByAggregateInputSchema).optional(),\n  _avg: z.lazy(() => ToDoAvgOrderByAggregateInputSchema).optional(),\n  _max: z.lazy(() => ToDoMaxOrderByAggregateInputSchema).optional(),\n  _min: z.lazy(() => ToDoMinOrderByAggregateInputSchema).optional(),\n  _sum: z.lazy(() => ToDoSumOrderByAggregateInputSchema).optional()\n}).strict();\nexport default ToDoOrderByWithAggregationInputSchema;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAQX,IAAM,wCAA2F,EAAE,OAAO;AAAA,EAC/G,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,WAAW,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAClD,MAAM,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC7C,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9F,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EAChG,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EACjG,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EACjG,YAAY,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACnD,QAAQ,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC/C,UAAU,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACjD,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EACnG,aAAa,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,KAAK,MAAM,oBAAoB,CAAE,CAAC,EAAE,SAAS;AAAA,EACpG,QAAQ,EAAE,KAAK,MAAM,oCAAoC,EAAE,SAAS;AAAA,EACpE,MAAM,EAAE,KAAK,MAAM,kCAAkC,EAAE,SAAS;AAAA,EAChE,MAAM,EAAE,KAAK,MAAM,kCAAkC,EAAE,SAAS;AAAA,EAChE,MAAM,EAAE,KAAK,MAAM,kCAAkC,EAAE,SAAS;AAAA,EAChE,MAAM,EAAE,KAAK,MAAM,kCAAkC,EAAE,SAAS;AAClE,CAAC,EAAE,OAAO;AACV,IAAO,gDAAQ;","names":[]}