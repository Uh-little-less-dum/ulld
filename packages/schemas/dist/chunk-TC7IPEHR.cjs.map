{"version":3,"sources":["../src/database/inputTypeSchemas/ToDoScalarWhereWithAggregatesInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAUX,IAAM,2CAAiG,EAAE,OAAO;AAAA,EACrH,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,KAAK,MAAM,wCAAwC,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjJ,IAAI,EAAE,KAAK,MAAM,wCAAwC,EAAE,MAAM,EAAE,SAAS;AAAA,EAC5E,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,KAAK,MAAM,wCAAwC,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjJ,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACjF,WAAW,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kCAAkC,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AAAA,EAClG,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACtF,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,0CAA0C,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EACjH,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAC5G,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,qCAAqC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAC1G,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kDAAkD,GAAE,EAAE,KAAK,MAAM,kBAAkB,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAC7I,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,QAAQ,CAAE,CAAC,EAAE,SAAS;AAAA,EAC3F,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACxF,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACvF,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,qCAAqC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAC5G,aAAa,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,0CAA0C,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AACzH,CAAC,EAAE,OAAO;AACV,IAAO,mDAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { IntWithAggregatesFilterSchema } from './IntWithAggregatesFilterSchema.js';\nimport { DateTimeWithAggregatesFilterSchema } from './DateTimeWithAggregatesFilterSchema.js';\nimport { StringWithAggregatesFilterSchema } from './StringWithAggregatesFilterSchema.js';\nimport { DateTimeNullableWithAggregatesFilterSchema } from './DateTimeNullableWithAggregatesFilterSchema.js';\nimport { StringNullableWithAggregatesFilterSchema } from './StringNullableWithAggregatesFilterSchema.js';\nimport { IntNullableWithAggregatesFilterSchema } from './IntNullableWithAggregatesFilterSchema.js';\nimport { EnumTaskCategoryNullableWithAggregatesFilterSchema } from './EnumTaskCategoryNullableWithAggregatesFilterSchema.js';\nimport { TaskCategorySchema } from './TaskCategorySchema.js';\nimport { BoolWithAggregatesFilterSchema } from './BoolWithAggregatesFilterSchema.js';\nexport const ToDoScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.ToDoScalarWhereWithAggregatesInput> = z.object({\n  AND: z.union([ z.lazy(() => ToDoScalarWhereWithAggregatesInputSchema),z.lazy(() => ToDoScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  OR: z.lazy(() => ToDoScalarWhereWithAggregatesInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => ToDoScalarWhereWithAggregatesInputSchema),z.lazy(() => ToDoScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  id: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),\n  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),\n  task: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  dueAt: z.union([ z.lazy(() => DateTimeNullableWithAggregatesFilterSchema),z.coerce.date() ]).optional().nullable(),\n  details: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  parentId: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  category: z.union([ z.lazy(() => EnumTaskCategoryNullableWithAggregatesFilterSchema),z.lazy(() => TaskCategorySchema) ]).optional().nullable(),\n  bookmarked: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),\n  status: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  priority: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),\n  toDoListId: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  completedOn: z.union([ z.lazy(() => DateTimeNullableWithAggregatesFilterSchema),z.coerce.date() ]).optional().nullable(),\n}).strict();\nexport default ToDoScalarWhereWithAggregatesInputSchema;"]}