{"version":3,"sources":["../src/database/outputTypeSchemas/AutoSettingUpdateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS;AAQX,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,OAAO,EAAE,QAAQ,EAAE,SAAS;AAC9B,CAAC,EAAE,OAAO;AAEH,IAAM,8BAAuE,EAAE,OAAO;AAAA,EAC3F,QAAQ,wBAAwB,SAAS;AAAA,EACzC,MAAM,EAAE,MAAM,CAAE,8BAA6B,qCAAsC,CAAC;AAAA,EACpF,OAAO;AACT,CAAC,EAAE,OAAO;AAEV,IAAO,sCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { AutoSettingUpdateInputSchema } from '../inputTypeSchemas/AutoSettingUpdateInputSchema'\nimport { AutoSettingUncheckedUpdateInputSchema } from '../inputTypeSchemas/AutoSettingUncheckedUpdateInputSchema'\nimport { AutoSettingWhereUniqueInputSchema } from '../inputTypeSchemas/AutoSettingWhereUniqueInputSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const AutoSettingSelectSchema: z.ZodType<Prisma.AutoSettingSelect> = z.object({\n  id: z.boolean().optional(),\n  type: z.boolean().optional(),\n  glob: z.boolean().optional(),\n  value: z.boolean().optional(),\n}).strict()\n\nexport const AutoSettingUpdateArgsSchema: z.ZodType<Prisma.AutoSettingUpdateArgs> = z.object({\n  select: AutoSettingSelectSchema.optional(),\n  data: z.union([ AutoSettingUpdateInputSchema,AutoSettingUncheckedUpdateInputSchema ]),\n  where: AutoSettingWhereUniqueInputSchema,\n}).strict() ;\n\nexport default AutoSettingUpdateArgsSchema;\n"]}