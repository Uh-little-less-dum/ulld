{"version":3,"sources":["../src/database/inputTypeSchemas/ToDoListScalarWhereWithAggregatesInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,SAAS,SAAS;AAIX,IAAM,+CAAyG,EAAE,OAAO;AAAA,EAC7H,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,4CAA4C,GAAE,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACzJ,IAAI,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,EAAE,SAAS;AAAA,EAChF,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,4CAA4C,GAAE,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACzJ,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACjF,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACvF,WAAW,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kCAAkC,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AAAA,EAClG,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kCAAkC,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AAAA,EACnG,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kCAAkC,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AACrG,CAAC,EAAE,OAAO;AACV,IAAO,uDAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { IntWithAggregatesFilterSchema } from './IntWithAggregatesFilterSchema.js';\nimport { StringWithAggregatesFilterSchema } from './StringWithAggregatesFilterSchema.js';\nimport { DateTimeWithAggregatesFilterSchema } from './DateTimeWithAggregatesFilterSchema.js';\nexport const ToDoListScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.ToDoListScalarWhereWithAggregatesInput> = z.object({\n  AND: z.union([ z.lazy(() => ToDoListScalarWhereWithAggregatesInputSchema),z.lazy(() => ToDoListScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  OR: z.lazy(() => ToDoListScalarWhereWithAggregatesInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => ToDoListScalarWhereWithAggregatesInputSchema),z.lazy(() => ToDoListScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  id: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),\n  label: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  createdAt: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),\n  lastUpdate: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),\n  lastAccess: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),\n}).strict();\nexport default ToDoListScalarWhereWithAggregatesInputSchema;"]}