{"version":3,"sources":["../src/database/inputTypeSchemas/DietaryItemUncheckedUpdateWithoutServingInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { IntFieldUpdateOperationsInputSchema } from './IntFieldUpdateOperationsInputSchema.js';\nimport { StringFieldUpdateOperationsInputSchema } from './StringFieldUpdateOperationsInputSchema.js';\nimport { NullableStringFieldUpdateOperationsInputSchema } from './NullableStringFieldUpdateOperationsInputSchema.js';\nimport { NullableIntFieldUpdateOperationsInputSchema } from './NullableIntFieldUpdateOperationsInputSchema.js';\nimport { NullableFloatFieldUpdateOperationsInputSchema } from './NullableFloatFieldUpdateOperationsInputSchema.js';\nimport { BoolFieldUpdateOperationsInputSchema } from './BoolFieldUpdateOperationsInputSchema.js';\nimport { FloatFieldUpdateOperationsInputSchema } from './FloatFieldUpdateOperationsInputSchema.js';\nimport { DietUncheckedUpdateManyWithoutItemsNestedInputSchema } from './DietUncheckedUpdateManyWithoutItemsNestedInputSchema.js';\nexport const DietaryItemUncheckedUpdateWithoutServingInputSchema: z.ZodType<Prisma.DietaryItemUncheckedUpdateWithoutServingInput> = z.object({\n  id: z.union([ z.number().int(),z.lazy(() => IntFieldUpdateOperationsInputSchema) ]).optional(),\n  name: z.union([ z.string(),z.lazy(() => StringFieldUpdateOperationsInputSchema) ]).optional(),\n  barcode: z.union([ z.string(),z.lazy(() => NullableStringFieldUpdateOperationsInputSchema) ]).optional().nullable(),\n  gi: z.union([ z.number().int(),z.lazy(() => NullableIntFieldUpdateOperationsInputSchema) ]).optional().nullable(),\n  calsPerOz: z.union([ z.number(),z.lazy(() => NullableFloatFieldUpdateOperationsInputSchema) ]).optional().nullable(),\n  glutenFree: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),\n  minimalFructose: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),\n  natural: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),\n  organic: z.union([ z.boolean(),z.lazy(() => BoolFieldUpdateOperationsInputSchema) ]).optional(),\n  impactScore: z.union([ z.number(),z.lazy(() => FloatFieldUpdateOperationsInputSchema) ]).optional(),\n  Diet: z.lazy(() => DietUncheckedUpdateManyWithoutItemsNestedInputSchema).optional()\n}).strict();\nexport default DietaryItemUncheckedUpdateWithoutServingInputSchema;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AASX,IAAM,sDAAuH,EAAE,OAAO;AAAA,EAC3I,IAAI,EAAE,MAAM,CAAE,EAAE,OAAO,EAAE,IAAI,GAAE,EAAE,KAAK,MAAM,mCAAmC,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7F,MAAM,EAAE,MAAM,CAAE,EAAE,OAAO,GAAE,EAAE,KAAK,MAAM,sCAAsC,CAAE,CAAC,EAAE,SAAS;AAAA,EAC5F,SAAS,EAAE,MAAM,CAAE,EAAE,OAAO,GAAE,EAAE,KAAK,MAAM,8CAA8C,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAClH,IAAI,EAAE,MAAM,CAAE,EAAE,OAAO,EAAE,IAAI,GAAE,EAAE,KAAK,MAAM,2CAA2C,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAChH,WAAW,EAAE,MAAM,CAAE,EAAE,OAAO,GAAE,EAAE,KAAK,MAAM,6CAA6C,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EACnH,YAAY,EAAE,MAAM,CAAE,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,oCAAoC,CAAE,CAAC,EAAE,SAAS;AAAA,EACjG,iBAAiB,EAAE,MAAM,CAAE,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,oCAAoC,CAAE,CAAC,EAAE,SAAS;AAAA,EACtG,SAAS,EAAE,MAAM,CAAE,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,oCAAoC,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9F,SAAS,EAAE,MAAM,CAAE,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,oCAAoC,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9F,aAAa,EAAE,MAAM,CAAE,EAAE,OAAO,GAAE,EAAE,KAAK,MAAM,qCAAqC,CAAE,CAAC,EAAE,SAAS;AAAA,EAClG,MAAM,EAAE,KAAK,MAAM,oDAAoD,EAAE,SAAS;AACpF,CAAC,EAAE,OAAO;AACV,IAAO,8DAAQ;","names":[]}