{"version":3,"sources":["../src/database/inputTypeSchemas/PracticeExamCreateInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { TopicCreateNestedManyWithoutPracticeExamInputSchema } from './TopicCreateNestedManyWithoutPracticeExamInputSchema';\nimport { TagCreateNestedManyWithoutPracticeExamInputSchema } from './TagCreateNestedManyWithoutPracticeExamInputSchema';\nimport { SubjectCreateNestedManyWithoutPracticeExamInputSchema } from './SubjectCreateNestedManyWithoutPracticeExamInputSchema';\nimport { QAPairCreateNestedManyWithoutPracticeExamInputSchema } from './QAPairCreateNestedManyWithoutPracticeExamInputSchema';\n\nexport const PracticeExamCreateInputSchema: z.ZodType<Prisma.PracticeExamCreateInput> = z.object({\n  correctCount: z.number().int(),\n  inCorrectCount: z.number().int(),\n  timeLimitInSeconds: z.number().int(),\n  timeCompletedInSeconds: z.number().int(),\n  date: z.coerce.date().optional(),\n  topics: z.lazy(() => TopicCreateNestedManyWithoutPracticeExamInputSchema).optional(),\n  tags: z.lazy(() => TagCreateNestedManyWithoutPracticeExamInputSchema).optional(),\n  subjects: z.lazy(() => SubjectCreateNestedManyWithoutPracticeExamInputSchema).optional(),\n  questions: z.lazy(() => QAPairCreateNestedManyWithoutPracticeExamInputSchema).optional()\n}).strict();\n\nexport default PracticeExamCreateInputSchema;\n"],"mappings":";;;;;;;;AAEA,SAAS,SAAS;AAMX,IAAM,gCAA2E,EAAE,OAAO;AAAA,EAC/F,cAAc,EAAE,OAAO,EAAE,IAAI;AAAA,EAC7B,gBAAgB,EAAE,OAAO,EAAE,IAAI;AAAA,EAC/B,oBAAoB,EAAE,OAAO,EAAE,IAAI;AAAA,EACnC,wBAAwB,EAAE,OAAO,EAAE,IAAI;AAAA,EACvC,MAAM,EAAE,OAAO,KAAK,EAAE,SAAS;AAAA,EAC/B,QAAQ,EAAE,KAAK,MAAM,mDAAmD,EAAE,SAAS;AAAA,EACnF,MAAM,EAAE,KAAK,MAAM,iDAAiD,EAAE,SAAS;AAAA,EAC/E,UAAU,EAAE,KAAK,MAAM,qDAAqD,EAAE,SAAS;AAAA,EACvF,WAAW,EAAE,KAAK,MAAM,oDAAoD,EAAE,SAAS;AACzF,CAAC,EAAE,OAAO;AAEV,IAAO,wCAAQ;","names":[]}