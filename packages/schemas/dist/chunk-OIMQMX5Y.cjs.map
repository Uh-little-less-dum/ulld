{"version":3,"sources":["../src/database/outputTypeSchemas/CitationsGroupGroupByArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAMX,IAAM,kCAA+E,EAAE,OAAO;AAAA,EACnG,OAAO,+BAA+B,SAAS;AAAA,EAC/C,SAAS,EAAE,MAAM,CAAE,gDAAgD,MAAM,GAAE,+CAAgD,CAAC,EAAE,SAAS;AAAA,EACvI,IAAI,oCAAoC,MAAM;AAAA,EAC9C,QAAQ,mDAAmD,SAAS;AAAA,EACpE,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AACV,IAAO,0CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { CitationsGroupWhereInputSchema } from '../inputTypeSchemas/CitationsGroupWhereInputSchema.js'\nimport { CitationsGroupOrderByWithAggregationInputSchema } from '../inputTypeSchemas/CitationsGroupOrderByWithAggregationInputSchema.js'\nimport { CitationsGroupScalarFieldEnumSchema } from '../inputTypeSchemas/CitationsGroupScalarFieldEnumSchema.js'\nimport { CitationsGroupScalarWhereWithAggregatesInputSchema } from '../inputTypeSchemas/CitationsGroupScalarWhereWithAggregatesInputSchema.js'\nexport const CitationsGroupGroupByArgsSchema: z.ZodType<Prisma.CitationsGroupGroupByArgs> = z.object({\n  where: CitationsGroupWhereInputSchema.optional(),\n  orderBy: z.union([ CitationsGroupOrderByWithAggregationInputSchema.array(),CitationsGroupOrderByWithAggregationInputSchema ]).optional(),\n  by: CitationsGroupScalarFieldEnumSchema.array(),\n  having: CitationsGroupScalarWhereWithAggregatesInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\nexport default CitationsGroupGroupByArgsSchema;"]}