{"version":3,"sources":["../src/database/outputTypeSchemas/WaitlistRequestDeleteArgsSchema.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;AAKX,IAAM,8BAAuE,EAAE,OAAO;AAAA,EAC3F,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,YAAY,EAAE,QAAQ,EAAE,SAAS;AACnC,CAAC,EAAE,OAAO;AACH,IAAM,kCAA+E,EAAE,OAAO;AAAA,EACnG,QAAQ,4BAA4B,SAAS;AAAA,EAC7C,OAAO;AACT,CAAC,EAAE,OAAO;AACV,IAAO,0CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { WaitlistRequestWhereUniqueInputSchema } from '../inputTypeSchemas/WaitlistRequestWhereUniqueInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const WaitlistRequestSelectSchema: z.ZodType<Prisma.WaitlistRequestSelect> = z.object({\n  id: z.boolean().optional(),\n  email: z.boolean().optional(),\n  receivedOn: z.boolean().optional(),\n  emailsSent: z.boolean().optional(),\n}).strict()\nexport const WaitlistRequestDeleteArgsSchema: z.ZodType<Prisma.WaitlistRequestDeleteArgs> = z.object({\n  select: WaitlistRequestSelectSchema.optional(),\n  where: WaitlistRequestWhereUniqueInputSchema,\n}).strict() ;\nexport default WaitlistRequestDeleteArgsSchema;"]}