{"version":3,"sources":["../src/database/outputTypeSchemas/FeatureRequestUpdateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,YAAY,EAAE,QAAQ,EAAE,SAAS;AACnC,CAAC,EAAE,OAAO;AACH,IAAM,iCAA6E,EAAE,OAAO;AAAA,EACjG,QAAQ,2BAA2B,SAAS;AAAA,EAC5C,MAAM,EAAE,MAAM,CAAE,iCAAgC,wCAAyC,CAAC;AAAA,EAC1F,OAAO;AACT,CAAC,EAAE,OAAO;AACV,IAAO,yCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { FeatureRequestUpdateInputSchema } from '../inputTypeSchemas/FeatureRequestUpdateInputSchema.js'\nimport { FeatureRequestUncheckedUpdateInputSchema } from '../inputTypeSchemas/FeatureRequestUncheckedUpdateInputSchema.js'\nimport { FeatureRequestWhereUniqueInputSchema } from '../inputTypeSchemas/FeatureRequestWhereUniqueInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const FeatureRequestSelectSchema: z.ZodType<Prisma.FeatureRequestSelect> = z.object({\n  id: z.boolean().optional(),\n  email: z.boolean().optional(),\n  message: z.boolean().optional(),\n  category: z.boolean().optional(),\n  userBase: z.boolean().optional(),\n  receivedOn: z.boolean().optional(),\n}).strict()\nexport const FeatureRequestUpdateArgsSchema: z.ZodType<Prisma.FeatureRequestUpdateArgs> = z.object({\n  select: FeatureRequestSelectSchema.optional(),\n  data: z.union([ FeatureRequestUpdateInputSchema,FeatureRequestUncheckedUpdateInputSchema ]),\n  where: FeatureRequestWhereUniqueInputSchema,\n}).strict() ;\nexport default FeatureRequestUpdateArgsSchema;"]}