{"version":3,"sources":["../src/database/outputTypeSchemas/SnippetUpsertArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAUX,IAAM,sBAAuD,EAAE,OAAO;AAAA,EAC3E,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,aAAa,EAAE,QAAQ,EAAE,SAAS;AAAA,EAClC,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AAEH,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,QAAQ,oBAAoB,SAAS;AAAA,EACrC,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,0BAAyB,iCAAkC,CAAC;AAAA,EAC9E,QAAQ,EAAE,MAAM,CAAE,0BAAyB,iCAAkC,CAAC;AAChF,CAAC,EAAE,OAAO;AAEV,IAAO,kCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { SnippetWhereUniqueInputSchema } from '../inputTypeSchemas/SnippetWhereUniqueInputSchema'\nimport { SnippetCreateInputSchema } from '../inputTypeSchemas/SnippetCreateInputSchema'\nimport { SnippetUncheckedCreateInputSchema } from '../inputTypeSchemas/SnippetUncheckedCreateInputSchema'\nimport { SnippetUpdateInputSchema } from '../inputTypeSchemas/SnippetUpdateInputSchema'\nimport { SnippetUncheckedUpdateInputSchema } from '../inputTypeSchemas/SnippetUncheckedUpdateInputSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const SnippetSelectSchema: z.ZodType<Prisma.SnippetSelect> = z.object({\n  id: z.boolean().optional(),\n  content: z.boolean().optional(),\n  description: z.boolean().optional(),\n  keywords: z.boolean().optional(),\n  language: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n}).strict()\n\nexport const SnippetUpsertArgsSchema: z.ZodType<Prisma.SnippetUpsertArgs> = z.object({\n  select: SnippetSelectSchema.optional(),\n  where: SnippetWhereUniqueInputSchema,\n  create: z.union([ SnippetCreateInputSchema,SnippetUncheckedCreateInputSchema ]),\n  update: z.union([ SnippetUpdateInputSchema,SnippetUncheckedUpdateInputSchema ]),\n}).strict() ;\n\nexport default SnippetUpsertArgsSchema;\n"]}