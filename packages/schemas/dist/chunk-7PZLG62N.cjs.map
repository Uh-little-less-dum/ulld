{"version":3,"sources":["../src/database/outputTypeSchemas/ServingCreateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,SAAS,SAAS;AASX,IAAM,sBAAuD,EAAE,OAAO;AAAA,EAC3E,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,eAAe,EAAE,QAAQ,EAAE,SAAS;AAAA,EACpC,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,aAAa,EAAE,QAAQ,EAAE,SAAS;AAAA,EAClC,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAC,CAAC,EAAE,SAAS;AAC5E,CAAC,EAAE,OAAO;AAEH,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,QAAQ,oBAAoB,SAAS;AAAA,EACrC,SAAS,qBAAqB,SAAS;AAAA,EACvC,MAAM,EAAE,MAAM,CAAE,0BAAyB,iCAAkC,CAAC;AAC9E,CAAC,EAAE,OAAO;AAEV,IAAO,kCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { ServingIncludeSchema } from '../inputTypeSchemas/ServingIncludeSchema'\nimport { ServingCreateInputSchema } from '../inputTypeSchemas/ServingCreateInputSchema'\nimport { ServingUncheckedCreateInputSchema } from '../inputTypeSchemas/ServingUncheckedCreateInputSchema'\nimport { DietaryItemArgsSchema } from \"../outputTypeSchemas/DietaryItemArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const ServingSelectSchema: z.ZodType<Prisma.ServingSelect> = z.object({\n  id: z.boolean().optional(),\n  dietaryItemId: z.boolean().optional(),\n  quant_oz: z.boolean().optional(),\n  quant_guess: z.boolean().optional(),\n  item: z.union([z.boolean(),z.lazy(() => DietaryItemArgsSchema)]).optional(),\n}).strict()\n\nexport const ServingCreateArgsSchema: z.ZodType<Prisma.ServingCreateArgs> = z.object({\n  select: ServingSelectSchema.optional(),\n  include: ServingIncludeSchema.optional(),\n  data: z.union([ ServingCreateInputSchema,ServingUncheckedCreateInputSchema ]),\n}).strict() ;\n\nexport default ServingCreateArgsSchema;\n"]}