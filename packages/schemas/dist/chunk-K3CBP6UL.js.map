{"version":3,"sources":["../src/database/outputTypeSchemas/ServingUpsertArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { ServingIncludeSchema } from '../inputTypeSchemas/ServingIncludeSchema.js'\nimport { ServingWhereUniqueInputSchema } from '../inputTypeSchemas/ServingWhereUniqueInputSchema.js'\nimport { ServingCreateInputSchema } from '../inputTypeSchemas/ServingCreateInputSchema.js'\nimport { ServingUncheckedCreateInputSchema } from '../inputTypeSchemas/ServingUncheckedCreateInputSchema.js'\nimport { ServingUpdateInputSchema } from '../inputTypeSchemas/ServingUpdateInputSchema.js'\nimport { ServingUncheckedUpdateInputSchema } from '../inputTypeSchemas/ServingUncheckedUpdateInputSchema.js'\nimport { DietaryItemArgsSchema } from \"../outputTypeSchemas/DietaryItemArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const ServingSelectSchema: z.ZodType<Prisma.ServingSelect> = z.object({\n  id: z.boolean().optional(),\n  dietaryItemId: z.boolean().optional(),\n  quant_oz: z.boolean().optional(),\n  quant_guess: z.boolean().optional(),\n  item: z.union([z.boolean(),z.lazy(() => DietaryItemArgsSchema)]).optional(),\n}).strict()\nexport const ServingUpsertArgsSchema: z.ZodType<Prisma.ServingUpsertArgs> = z.object({\n  select: ServingSelectSchema.optional(),\n  include: ServingIncludeSchema.optional(),\n  where: ServingWhereUniqueInputSchema,\n  create: z.union([ ServingCreateInputSchema,ServingUncheckedCreateInputSchema ]),\n  update: z.union([ ServingUpdateInputSchema,ServingUncheckedUpdateInputSchema ]),\n}).strict() ;\nexport default ServingUpsertArgsSchema;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAWX,IAAM,sBAAuD,EAAE,OAAO;AAAA,EAC3E,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,eAAe,EAAE,QAAQ,EAAE,SAAS;AAAA,EACpC,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,aAAa,EAAE,QAAQ,EAAE,SAAS;AAAA,EAClC,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAC,CAAC,EAAE,SAAS;AAC5E,CAAC,EAAE,OAAO;AACH,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,QAAQ,oBAAoB,SAAS;AAAA,EACrC,SAAS,qBAAqB,SAAS;AAAA,EACvC,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,0BAAyB,iCAAkC,CAAC;AAAA,EAC9E,QAAQ,EAAE,MAAM,CAAE,0BAAyB,iCAAkC,CAAC;AAChF,CAAC,EAAE,OAAO;AACV,IAAO,kCAAQ;","names":[]}