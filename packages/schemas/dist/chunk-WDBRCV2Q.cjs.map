{"version":3,"sources":["../src/database/outputTypeSchemas/DietGroupByArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,wBAA2D,EAAE,OAAO;AAAA,EAC/E,OAAO,qBAAqB,SAAS;AAAA,EACrC,SAAS,EAAE,MAAM,CAAE,sCAAsC,MAAM,GAAE,qCAAsC,CAAC,EAAE,SAAS;AAAA,EACnH,IAAI,0BAA0B,MAAM;AAAA,EACpC,QAAQ,yCAAyC,SAAS;AAAA,EAC1D,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AAEV,IAAO,gCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { DietWhereInputSchema } from '../inputTypeSchemas/DietWhereInputSchema'\nimport { DietOrderByWithAggregationInputSchema } from '../inputTypeSchemas/DietOrderByWithAggregationInputSchema'\nimport { DietScalarFieldEnumSchema } from '../inputTypeSchemas/DietScalarFieldEnumSchema'\nimport { DietScalarWhereWithAggregatesInputSchema } from '../inputTypeSchemas/DietScalarWhereWithAggregatesInputSchema'\n\nexport const DietGroupByArgsSchema: z.ZodType<Prisma.DietGroupByArgs> = z.object({\n  where: DietWhereInputSchema.optional(),\n  orderBy: z.union([ DietOrderByWithAggregationInputSchema.array(),DietOrderByWithAggregationInputSchema ]).optional(),\n  by: DietScalarFieldEnumSchema.array(),\n  having: DietScalarWhereWithAggregatesInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\n\nexport default DietGroupByArgsSchema;\n"]}