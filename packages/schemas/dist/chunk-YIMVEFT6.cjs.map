{"version":3,"sources":["../src/database/outputTypeSchemas/DJTFindUniqueOrThrowArgsSchema.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;AAMX,IAAM,kBAA+C,EAAE,OAAO;AAAA,EACnE,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,MAAM,EAAE,QAAQ,EAAE,SAAS;AAC7B,CAAC,EAAE,OAAO;AAEH,IAAM,iCAA6E,EAAE,OAAO;AAAA,EACjG,QAAQ,gBAAgB,SAAS;AAAA,EACjC,OAAO;AACT,CAAC,EAAE,OAAO;AAEV,IAAO,yCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { DJTWhereUniqueInputSchema } from '../inputTypeSchemas/DJTWhereUniqueInputSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const DJTSelectSchema: z.ZodType<Prisma.DJTSelect> = z.object({\n  id: z.boolean().optional(),\n  type: z.boolean().optional(),\n  data: z.boolean().optional(),\n}).strict()\n\nexport const DJTFindUniqueOrThrowArgsSchema: z.ZodType<Prisma.DJTFindUniqueOrThrowArgs> = z.object({\n  select: DJTSelectSchema.optional(),\n  where: DJTWhereUniqueInputSchema,\n}).strict() ;\n\nexport default DJTFindUniqueOrThrowArgsSchema;\n"]}