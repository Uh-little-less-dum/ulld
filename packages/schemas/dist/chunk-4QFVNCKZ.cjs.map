{"version":3,"sources":["../src/database/inputTypeSchemas/FeatureRequestUncheckedCreateInputSchema.ts"],"names":[],"mappings":";;;;;;;;AAEA,SAAS,SAAS;AAIX,IAAM,2CAAiG,EAAE,OAAO;AAAA,EACrH,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC9B,OAAO,EAAE,OAAO;AAAA,EAChB,SAAS,EAAE,OAAO;AAAA,EAClB,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,uCAAuC,GAAE,EAAE,OAAO,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACzG,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,uCAAuC,GAAE,EAAE,OAAO,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACzG,YAAY,EAAE,OAAO,KAAK,EAAE,SAAS;AACvC,CAAC,EAAE,OAAO;AAEV,IAAO,mDAAQ","sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { FeatureRequestCreatecategoryInputSchema } from './FeatureRequestCreatecategoryInputSchema';\nimport { FeatureRequestCreateuserBaseInputSchema } from './FeatureRequestCreateuserBaseInputSchema';\n\nexport const FeatureRequestUncheckedCreateInputSchema: z.ZodType<Prisma.FeatureRequestUncheckedCreateInput> = z.object({\n  id: z.number().int().optional(),\n  email: z.string(),\n  message: z.string(),\n  category: z.union([ z.lazy(() => FeatureRequestCreatecategoryInputSchema),z.string().array() ]).optional(),\n  userBase: z.union([ z.lazy(() => FeatureRequestCreateuserBaseInputSchema),z.string().array() ]).optional(),\n  receivedOn: z.coerce.date().optional()\n}).strict();\n\nexport default FeatureRequestUncheckedCreateInputSchema;\n"]}