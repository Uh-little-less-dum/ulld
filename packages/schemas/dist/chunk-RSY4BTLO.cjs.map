{"version":3,"sources":["../src/database/inputTypeSchemas/CitationsGroupSelectSchema.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,SAAS;AAIX,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,aAAa,EAAE,QAAQ,EAAE,SAAS;AAAA,EAClC,SAAS,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,0BAA0B,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uCAAuC,CAAC,CAAC,EAAE,SAAS;AAChG,CAAC,EAAE,OAAO;AACV,IAAO,qCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { BibEntryFindManyArgsSchema } from \"../outputTypeSchemas/BibEntryFindManyArgsSchema\"\nimport { CitationsGroupCountOutputTypeArgsSchema } from \"../outputTypeSchemas/CitationsGroupCountOutputTypeArgsSchema\"\nexport const CitationsGroupSelectSchema: z.ZodType<Prisma.CitationsGroupSelect> = z.object({\n  name: z.boolean().optional(),\n  description: z.boolean().optional(),\n  entries: z.union([z.boolean(),z.lazy(() => BibEntryFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => CitationsGroupCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport default CitationsGroupSelectSchema;"]}