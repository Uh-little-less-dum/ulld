{"version":3,"sources":["../src/database/inputTypeSchemas/HealthReportScalarWhereWithAggregatesInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { IntWithAggregatesFilterSchema } from './IntWithAggregatesFilterSchema.js';\nimport { StringNullableWithAggregatesFilterSchema } from './StringNullableWithAggregatesFilterSchema.js';\nimport { FloatWithAggregatesFilterSchema } from './FloatWithAggregatesFilterSchema.js';\nimport { FloatNullableWithAggregatesFilterSchema } from './FloatNullableWithAggregatesFilterSchema.js';\nimport { IntNullableWithAggregatesFilterSchema } from './IntNullableWithAggregatesFilterSchema.js';\nimport { DateTimeWithAggregatesFilterSchema } from './DateTimeWithAggregatesFilterSchema.js';\nexport const HealthReportScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.HealthReportScalarWhereWithAggregatesInput> = z.object({\n  AND: z.union([ z.lazy(() => HealthReportScalarWhereWithAggregatesInputSchema),z.lazy(() => HealthReportScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  OR: z.lazy(() => HealthReportScalarWhereWithAggregatesInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => HealthReportScalarWhereWithAggregatesInputSchema),z.lazy(() => HealthReportScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  id: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),\n  title: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  summary: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  overall: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  skin: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  bloat: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  weight_feeling: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  fullness: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  weight: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  cardiacCapacity: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  jawLine: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  joints: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  flexibility: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  anxiety: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  anxiety_desc: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  mood_desc: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  mood: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  sexDrive: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  intruisiveThoughts: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  caffeineIntake: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  glutenIntake: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  sugarIntake: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  artificialSweetenerIntake: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  artificalDyes: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  sleepQuality: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  hydration: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  twitching: z.union([ z.lazy(() => FloatWithAggregatesFilterSchema),z.number() ]).optional(),\n  sleepHours: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  calorie_est: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  times_meals_more_than_gap_apart: z.union([ z.lazy(() => IntNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  estHoursInExcessFast: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  dietId: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  created: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),\n}).strict();\nexport default HealthReportScalarWhereWithAggregatesInputSchema;"],"mappings":"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","names":[]}