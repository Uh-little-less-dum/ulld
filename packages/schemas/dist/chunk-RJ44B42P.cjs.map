{"version":3,"sources":["../src/database/outputTypeSchemas/WhiteboardCreateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,SAAS;AAMX,IAAM,yBAA6D,EAAE,OAAO;AAAA,EACjF,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAC7B,CAAC,EAAE,OAAO;AACH,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,QAAQ,uBAAuB,SAAS;AAAA,EACxC,MAAM,EAAE,MAAM,CAAE,6BAA4B,oCAAqC,CAAC;AACpF,CAAC,EAAE,OAAO;AACV,IAAO,qCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { WhiteboardCreateInputSchema } from '../inputTypeSchemas/WhiteboardCreateInputSchema.js'\nimport { WhiteboardUncheckedCreateInputSchema } from '../inputTypeSchemas/WhiteboardUncheckedCreateInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const WhiteboardSelectSchema: z.ZodType<Prisma.WhiteboardSelect> = z.object({\n  id: z.boolean().optional(),\n  data: z.boolean().optional(),\n}).strict()\nexport const WhiteboardCreateArgsSchema: z.ZodType<Prisma.WhiteboardCreateArgs> = z.object({\n  select: WhiteboardSelectSchema.optional(),\n  data: z.union([ WhiteboardCreateInputSchema,WhiteboardUncheckedCreateInputSchema ]),\n}).strict() ;\nexport default WhiteboardCreateArgsSchema;"]}