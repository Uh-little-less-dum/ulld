{"version":3,"sources":["../src/database/inputTypeSchemas/BibEntryUpdateManyWithoutBibNestedInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,SAAS;AAWX,IAAM,gDAA2G,EAAE,OAAO;AAAA,EAC/H,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,mCAAmC,GAAE,EAAE,KAAK,MAAM,mCAAmC,EAAE,MAAM,GAAE,EAAE,KAAK,MAAM,4CAA4C,GAAE,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACxQ,iBAAiB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,4CAA4C,GAAE,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACrK,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kDAAkD,GAAE,EAAE,KAAK,MAAM,kDAAkD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACxK,YAAY,EAAE,KAAK,MAAM,wCAAwC,EAAE,SAAS;AAAA,EAC5E,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7H,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACpI,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAChI,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjI,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kDAAkD,GAAE,EAAE,KAAK,MAAM,kDAAkD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACxK,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gDAAgD,GAAE,EAAE,KAAK,MAAM,gDAAgD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACxK,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AACtI,CAAC,EAAE,OAAO;AAEV,IAAO,wDAAQ","sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { BibEntryCreateWithoutBibInputSchema } from './BibEntryCreateWithoutBibInputSchema';\nimport { BibEntryUncheckedCreateWithoutBibInputSchema } from './BibEntryUncheckedCreateWithoutBibInputSchema';\nimport { BibEntryCreateOrConnectWithoutBibInputSchema } from './BibEntryCreateOrConnectWithoutBibInputSchema';\nimport { BibEntryUpsertWithWhereUniqueWithoutBibInputSchema } from './BibEntryUpsertWithWhereUniqueWithoutBibInputSchema';\nimport { BibEntryCreateManyBibInputEnvelopeSchema } from './BibEntryCreateManyBibInputEnvelopeSchema';\nimport { BibEntryWhereUniqueInputSchema } from './BibEntryWhereUniqueInputSchema';\nimport { BibEntryUpdateWithWhereUniqueWithoutBibInputSchema } from './BibEntryUpdateWithWhereUniqueWithoutBibInputSchema';\nimport { BibEntryUpdateManyWithWhereWithoutBibInputSchema } from './BibEntryUpdateManyWithWhereWithoutBibInputSchema';\nimport { BibEntryScalarWhereInputSchema } from './BibEntryScalarWhereInputSchema';\n\nexport const BibEntryUpdateManyWithoutBibNestedInputSchema: z.ZodType<Prisma.BibEntryUpdateManyWithoutBibNestedInput> = z.object({\n  create: z.union([ z.lazy(() => BibEntryCreateWithoutBibInputSchema),z.lazy(() => BibEntryCreateWithoutBibInputSchema).array(),z.lazy(() => BibEntryUncheckedCreateWithoutBibInputSchema),z.lazy(() => BibEntryUncheckedCreateWithoutBibInputSchema).array() ]).optional(),\n  connectOrCreate: z.union([ z.lazy(() => BibEntryCreateOrConnectWithoutBibInputSchema),z.lazy(() => BibEntryCreateOrConnectWithoutBibInputSchema).array() ]).optional(),\n  upsert: z.union([ z.lazy(() => BibEntryUpsertWithWhereUniqueWithoutBibInputSchema),z.lazy(() => BibEntryUpsertWithWhereUniqueWithoutBibInputSchema).array() ]).optional(),\n  createMany: z.lazy(() => BibEntryCreateManyBibInputEnvelopeSchema).optional(),\n  set: z.union([ z.lazy(() => BibEntryWhereUniqueInputSchema),z.lazy(() => BibEntryWhereUniqueInputSchema).array() ]).optional(),\n  disconnect: z.union([ z.lazy(() => BibEntryWhereUniqueInputSchema),z.lazy(() => BibEntryWhereUniqueInputSchema).array() ]).optional(),\n  delete: z.union([ z.lazy(() => BibEntryWhereUniqueInputSchema),z.lazy(() => BibEntryWhereUniqueInputSchema).array() ]).optional(),\n  connect: z.union([ z.lazy(() => BibEntryWhereUniqueInputSchema),z.lazy(() => BibEntryWhereUniqueInputSchema).array() ]).optional(),\n  update: z.union([ z.lazy(() => BibEntryUpdateWithWhereUniqueWithoutBibInputSchema),z.lazy(() => BibEntryUpdateWithWhereUniqueWithoutBibInputSchema).array() ]).optional(),\n  updateMany: z.union([ z.lazy(() => BibEntryUpdateManyWithWhereWithoutBibInputSchema),z.lazy(() => BibEntryUpdateManyWithWhereWithoutBibInputSchema).array() ]).optional(),\n  deleteMany: z.union([ z.lazy(() => BibEntryScalarWhereInputSchema),z.lazy(() => BibEntryScalarWhereInputSchema).array() ]).optional(),\n}).strict();\n\nexport default BibEntryUpdateManyWithoutBibNestedInputSchema;\n"]}