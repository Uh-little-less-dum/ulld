{"version":3,"sources":["../src/database/inputTypeSchemas/EnumautoSettingFilterSchema.ts"],"names":[],"mappings":";;;;;;;;AAEA,SAAS,SAAS;AAIX,IAAM,8BAAuE,EAAE,OAAO;AAAA,EAC3F,QAAQ,EAAE,KAAK,MAAM,iBAAiB,EAAE,SAAS;AAAA,EACjD,IAAI,EAAE,KAAK,MAAM,iBAAiB,EAAE,MAAM,EAAE,SAAS;AAAA,EACrD,OAAO,EAAE,KAAK,MAAM,iBAAiB,EAAE,MAAM,EAAE,SAAS;AAAA,EACxD,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,iBAAiB,GAAE,EAAE,KAAK,MAAM,iCAAiC,CAAE,CAAC,EAAE,SAAS;AAC7G,CAAC,EAAE,OAAO;AAEV,IAAO,sCAAQ","sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { autoSettingSchema } from './autoSettingSchema';\nimport { NestedEnumautoSettingFilterSchema } from './NestedEnumautoSettingFilterSchema';\n\nexport const EnumautoSettingFilterSchema: z.ZodType<Prisma.EnumautoSettingFilter> = z.object({\n  equals: z.lazy(() => autoSettingSchema).optional(),\n  in: z.lazy(() => autoSettingSchema).array().optional(),\n  notIn: z.lazy(() => autoSettingSchema).array().optional(),\n  not: z.union([ z.lazy(() => autoSettingSchema),z.lazy(() => NestedEnumautoSettingFilterSchema) ]).optional(),\n}).strict();\n\nexport default EnumautoSettingFilterSchema;\n"]}