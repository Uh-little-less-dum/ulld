{"version":3,"sources":["../src/database/inputTypeSchemas/QAPairScalarWhereWithAggregatesInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { StringWithAggregatesFilterSchema } from './StringWithAggregatesFilterSchema';\nimport { StringNullableWithAggregatesFilterSchema } from './StringNullableWithAggregatesFilterSchema';\nimport { IntWithAggregatesFilterSchema } from './IntWithAggregatesFilterSchema';\n\nexport const QAPairScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.QAPairScalarWhereWithAggregatesInput> = z.object({\n  AND: z.union([ z.lazy(() => QAPairScalarWhereWithAggregatesInputSchema),z.lazy(() => QAPairScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  OR: z.lazy(() => QAPairScalarWhereWithAggregatesInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => QAPairScalarWhereWithAggregatesInputSchema),z.lazy(() => QAPairScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  id: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  question: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  answer: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  description: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  secondaryLabel: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  correctCount: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),\n  inCorrectCount: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),\n}).strict();\n\nexport default QAPairScalarWhereWithAggregatesInputSchema;\n"],"mappings":";;;;;;;;;;;AAEA,SAAS,SAAS;AAKX,IAAM,6CAAqG,EAAE,OAAO;AAAA,EACzH,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,0CAA0C,GAAE,EAAE,KAAK,MAAM,0CAA0C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACrJ,IAAI,EAAE,KAAK,MAAM,0CAA0C,EAAE,MAAM,EAAE,SAAS;AAAA,EAC9E,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,0CAA0C,GAAE,EAAE,KAAK,MAAM,0CAA0C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACrJ,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACpF,UAAU,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EAC1F,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACxF,aAAa,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAChH,gBAAgB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EACnH,cAAc,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EAC3F,gBAAgB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAC/F,CAAC,EAAE,OAAO;AAEV,IAAO,qDAAQ;","names":[]}