{"version":3,"sources":["../src/database/outputTypeSchemas/DailyFocusUpsertArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { DailyFocusWhereUniqueInputSchema } from '../inputTypeSchemas/DailyFocusWhereUniqueInputSchema'\nimport { DailyFocusCreateInputSchema } from '../inputTypeSchemas/DailyFocusCreateInputSchema'\nimport { DailyFocusUncheckedCreateInputSchema } from '../inputTypeSchemas/DailyFocusUncheckedCreateInputSchema'\nimport { DailyFocusUpdateInputSchema } from '../inputTypeSchemas/DailyFocusUpdateInputSchema'\nimport { DailyFocusUncheckedUpdateInputSchema } from '../inputTypeSchemas/DailyFocusUncheckedUpdateInputSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const DailyFocusSelectSchema: z.ZodType<Prisma.DailyFocusSelect> = z.object({\n  value: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n}).strict()\n\nexport const DailyFocusUpsertArgsSchema: z.ZodType<Prisma.DailyFocusUpsertArgs> = z.object({\n  select: DailyFocusSelectSchema.optional(),\n  where: DailyFocusWhereUniqueInputSchema,\n  create: z.union([ DailyFocusCreateInputSchema,DailyFocusUncheckedCreateInputSchema ]),\n  update: z.union([ DailyFocusUpdateInputSchema,DailyFocusUncheckedUpdateInputSchema ]),\n}).strict() ;\n\nexport default DailyFocusUpsertArgsSchema;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAUX,IAAM,yBAA6D,EAAE,OAAO;AAAA,EACjF,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AAEH,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,QAAQ,uBAAuB,SAAS;AAAA,EACxC,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,6BAA4B,oCAAqC,CAAC;AAAA,EACpF,QAAQ,EAAE,MAAM,CAAE,6BAA4B,oCAAqC,CAAC;AACtF,CAAC,EAAE,OAAO;AAEV,IAAO,qCAAQ;","names":[]}