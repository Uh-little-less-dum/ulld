{"version":3,"sources":["../src/database/inputTypeSchemas/DietScalarWhereWithAggregatesInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,SAAS;AAUX,IAAM,2CAAiG,EAAE,OAAO;AAAA,EACrH,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,KAAK,MAAM,wCAAwC,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjJ,IAAI,EAAE,KAAK,MAAM,wCAAwC,EAAE,MAAM,EAAE,SAAS;AAAA,EAC5E,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,KAAK,MAAM,wCAAwC,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjJ,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACtF,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAC5G,mBAAmB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,QAAQ,CAAE,CAAC,EAAE,SAAS;AAAA,EAClG,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6CAA6C,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC1H,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,QAAQ,CAAE,CAAC,EAAE,SAAS;AAAA,EACtF,aAAa,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,QAAQ,CAAE,CAAC,EAAE,SAAS;AAAA,EAC5F,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,QAAQ,CAAE,CAAC,EAAE,SAAS;AAAA,EAC3F,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6CAA6C,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAE,CAAC,EAAE,SAAS;AAAA,EAC/H,gBAAgB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6CAA6C,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAE,CAAC,EAAE,SAAS;AAAA,EACtI,gBAAgB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6CAA6C,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAE,CAAC,EAAE,SAAS;AAAA,EACtI,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,uCAAuC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EACxG,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,uCAAuC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EACvG,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,uCAAuC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EACvG,OAAO,EAAE,KAAK,MAAM,wCAAwC,EAAE,SAAS;AAAA,EACvE,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kCAAkC,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AAAA,EAChG,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kCAAkC,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AACrG,CAAC,EAAE,OAAO;AAEV,IAAO,mDAAQ","sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { StringWithAggregatesFilterSchema } from './StringWithAggregatesFilterSchema';\nimport { StringNullableWithAggregatesFilterSchema } from './StringNullableWithAggregatesFilterSchema';\nimport { BoolWithAggregatesFilterSchema } from './BoolWithAggregatesFilterSchema';\nimport { EnumTERTIARY_TOGGLEWithAggregatesFilterSchema } from './EnumTERTIARY_TOGGLEWithAggregatesFilterSchema';\nimport { TERTIARY_TOGGLESchema } from './TERTIARY_TOGGLESchema';\nimport { FloatNullableWithAggregatesFilterSchema } from './FloatNullableWithAggregatesFilterSchema';\nimport { EnumDIETARY_GOALNullableListFilterSchema } from './EnumDIETARY_GOALNullableListFilterSchema';\nimport { DateTimeWithAggregatesFilterSchema } from './DateTimeWithAggregatesFilterSchema';\n\nexport const DietScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.DietScalarWhereWithAggregatesInput> = z.object({\n  AND: z.union([ z.lazy(() => DietScalarWhereWithAggregatesInputSchema),z.lazy(() => DietScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  OR: z.lazy(() => DietScalarWhereWithAggregatesInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => DietScalarWhereWithAggregatesInputSchema),z.lazy(() => DietScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  summary: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  activelyFollowing: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),\n  gf: z.union([ z.lazy(() => EnumTERTIARY_TOGGLEWithAggregatesFilterSchema),z.lazy(() => TERTIARY_TOGGLESchema) ]).optional(),\n  vegan: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),\n  pescatarian: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),\n  vegetarian: z.union([ z.lazy(() => BoolWithAggregatesFilterSchema),z.boolean() ]).optional(),\n  fasting: z.union([ z.lazy(() => EnumTERTIARY_TOGGLEWithAggregatesFilterSchema),z.lazy(() => TERTIARY_TOGGLESchema) ]).optional(),\n  cardioTraining: z.union([ z.lazy(() => EnumTERTIARY_TOGGLEWithAggregatesFilterSchema),z.lazy(() => TERTIARY_TOGGLESchema) ]).optional(),\n  weightTraining: z.union([ z.lazy(() => EnumTERTIARY_TOGGLEWithAggregatesFilterSchema),z.lazy(() => TERTIARY_TOGGLESchema) ]).optional(),\n  carb: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  pro: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  fat: z.union([ z.lazy(() => FloatNullableWithAggregatesFilterSchema),z.number() ]).optional().nullable(),\n  goals: z.lazy(() => EnumDIETARY_GOALNullableListFilterSchema).optional(),\n  created: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),\n  lastUpdate: z.union([ z.lazy(() => DateTimeWithAggregatesFilterSchema),z.coerce.date() ]).optional(),\n}).strict();\n\nexport default DietScalarWhereWithAggregatesInputSchema;\n"]}