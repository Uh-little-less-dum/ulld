{"version":3,"sources":["../src/database/inputTypeSchemas/BusinessContactMinOrderByAggregateInputSchema.ts"],"names":[],"mappings":";;;;;AAEA,SAAS,SAAS;AAGX,IAAM,gDAA2G,EAAE,OAAO;AAAA,EAC/H,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,aAAa,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACpD,mBAAmB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC1D,OAAO,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC9C,OAAO,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC9C,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAChD,SAAS,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAClD,CAAC,EAAE,OAAO;AAEV,IAAO,wDAAQ","sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema';\n\nexport const BusinessContactMinOrderByAggregateInputSchema: z.ZodType<Prisma.BusinessContactMinOrderByAggregateInput> = z.object({\n  id: z.lazy(() => SortOrderSchema).optional(),\n  companyName: z.lazy(() => SortOrderSchema).optional(),\n  contactName: z.lazy(() => SortOrderSchema).optional(),\n  contactPreference: z.lazy(() => SortOrderSchema).optional(),\n  email: z.lazy(() => SortOrderSchema).optional(),\n  phone: z.lazy(() => SortOrderSchema).optional(),\n  message: z.lazy(() => SortOrderSchema).optional(),\n  purpose: z.lazy(() => SortOrderSchema).optional()\n}).strict();\n\nexport default BusinessContactMinOrderByAggregateInputSchema;\n"]}