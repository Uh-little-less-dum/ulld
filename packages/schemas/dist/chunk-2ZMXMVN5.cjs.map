{"version":3,"sources":["../src/database/outputTypeSchemas/FeatureRequestFindFirstArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAQX,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,YAAY,EAAE,QAAQ,EAAE,SAAS;AACnC,CAAC,EAAE,OAAO;AACH,IAAM,oCAAmF,EAAE,OAAO;AAAA,EACvG,QAAQ,2BAA2B,SAAS;AAAA,EAC5C,OAAO,+BAA+B,SAAS;AAAA,EAC/C,SAAS,EAAE,MAAM,CAAE,6CAA6C,MAAM,GAAE,4CAA6C,CAAC,EAAE,SAAS;AAAA,EACjI,QAAQ,qCAAqC,SAAS;AAAA,EACtD,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,UAAU,EAAE,MAAM,CAAE,qCAAoC,oCAAoC,MAAM,CAAE,CAAC,EAAE,SAAS;AAClH,CAAC,EAAE,OAAO;AACV,IAAO,4CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { FeatureRequestWhereInputSchema } from '../inputTypeSchemas/FeatureRequestWhereInputSchema.js'\nimport { FeatureRequestOrderByWithRelationInputSchema } from '../inputTypeSchemas/FeatureRequestOrderByWithRelationInputSchema.js'\nimport { FeatureRequestWhereUniqueInputSchema } from '../inputTypeSchemas/FeatureRequestWhereUniqueInputSchema.js'\nimport { FeatureRequestScalarFieldEnumSchema } from '../inputTypeSchemas/FeatureRequestScalarFieldEnumSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const FeatureRequestSelectSchema: z.ZodType<Prisma.FeatureRequestSelect> = z.object({\n  id: z.boolean().optional(),\n  email: z.boolean().optional(),\n  message: z.boolean().optional(),\n  category: z.boolean().optional(),\n  userBase: z.boolean().optional(),\n  receivedOn: z.boolean().optional(),\n}).strict()\nexport const FeatureRequestFindFirstArgsSchema: z.ZodType<Prisma.FeatureRequestFindFirstArgs> = z.object({\n  select: FeatureRequestSelectSchema.optional(),\n  where: FeatureRequestWhereInputSchema.optional(),\n  orderBy: z.union([ FeatureRequestOrderByWithRelationInputSchema.array(),FeatureRequestOrderByWithRelationInputSchema ]).optional(),\n  cursor: FeatureRequestWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n  distinct: z.union([ FeatureRequestScalarFieldEnumSchema,FeatureRequestScalarFieldEnumSchema.array() ]).optional(),\n}).strict() ;\nexport default FeatureRequestFindFirstArgsSchema;"]}