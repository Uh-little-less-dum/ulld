{"version":3,"sources":["../src/database/outputTypeSchemas/SettingsAppendixDeleteArgsSchema.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;AAMX,IAAM,+BAAyE,EAAE,OAAO;AAAA,EAC7F,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AAEH,IAAM,mCAAiF,EAAE,OAAO;AAAA,EACrG,QAAQ,6BAA6B,SAAS;AAAA,EAC9C,OAAO;AACT,CAAC,EAAE,OAAO;AAEV,IAAO,2CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { SettingsAppendixWhereUniqueInputSchema } from '../inputTypeSchemas/SettingsAppendixWhereUniqueInputSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const SettingsAppendixSelectSchema: z.ZodType<Prisma.SettingsAppendixSelect> = z.object({\n  id: z.boolean().optional(),\n  data: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n  updatedAt: z.boolean().optional(),\n}).strict()\n\nexport const SettingsAppendixDeleteArgsSchema: z.ZodType<Prisma.SettingsAppendixDeleteArgs> = z.object({\n  select: SettingsAppendixSelectSchema.optional(),\n  where: SettingsAppendixWhereUniqueInputSchema,\n}).strict() ;\n\nexport default SettingsAppendixDeleteArgsSchema;\n"]}