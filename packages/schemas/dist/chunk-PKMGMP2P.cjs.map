{"version":3,"sources":["../src/database/outputTypeSchemas/DailyFocusUpdateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,yBAA6D,EAAE,OAAO;AAAA,EACjF,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AACH,IAAM,6BAAqE,EAAE,OAAO;AAAA,EACzF,QAAQ,uBAAuB,SAAS;AAAA,EACxC,MAAM,EAAE,MAAM,CAAE,6BAA4B,oCAAqC,CAAC;AAAA,EAClF,OAAO;AACT,CAAC,EAAE,OAAO;AACV,IAAO,qCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { DailyFocusUpdateInputSchema } from '../inputTypeSchemas/DailyFocusUpdateInputSchema.js'\nimport { DailyFocusUncheckedUpdateInputSchema } from '../inputTypeSchemas/DailyFocusUncheckedUpdateInputSchema.js'\nimport { DailyFocusWhereUniqueInputSchema } from '../inputTypeSchemas/DailyFocusWhereUniqueInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const DailyFocusSelectSchema: z.ZodType<Prisma.DailyFocusSelect> = z.object({\n  value: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n}).strict()\nexport const DailyFocusUpdateArgsSchema: z.ZodType<Prisma.DailyFocusUpdateArgs> = z.object({\n  select: DailyFocusSelectSchema.optional(),\n  data: z.union([ DailyFocusUpdateInputSchema,DailyFocusUncheckedUpdateInputSchema ]),\n  where: DailyFocusWhereUniqueInputSchema,\n}).strict() ;\nexport default DailyFocusUpdateArgsSchema;"]}