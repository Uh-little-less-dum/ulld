{"version":3,"sources":["../src/database/outputTypeSchemas/SettingsAppendixUpdateArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { SettingsAppendixUpdateInputSchema } from '../inputTypeSchemas/SettingsAppendixUpdateInputSchema.js'\nimport { SettingsAppendixUncheckedUpdateInputSchema } from '../inputTypeSchemas/SettingsAppendixUncheckedUpdateInputSchema.js'\nimport { SettingsAppendixWhereUniqueInputSchema } from '../inputTypeSchemas/SettingsAppendixWhereUniqueInputSchema.js'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const SettingsAppendixSelectSchema: z.ZodType<Prisma.SettingsAppendixSelect> = z.object({\n  id: z.boolean().optional(),\n  data: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n  updatedAt: z.boolean().optional(),\n}).strict()\nexport const SettingsAppendixUpdateArgsSchema: z.ZodType<Prisma.SettingsAppendixUpdateArgs> = z.object({\n  select: SettingsAppendixSelectSchema.optional(),\n  data: z.union([ SettingsAppendixUpdateInputSchema,SettingsAppendixUncheckedUpdateInputSchema ]),\n  where: SettingsAppendixWhereUniqueInputSchema,\n}).strict() ;\nexport default SettingsAppendixUpdateArgsSchema;"],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,+BAAyE,EAAE,OAAO;AAAA,EAC7F,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AACH,IAAM,mCAAiF,EAAE,OAAO;AAAA,EACrG,QAAQ,6BAA6B,SAAS;AAAA,EAC9C,MAAM,EAAE,MAAM,CAAE,mCAAkC,0CAA2C,CAAC;AAAA,EAC9F,OAAO;AACT,CAAC,EAAE,OAAO;AACV,IAAO,2CAAQ;","names":[]}