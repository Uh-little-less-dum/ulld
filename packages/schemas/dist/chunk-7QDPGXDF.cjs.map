{"version":3,"sources":["../src/database/outputTypeSchemas/DietaryItemUpdateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAWX,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,MAAM,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC3B,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,iBAAiB,EAAE,QAAQ,EAAE,SAAS;AAAA,EACtC,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,aAAa,EAAE,QAAQ,EAAE,SAAS;AAAA,EAClC,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,sBAAsB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC3E,SAAS,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EACjF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,oCAAoC,CAAC,CAAC,EAAE,SAAS;AAC7F,CAAC,EAAE,OAAO;AACH,IAAM,8BAAuE,EAAE,OAAO;AAAA,EAC3F,QAAQ,wBAAwB,SAAS;AAAA,EACzC,SAAS,yBAAyB,SAAS;AAAA,EAC3C,MAAM,EAAE,MAAM,CAAE,8BAA6B,qCAAsC,CAAC;AAAA,EACpF,OAAO;AACT,CAAC,EAAE,OAAO;AACV,IAAO,sCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { DietaryItemIncludeSchema } from '../inputTypeSchemas/DietaryItemIncludeSchema.js'\nimport { DietaryItemUpdateInputSchema } from '../inputTypeSchemas/DietaryItemUpdateInputSchema.js'\nimport { DietaryItemUncheckedUpdateInputSchema } from '../inputTypeSchemas/DietaryItemUncheckedUpdateInputSchema.js'\nimport { DietaryItemWhereUniqueInputSchema } from '../inputTypeSchemas/DietaryItemWhereUniqueInputSchema.js'\nimport { DietFindManyArgsSchema } from \"../outputTypeSchemas/DietFindManyArgsSchema\"\nimport { ServingFindManyArgsSchema } from \"../outputTypeSchemas/ServingFindManyArgsSchema\"\nimport { DietaryItemCountOutputTypeArgsSchema } from \"../outputTypeSchemas/DietaryItemCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const DietaryItemSelectSchema: z.ZodType<Prisma.DietaryItemSelect> = z.object({\n  id: z.boolean().optional(),\n  name: z.boolean().optional(),\n  barcode: z.boolean().optional(),\n  gi: z.boolean().optional(),\n  calsPerOz: z.boolean().optional(),\n  glutenFree: z.boolean().optional(),\n  minimalFructose: z.boolean().optional(),\n  natural: z.boolean().optional(),\n  organic: z.boolean().optional(),\n  impactScore: z.boolean().optional(),\n  Diet: z.union([z.boolean(),z.lazy(() => DietFindManyArgsSchema)]).optional(),\n  Serving: z.union([z.boolean(),z.lazy(() => ServingFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => DietaryItemCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport const DietaryItemUpdateArgsSchema: z.ZodType<Prisma.DietaryItemUpdateArgs> = z.object({\n  select: DietaryItemSelectSchema.optional(),\n  include: DietaryItemIncludeSchema.optional(),\n  data: z.union([ DietaryItemUpdateInputSchema,DietaryItemUncheckedUpdateInputSchema ]),\n  where: DietaryItemWhereUniqueInputSchema,\n}).strict() ;\nexport default DietaryItemUpdateArgsSchema;"]}