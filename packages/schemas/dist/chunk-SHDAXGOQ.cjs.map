{"version":3,"sources":["../src/database/outputTypeSchemas/HealthReportAggregateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS;AAKX,IAAM,kCAA+E,EAAE,OAAO;AAAA,EACnG,OAAO,6BAA6B,SAAS;AAAA,EAC7C,SAAS,EAAE,MAAM,CAAE,2CAA2C,MAAM,GAAE,0CAA2C,CAAC,EAAE,SAAS;AAAA,EAC7H,QAAQ,mCAAmC,SAAS;AAAA,EACpD,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AACV,IAAO,0CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { HealthReportWhereInputSchema } from '../inputTypeSchemas/HealthReportWhereInputSchema.js'\nimport { HealthReportOrderByWithRelationInputSchema } from '../inputTypeSchemas/HealthReportOrderByWithRelationInputSchema.js'\nimport { HealthReportWhereUniqueInputSchema } from '../inputTypeSchemas/HealthReportWhereUniqueInputSchema.js'\nexport const HealthReportAggregateArgsSchema: z.ZodType<Prisma.HealthReportAggregateArgs> = z.object({\n  where: HealthReportWhereInputSchema.optional(),\n  orderBy: z.union([ HealthReportOrderByWithRelationInputSchema.array(),HealthReportOrderByWithRelationInputSchema ]).optional(),\n  cursor: HealthReportWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\nexport default HealthReportAggregateArgsSchema;"]}