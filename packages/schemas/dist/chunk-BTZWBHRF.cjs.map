{"version":3,"sources":["../src/database/inputTypeSchemas/BibUpsertWithoutEntriesInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAMX,IAAM,qCAAqF,EAAE,OAAO;AAAA,EACzG,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kCAAkC,GAAE,EAAE,KAAK,MAAM,2CAA2C,CAAE,CAAC;AAAA,EAC9H,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kCAAkC,GAAE,EAAE,KAAK,MAAM,2CAA2C,CAAE,CAAC;AAAA,EAC9H,OAAO,EAAE,KAAK,MAAM,mBAAmB,EAAE,SAAS;AACpD,CAAC,EAAE,OAAO;AACV,IAAO,6CAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { BibUpdateWithoutEntriesInputSchema } from './BibUpdateWithoutEntriesInputSchema.js';\nimport { BibUncheckedUpdateWithoutEntriesInputSchema } from './BibUncheckedUpdateWithoutEntriesInputSchema.js';\nimport { BibCreateWithoutEntriesInputSchema } from './BibCreateWithoutEntriesInputSchema.js';\nimport { BibUncheckedCreateWithoutEntriesInputSchema } from './BibUncheckedCreateWithoutEntriesInputSchema.js';\nimport { BibWhereInputSchema } from './BibWhereInputSchema.js';\nexport const BibUpsertWithoutEntriesInputSchema: z.ZodType<Prisma.BibUpsertWithoutEntriesInput> = z.object({\n  update: z.union([ z.lazy(() => BibUpdateWithoutEntriesInputSchema),z.lazy(() => BibUncheckedUpdateWithoutEntriesInputSchema) ]),\n  create: z.union([ z.lazy(() => BibCreateWithoutEntriesInputSchema),z.lazy(() => BibUncheckedCreateWithoutEntriesInputSchema) ]),\n  where: z.lazy(() => BibWhereInputSchema).optional()\n}).strict();\nexport default BibUpsertWithoutEntriesInputSchema;"]}