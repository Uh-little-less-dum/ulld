{"version":3,"sources":["../src/database/outputTypeSchemas/PracticeExamGroupByArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { PracticeExamWhereInputSchema } from '../inputTypeSchemas/PracticeExamWhereInputSchema.js'\nimport { PracticeExamOrderByWithAggregationInputSchema } from '../inputTypeSchemas/PracticeExamOrderByWithAggregationInputSchema.js'\nimport { PracticeExamScalarFieldEnumSchema } from '../inputTypeSchemas/PracticeExamScalarFieldEnumSchema.js'\nimport { PracticeExamScalarWhereWithAggregatesInputSchema } from '../inputTypeSchemas/PracticeExamScalarWhereWithAggregatesInputSchema.js'\nexport const PracticeExamGroupByArgsSchema: z.ZodType<Prisma.PracticeExamGroupByArgs> = z.object({\n  where: PracticeExamWhereInputSchema.optional(),\n  orderBy: z.union([ PracticeExamOrderByWithAggregationInputSchema.array(),PracticeExamOrderByWithAggregationInputSchema ]).optional(),\n  by: PracticeExamScalarFieldEnumSchema.array(),\n  having: PracticeExamScalarWhereWithAggregatesInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\nexport default PracticeExamGroupByArgsSchema;"],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAMX,IAAM,gCAA2E,EAAE,OAAO;AAAA,EAC/F,OAAO,6BAA6B,SAAS;AAAA,EAC7C,SAAS,EAAE,MAAM,CAAE,8CAA8C,MAAM,GAAE,6CAA8C,CAAC,EAAE,SAAS;AAAA,EACnI,IAAI,kCAAkC,MAAM;AAAA,EAC5C,QAAQ,iDAAiD,SAAS;AAAA,EAClE,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AACV,IAAO,wCAAQ;","names":[]}