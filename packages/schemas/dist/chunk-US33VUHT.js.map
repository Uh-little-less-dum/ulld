{"version":3,"sources":["../src/database/outputTypeSchemas/SequentialNoteListFindFirstArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { SequentialNoteListIncludeSchema } from '../inputTypeSchemas/SequentialNoteListIncludeSchema.js'\nimport { SequentialNoteListWhereInputSchema } from '../inputTypeSchemas/SequentialNoteListWhereInputSchema.js'\nimport { SequentialNoteListOrderByWithRelationInputSchema } from '../inputTypeSchemas/SequentialNoteListOrderByWithRelationInputSchema.js'\nimport { SequentialNoteListWhereUniqueInputSchema } from '../inputTypeSchemas/SequentialNoteListWhereUniqueInputSchema.js'\nimport { SequentialNoteListScalarFieldEnumSchema } from '../inputTypeSchemas/SequentialNoteListScalarFieldEnumSchema.js'\nimport { MdxNoteFindManyArgsSchema } from \"../outputTypeSchemas/MdxNoteFindManyArgsSchema\"\nimport { IpynbFindManyArgsSchema } from \"../outputTypeSchemas/IpynbFindManyArgsSchema\"\nimport { SequentialNoteListCountOutputTypeArgsSchema } from \"../outputTypeSchemas/SequentialNoteListCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const SequentialNoteListSelectSchema: z.ZodType<Prisma.SequentialNoteListSelect> = z.object({\n  sequentialKey: z.boolean().optional(),\n  MdxNote: z.union([z.boolean(),z.lazy(() => MdxNoteFindManyArgsSchema)]).optional(),\n  Ipynb: z.union([z.boolean(),z.lazy(() => IpynbFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => SequentialNoteListCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport const SequentialNoteListFindFirstArgsSchema: z.ZodType<Prisma.SequentialNoteListFindFirstArgs> = z.object({\n  select: SequentialNoteListSelectSchema.optional(),\n  include: SequentialNoteListIncludeSchema.optional(),\n  where: SequentialNoteListWhereInputSchema.optional(),\n  orderBy: z.union([ SequentialNoteListOrderByWithRelationInputSchema.array(),SequentialNoteListOrderByWithRelationInputSchema ]).optional(),\n  cursor: SequentialNoteListWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n  distinct: z.union([ SequentialNoteListScalarFieldEnumSchema,SequentialNoteListScalarFieldEnumSchema.array() ]).optional(),\n}).strict() ;\nexport default SequentialNoteListFindFirstArgsSchema;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAYX,IAAM,iCAA6E,EAAE,OAAO;AAAA,EACjG,eAAe,EAAE,QAAQ,EAAE,SAAS;AAAA,EACpC,SAAS,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EACjF,OAAO,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uBAAuB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC7E,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,2CAA2C,CAAC,CAAC,EAAE,SAAS;AACpG,CAAC,EAAE,OAAO;AACH,IAAM,wCAA2F,EAAE,OAAO;AAAA,EAC/G,QAAQ,+BAA+B,SAAS;AAAA,EAChD,SAAS,gCAAgC,SAAS;AAAA,EAClD,OAAO,mCAAmC,SAAS;AAAA,EACnD,SAAS,EAAE,MAAM,CAAE,iDAAiD,MAAM,GAAE,gDAAiD,CAAC,EAAE,SAAS;AAAA,EACzI,QAAQ,yCAAyC,SAAS;AAAA,EAC1D,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,UAAU,EAAE,MAAM,CAAE,yCAAwC,wCAAwC,MAAM,CAAE,CAAC,EAAE,SAAS;AAC1H,CAAC,EAAE,OAAO;AACV,IAAO,gDAAQ;","names":[]}