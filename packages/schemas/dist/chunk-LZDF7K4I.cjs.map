{"version":3,"sources":["../src/database/outputTypeSchemas/ToDoListFindFirstOrThrowArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAcX,IAAM,uBAAyD,EAAE,OAAO;AAAA,EAC7E,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAAA,EAChC,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,OAAO,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,sBAAsB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC5E,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC1E,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uBAAuB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC9E,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,iCAAiC,CAAC,CAAC,EAAE,SAAS;AAC1F,CAAC,EAAE,OAAO;AACH,IAAM,qCAAqF,EAAE,OAAO;AAAA,EACzG,QAAQ,qBAAqB,SAAS;AAAA,EACtC,SAAS,sBAAsB,SAAS;AAAA,EACxC,OAAO,yBAAyB,SAAS;AAAA,EACzC,SAAS,EAAE,MAAM,CAAE,uCAAuC,MAAM,GAAE,sCAAuC,CAAC,EAAE,SAAS;AAAA,EACrH,QAAQ,+BAA+B,SAAS;AAAA,EAChD,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,UAAU,EAAE,MAAM,CAAE,+BAA8B,8BAA8B,MAAM,CAAE,CAAC,EAAE,SAAS;AACtG,CAAC,EAAE,OAAO;AACV,IAAO,6CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { ToDoListIncludeSchema } from '../inputTypeSchemas/ToDoListIncludeSchema.js'\nimport { ToDoListWhereInputSchema } from '../inputTypeSchemas/ToDoListWhereInputSchema.js'\nimport { ToDoListOrderByWithRelationInputSchema } from '../inputTypeSchemas/ToDoListOrderByWithRelationInputSchema.js'\nimport { ToDoListWhereUniqueInputSchema } from '../inputTypeSchemas/ToDoListWhereUniqueInputSchema.js'\nimport { ToDoListScalarFieldEnumSchema } from '../inputTypeSchemas/ToDoListScalarFieldEnumSchema.js'\nimport { ToDoFindManyArgsSchema } from \"../outputTypeSchemas/ToDoFindManyArgsSchema\"\nimport { TagFindManyArgsSchema } from \"../outputTypeSchemas/TagFindManyArgsSchema\"\nimport { TopicFindManyArgsSchema } from \"../outputTypeSchemas/TopicFindManyArgsSchema\"\nimport { SubjectFindManyArgsSchema } from \"../outputTypeSchemas/SubjectFindManyArgsSchema\"\nimport { ToDoListCountOutputTypeArgsSchema } from \"../outputTypeSchemas/ToDoListCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const ToDoListSelectSchema: z.ZodType<Prisma.ToDoListSelect> = z.object({\n  id: z.boolean().optional(),\n  label: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n  lastUpdate: z.boolean().optional(),\n  lastAccess: z.boolean().optional(),\n  tasks: z.union([z.boolean(),z.lazy(() => ToDoFindManyArgsSchema)]).optional(),\n  tags: z.union([z.boolean(),z.lazy(() => TagFindManyArgsSchema)]).optional(),\n  topics: z.union([z.boolean(),z.lazy(() => TopicFindManyArgsSchema)]).optional(),\n  subjects: z.union([z.boolean(),z.lazy(() => SubjectFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => ToDoListCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport const ToDoListFindFirstOrThrowArgsSchema: z.ZodType<Prisma.ToDoListFindFirstOrThrowArgs> = z.object({\n  select: ToDoListSelectSchema.optional(),\n  include: ToDoListIncludeSchema.optional(),\n  where: ToDoListWhereInputSchema.optional(),\n  orderBy: z.union([ ToDoListOrderByWithRelationInputSchema.array(),ToDoListOrderByWithRelationInputSchema ]).optional(),\n  cursor: ToDoListWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n  distinct: z.union([ ToDoListScalarFieldEnumSchema,ToDoListScalarFieldEnumSchema.array() ]).optional(),\n}).strict() ;\nexport default ToDoListFindFirstOrThrowArgsSchema;"]}