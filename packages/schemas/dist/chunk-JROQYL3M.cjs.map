{"version":3,"sources":["../src/database/inputTypeSchemas/SettingsAppendixWhereInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,SAAS,SAAS;AAKX,IAAM,mCAAiF,EAAE,OAAO;AAAA,EACrG,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,KAAK,MAAM,gCAAgC,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjI,IAAI,EAAE,KAAK,MAAM,gCAAgC,EAAE,MAAM,EAAE,SAAS;AAAA,EACpE,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,KAAK,MAAM,gCAAgC,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjI,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kBAAkB,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACtE,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,iBAAiB,GAAE,EAAE,WAAW,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjF,WAAW,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,oBAAoB,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AAAA,EACpF,WAAW,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,oBAAoB,GAAE,EAAE,OAAO,KAAK,CAAE,CAAC,EAAE,SAAS;AACtF,CAAC,EAAE,OAAO;AAEV,IAAO,2CAAQ","sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { StringFilterSchema } from './StringFilterSchema';\nimport { BytesFilterSchema } from './BytesFilterSchema';\nimport { DateTimeFilterSchema } from './DateTimeFilterSchema';\n\nexport const SettingsAppendixWhereInputSchema: z.ZodType<Prisma.SettingsAppendixWhereInput> = z.object({\n  AND: z.union([ z.lazy(() => SettingsAppendixWhereInputSchema),z.lazy(() => SettingsAppendixWhereInputSchema).array() ]).optional(),\n  OR: z.lazy(() => SettingsAppendixWhereInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => SettingsAppendixWhereInputSchema),z.lazy(() => SettingsAppendixWhereInputSchema).array() ]).optional(),\n  id: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),\n  data: z.union([ z.lazy(() => BytesFilterSchema),z.instanceof(Buffer) ]).optional(),\n  createdAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),\n  updatedAt: z.union([ z.lazy(() => DateTimeFilterSchema),z.coerce.date() ]).optional(),\n}).strict();\n\nexport default SettingsAppendixWhereInputSchema;\n"]}