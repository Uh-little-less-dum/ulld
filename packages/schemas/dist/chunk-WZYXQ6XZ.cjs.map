{"version":3,"sources":["../src/database/inputTypeSchemas/BibEntryUpdateManyWithoutCitationGroupsNestedInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,SAAS;AAUX,IAAM,2DAAiI,EAAE,OAAO;AAAA,EACrJ,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8CAA8C,GAAE,EAAE,KAAK,MAAM,8CAA8C,EAAE,MAAM,GAAE,EAAE,KAAK,MAAM,uDAAuD,GAAE,EAAE,KAAK,MAAM,uDAAuD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACpT,iBAAiB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,uDAAuD,GAAE,EAAE,KAAK,MAAM,uDAAuD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC3L,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6DAA6D,GAAE,EAAE,KAAK,MAAM,6DAA6D,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9L,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7H,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACpI,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAChI,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACjI,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6DAA6D,GAAE,EAAE,KAAK,MAAM,6DAA6D,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9L,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,2DAA2D,GAAE,EAAE,KAAK,MAAM,2DAA2D,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC9L,YAAY,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,8BAA8B,GAAE,EAAE,KAAK,MAAM,8BAA8B,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AACtI,CAAC,EAAE,OAAO;AAEV,IAAO,mEAAQ","sourcesContent":["import type { Prisma } from '@prisma/client';\n\nimport { z } from 'zod';\nimport { BibEntryCreateWithoutCitationGroupsInputSchema } from './BibEntryCreateWithoutCitationGroupsInputSchema';\nimport { BibEntryUncheckedCreateWithoutCitationGroupsInputSchema } from './BibEntryUncheckedCreateWithoutCitationGroupsInputSchema';\nimport { BibEntryCreateOrConnectWithoutCitationGroupsInputSchema } from './BibEntryCreateOrConnectWithoutCitationGroupsInputSchema';\nimport { BibEntryUpsertWithWhereUniqueWithoutCitationGroupsInputSchema } from './BibEntryUpsertWithWhereUniqueWithoutCitationGroupsInputSchema';\nimport { BibEntryWhereUniqueInputSchema } from './BibEntryWhereUniqueInputSchema';\nimport { BibEntryUpdateWithWhereUniqueWithoutCitationGroupsInputSchema } from './BibEntryUpdateWithWhereUniqueWithoutCitationGroupsInputSchema';\nimport { BibEntryUpdateManyWithWhereWithoutCitationGroupsInputSchema } from './BibEntryUpdateManyWithWhereWithoutCitationGroupsInputSchema';\nimport { BibEntryScalarWhereInputSchema } from './BibEntryScalarWhereInputSchema';\n\nexport const BibEntryUpdateManyWithoutCitationGroupsNestedInputSchema: z.ZodType<Prisma.BibEntryUpdateManyWithoutCitationGroupsNestedInput> = z.object({\n  create: z.union([ z.lazy(() => BibEntryCreateWithoutCitationGroupsInputSchema),z.lazy(() => BibEntryCreateWithoutCitationGroupsInputSchema).array(),z.lazy(() => BibEntryUncheckedCreateWithoutCitationGroupsInputSchema),z.lazy(() => BibEntryUncheckedCreateWithoutCitationGroupsInputSchema).array() ]).optional(),\n  connectOrCreate: z.union([ z.lazy(() => BibEntryCreateOrConnectWithoutCitationGroupsInputSchema),z.lazy(() => BibEntryCreateOrConnectWithoutCitationGroupsInputSchema).array() ]).optional(),\n  upsert: z.union([ z.lazy(() => BibEntryUpsertWithWhereUniqueWithoutCitationGroupsInputSchema),z.lazy(() => BibEntryUpsertWithWhereUniqueWithoutCitationGroupsInputSchema).array() ]).optional(),\n  set: z.union([ z.lazy(() => BibEntryWhereUniqueInputSchema),z.lazy(() => BibEntryWhereUniqueInputSchema).array() ]).optional(),\n  disconnect: z.union([ z.lazy(() => BibEntryWhereUniqueInputSchema),z.lazy(() => BibEntryWhereUniqueInputSchema).array() ]).optional(),\n  delete: z.union([ z.lazy(() => BibEntryWhereUniqueInputSchema),z.lazy(() => BibEntryWhereUniqueInputSchema).array() ]).optional(),\n  connect: z.union([ z.lazy(() => BibEntryWhereUniqueInputSchema),z.lazy(() => BibEntryWhereUniqueInputSchema).array() ]).optional(),\n  update: z.union([ z.lazy(() => BibEntryUpdateWithWhereUniqueWithoutCitationGroupsInputSchema),z.lazy(() => BibEntryUpdateWithWhereUniqueWithoutCitationGroupsInputSchema).array() ]).optional(),\n  updateMany: z.union([ z.lazy(() => BibEntryUpdateManyWithWhereWithoutCitationGroupsInputSchema),z.lazy(() => BibEntryUpdateManyWithWhereWithoutCitationGroupsInputSchema).array() ]).optional(),\n  deleteMany: z.union([ z.lazy(() => BibEntryScalarWhereInputSchema),z.lazy(() => BibEntryScalarWhereInputSchema).array() ]).optional(),\n}).strict();\n\nexport default BibEntryUpdateManyWithoutCitationGroupsNestedInputSchema;\n"]}