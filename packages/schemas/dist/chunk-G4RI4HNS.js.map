{"version":3,"sources":["../src/database/outputTypeSchemas/SequentialNoteListUpsertArgsSchema.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { SequentialNoteListIncludeSchema } from '../inputTypeSchemas/SequentialNoteListIncludeSchema.js'\nimport { SequentialNoteListWhereUniqueInputSchema } from '../inputTypeSchemas/SequentialNoteListWhereUniqueInputSchema.js'\nimport { SequentialNoteListCreateInputSchema } from '../inputTypeSchemas/SequentialNoteListCreateInputSchema.js'\nimport { SequentialNoteListUncheckedCreateInputSchema } from '../inputTypeSchemas/SequentialNoteListUncheckedCreateInputSchema.js'\nimport { SequentialNoteListUpdateInputSchema } from '../inputTypeSchemas/SequentialNoteListUpdateInputSchema.js'\nimport { SequentialNoteListUncheckedUpdateInputSchema } from '../inputTypeSchemas/SequentialNoteListUncheckedUpdateInputSchema.js'\nimport { MdxNoteFindManyArgsSchema } from \"../outputTypeSchemas/MdxNoteFindManyArgsSchema\"\nimport { IpynbFindManyArgsSchema } from \"../outputTypeSchemas/IpynbFindManyArgsSchema\"\nimport { SequentialNoteListCountOutputTypeArgsSchema } from \"../outputTypeSchemas/SequentialNoteListCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\nexport const SequentialNoteListSelectSchema: z.ZodType<Prisma.SequentialNoteListSelect> = z.object({\n  sequentialKey: z.boolean().optional(),\n  MdxNote: z.union([z.boolean(),z.lazy(() => MdxNoteFindManyArgsSchema)]).optional(),\n  Ipynb: z.union([z.boolean(),z.lazy(() => IpynbFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => SequentialNoteListCountOutputTypeArgsSchema)]).optional(),\n}).strict()\nexport const SequentialNoteListUpsertArgsSchema: z.ZodType<Prisma.SequentialNoteListUpsertArgs> = z.object({\n  select: SequentialNoteListSelectSchema.optional(),\n  include: SequentialNoteListIncludeSchema.optional(),\n  where: SequentialNoteListWhereUniqueInputSchema,\n  create: z.union([ SequentialNoteListCreateInputSchema,SequentialNoteListUncheckedCreateInputSchema ]),\n  update: z.union([ SequentialNoteListUpdateInputSchema,SequentialNoteListUncheckedUpdateInputSchema ]),\n}).strict() ;\nexport default SequentialNoteListUpsertArgsSchema;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAaX,IAAM,iCAA6E,EAAE,OAAO;AAAA,EACjG,eAAe,EAAE,QAAQ,EAAE,SAAS;AAAA,EACpC,SAAS,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EACjF,OAAO,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uBAAuB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC7E,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,2CAA2C,CAAC,CAAC,EAAE,SAAS;AACpG,CAAC,EAAE,OAAO;AACH,IAAM,qCAAqF,EAAE,OAAO;AAAA,EACzG,QAAQ,+BAA+B,SAAS;AAAA,EAChD,SAAS,gCAAgC,SAAS;AAAA,EAClD,OAAO;AAAA,EACP,QAAQ,EAAE,MAAM,CAAE,qCAAoC,4CAA6C,CAAC;AAAA,EACpG,QAAQ,EAAE,MAAM,CAAE,qCAAoC,4CAA6C,CAAC;AACtG,CAAC,EAAE,OAAO;AACV,IAAO,6CAAQ;","names":[]}