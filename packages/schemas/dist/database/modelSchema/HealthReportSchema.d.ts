import { z } from 'zod';
import type { DietWithRelations } from './DietSchema.js';
import type { DietPartialWithRelations } from './DietSchema.js';
export declare const HealthReportSchema: z.ZodObject<{
    id: z.ZodNumber;
    title: z.ZodNullable<z.ZodString>;
    summary: z.ZodNullable<z.ZodString>;
    overall: z.ZodNumber;
    skin: z.ZodNumber;
    bloat: z.ZodNumber;
    weight_feeling: z.ZodNumber;
    fullness: z.ZodNumber;
    weight: z.ZodNullable<z.ZodNumber>;
    cardiacCapacity: z.ZodNumber;
    jawLine: z.ZodNumber;
    joints: z.ZodNumber;
    flexibility: z.ZodNumber;
    anxiety: z.ZodNumber;
    anxiety_desc: z.ZodNullable<z.ZodString>;
    mood_desc: z.ZodNullable<z.ZodString>;
    mood: z.ZodNumber;
    sexDrive: z.ZodNumber;
    intruisiveThoughts: z.ZodNumber;
    caffeineIntake: z.ZodNumber;
    glutenIntake: z.ZodNumber;
    sugarIntake: z.ZodNumber;
    artificialSweetenerIntake: z.ZodNumber;
    artificalDyes: z.ZodNumber;
    sleepQuality: z.ZodNumber;
    hydration: z.ZodNumber;
    twitching: z.ZodNumber;
    sleepHours: z.ZodNullable<z.ZodNumber>;
    calorie_est: z.ZodNullable<z.ZodNumber>;
    times_meals_more_than_gap_apart: z.ZodNullable<z.ZodNumber>;
    estHoursInExcessFast: z.ZodNullable<z.ZodNumber>;
    dietId: z.ZodNullable<z.ZodString>;
    created: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    weight: number | null;
    id: number;
    title: string | null;
    summary: string | null;
    skin: number;
    sexDrive: number;
    anxiety: number;
    created: Date;
    overall: number;
    bloat: number;
    weight_feeling: number;
    fullness: number;
    cardiacCapacity: number;
    jawLine: number;
    joints: number;
    flexibility: number;
    anxiety_desc: string | null;
    mood_desc: string | null;
    mood: number;
    intruisiveThoughts: number;
    caffeineIntake: number;
    glutenIntake: number;
    sugarIntake: number;
    artificialSweetenerIntake: number;
    artificalDyes: number;
    sleepQuality: number;
    hydration: number;
    twitching: number;
    sleepHours: number | null;
    calorie_est: number | null;
    times_meals_more_than_gap_apart: number | null;
    estHoursInExcessFast: number | null;
    dietId: string | null;
}, {
    weight: number | null;
    id: number;
    title: string | null;
    summary: string | null;
    skin: number;
    sexDrive: number;
    anxiety: number;
    created: Date;
    overall: number;
    bloat: number;
    weight_feeling: number;
    fullness: number;
    cardiacCapacity: number;
    jawLine: number;
    joints: number;
    flexibility: number;
    anxiety_desc: string | null;
    mood_desc: string | null;
    mood: number;
    intruisiveThoughts: number;
    caffeineIntake: number;
    glutenIntake: number;
    sugarIntake: number;
    artificialSweetenerIntake: number;
    artificalDyes: number;
    sleepQuality: number;
    hydration: number;
    twitching: number;
    sleepHours: number | null;
    calorie_est: number | null;
    times_meals_more_than_gap_apart: number | null;
    estHoursInExcessFast: number | null;
    dietId: string | null;
}>;
export type HealthReport = z.infer<typeof HealthReportSchema>;
export declare const HealthReportPartialSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodNumber>;
    title: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    summary: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    overall: z.ZodOptional<z.ZodNumber>;
    skin: z.ZodOptional<z.ZodNumber>;
    bloat: z.ZodOptional<z.ZodNumber>;
    weight_feeling: z.ZodOptional<z.ZodNumber>;
    fullness: z.ZodOptional<z.ZodNumber>;
    weight: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    cardiacCapacity: z.ZodOptional<z.ZodNumber>;
    jawLine: z.ZodOptional<z.ZodNumber>;
    joints: z.ZodOptional<z.ZodNumber>;
    flexibility: z.ZodOptional<z.ZodNumber>;
    anxiety: z.ZodOptional<z.ZodNumber>;
    anxiety_desc: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    mood_desc: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    mood: z.ZodOptional<z.ZodNumber>;
    sexDrive: z.ZodOptional<z.ZodNumber>;
    intruisiveThoughts: z.ZodOptional<z.ZodNumber>;
    caffeineIntake: z.ZodOptional<z.ZodNumber>;
    glutenIntake: z.ZodOptional<z.ZodNumber>;
    sugarIntake: z.ZodOptional<z.ZodNumber>;
    artificialSweetenerIntake: z.ZodOptional<z.ZodNumber>;
    artificalDyes: z.ZodOptional<z.ZodNumber>;
    sleepQuality: z.ZodOptional<z.ZodNumber>;
    hydration: z.ZodOptional<z.ZodNumber>;
    twitching: z.ZodOptional<z.ZodNumber>;
    sleepHours: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    calorie_est: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    times_meals_more_than_gap_apart: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    estHoursInExcessFast: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    dietId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    created: z.ZodOptional<z.ZodDate>;
}, "strip", z.ZodTypeAny, {
    weight?: number | null | undefined;
    id?: number | undefined;
    title?: string | null | undefined;
    summary?: string | null | undefined;
    skin?: number | undefined;
    sexDrive?: number | undefined;
    anxiety?: number | undefined;
    created?: Date | undefined;
    overall?: number | undefined;
    bloat?: number | undefined;
    weight_feeling?: number | undefined;
    fullness?: number | undefined;
    cardiacCapacity?: number | undefined;
    jawLine?: number | undefined;
    joints?: number | undefined;
    flexibility?: number | undefined;
    anxiety_desc?: string | null | undefined;
    mood_desc?: string | null | undefined;
    mood?: number | undefined;
    intruisiveThoughts?: number | undefined;
    caffeineIntake?: number | undefined;
    glutenIntake?: number | undefined;
    sugarIntake?: number | undefined;
    artificialSweetenerIntake?: number | undefined;
    artificalDyes?: number | undefined;
    sleepQuality?: number | undefined;
    hydration?: number | undefined;
    twitching?: number | undefined;
    sleepHours?: number | null | undefined;
    calorie_est?: number | null | undefined;
    times_meals_more_than_gap_apart?: number | null | undefined;
    estHoursInExcessFast?: number | null | undefined;
    dietId?: string | null | undefined;
}, {
    weight?: number | null | undefined;
    id?: number | undefined;
    title?: string | null | undefined;
    summary?: string | null | undefined;
    skin?: number | undefined;
    sexDrive?: number | undefined;
    anxiety?: number | undefined;
    created?: Date | undefined;
    overall?: number | undefined;
    bloat?: number | undefined;
    weight_feeling?: number | undefined;
    fullness?: number | undefined;
    cardiacCapacity?: number | undefined;
    jawLine?: number | undefined;
    joints?: number | undefined;
    flexibility?: number | undefined;
    anxiety_desc?: string | null | undefined;
    mood_desc?: string | null | undefined;
    mood?: number | undefined;
    intruisiveThoughts?: number | undefined;
    caffeineIntake?: number | undefined;
    glutenIntake?: number | undefined;
    sugarIntake?: number | undefined;
    artificialSweetenerIntake?: number | undefined;
    artificalDyes?: number | undefined;
    sleepQuality?: number | undefined;
    hydration?: number | undefined;
    twitching?: number | undefined;
    sleepHours?: number | null | undefined;
    calorie_est?: number | null | undefined;
    times_meals_more_than_gap_apart?: number | null | undefined;
    estHoursInExcessFast?: number | null | undefined;
    dietId?: string | null | undefined;
}>;
export type HealthReportPartial = z.infer<typeof HealthReportPartialSchema>;
export type HealthReportRelations = {
    currentDiet?: DietWithRelations | null;
};
export type HealthReportWithRelations = z.infer<typeof HealthReportSchema> & HealthReportRelations;
export declare const HealthReportWithRelationsSchema: z.ZodType<HealthReportWithRelations>;
export type HealthReportPartialRelations = {
    currentDiet?: DietPartialWithRelations | null;
};
export type HealthReportPartialWithRelations = z.infer<typeof HealthReportPartialSchema> & HealthReportPartialRelations;
export declare const HealthReportPartialWithRelationsSchema: z.ZodType<HealthReportPartialWithRelations>;
export type HealthReportWithPartialRelations = z.infer<typeof HealthReportSchema> & HealthReportPartialRelations;
export declare const HealthReportWithPartialRelationsSchema: z.ZodType<HealthReportWithPartialRelations>;
export default HealthReportSchema;
//# sourceMappingURL=HealthReportSchema.d.ts.map