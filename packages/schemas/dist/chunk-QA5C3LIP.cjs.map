{"version":3,"sources":["../src/database/inputTypeSchemas/BusinessContactScalarWhereWithAggregatesInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,SAAS,SAAS;AAIX,IAAM,sDAAuH,EAAE,OAAO;AAAA,EAC3I,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,mDAAmD,GAAE,EAAE,KAAK,MAAM,mDAAmD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACvK,IAAI,EAAE,KAAK,MAAM,mDAAmD,EAAE,MAAM,EAAE,SAAS;AAAA,EACvF,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,mDAAmD,GAAE,EAAE,KAAK,MAAM,mDAAmD,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACvK,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACjF,aAAa,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7F,aAAa,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7F,mBAAmB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACnG,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAC1G,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAC1G,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACzF,SAAS,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,wCAAwC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAC9G,CAAC,EAAE,OAAO;AACV,IAAO,8DAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { IntWithAggregatesFilterSchema } from './IntWithAggregatesFilterSchema.js';\nimport { StringWithAggregatesFilterSchema } from './StringWithAggregatesFilterSchema.js';\nimport { StringNullableWithAggregatesFilterSchema } from './StringNullableWithAggregatesFilterSchema.js';\nexport const BusinessContactScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.BusinessContactScalarWhereWithAggregatesInput> = z.object({\n  AND: z.union([ z.lazy(() => BusinessContactScalarWhereWithAggregatesInputSchema),z.lazy(() => BusinessContactScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  OR: z.lazy(() => BusinessContactScalarWhereWithAggregatesInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => BusinessContactScalarWhereWithAggregatesInputSchema),z.lazy(() => BusinessContactScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  id: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),\n  companyName: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  contactName: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  contactPreference: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  email: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  phone: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n  message: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  purpose: z.union([ z.lazy(() => StringNullableWithAggregatesFilterSchema),z.string() ]).optional().nullable(),\n}).strict();\nexport default BusinessContactScalarWhereWithAggregatesInputSchema;"]}