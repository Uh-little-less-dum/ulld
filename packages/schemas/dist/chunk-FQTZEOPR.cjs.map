{"version":3,"sources":["../src/database/inputTypeSchemas/AutoSettingScalarWhereWithAggregatesInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,SAAS,SAAS;AAKX,IAAM,kDAA+G,EAAE,OAAO;AAAA,EACnI,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,+CAA+C,GAAE,EAAE,KAAK,MAAM,+CAA+C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC/J,IAAI,EAAE,KAAK,MAAM,+CAA+C,EAAE,MAAM,EAAE,SAAS;AAAA,EACnF,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,+CAA+C,GAAE,EAAE,KAAK,MAAM,+CAA+C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC/J,IAAI,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,6BAA6B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACjF,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,yCAAyC,GAAE,EAAE,KAAK,MAAM,iBAAiB,CAAE,CAAC,EAAE,SAAS;AAAA,EACpH,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EACtF,OAAO,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AACzF,CAAC,EAAE,OAAO;AACV,IAAO,0DAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { IntWithAggregatesFilterSchema } from './IntWithAggregatesFilterSchema.js';\nimport { EnumautoSettingWithAggregatesFilterSchema } from './EnumautoSettingWithAggregatesFilterSchema.js';\nimport { autoSettingSchema } from './autoSettingSchema.js';\nimport { StringWithAggregatesFilterSchema } from './StringWithAggregatesFilterSchema.js';\nexport const AutoSettingScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.AutoSettingScalarWhereWithAggregatesInput> = z.object({\n  AND: z.union([ z.lazy(() => AutoSettingScalarWhereWithAggregatesInputSchema),z.lazy(() => AutoSettingScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  OR: z.lazy(() => AutoSettingScalarWhereWithAggregatesInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => AutoSettingScalarWhereWithAggregatesInputSchema),z.lazy(() => AutoSettingScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  id: z.union([ z.lazy(() => IntWithAggregatesFilterSchema),z.number() ]).optional(),\n  type: z.union([ z.lazy(() => EnumautoSettingWithAggregatesFilterSchema),z.lazy(() => autoSettingSchema) ]).optional(),\n  glob: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n  value: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n}).strict();\nexport default AutoSettingScalarWhereWithAggregatesInputSchema;"]}