{"version":3,"sources":["../src/database/inputTypeSchemas/PracticeExamOrderByWithAggregationInputSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AAOX,IAAM,gDAA2G,EAAE,OAAO;AAAA,EAC/H,IAAI,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3C,cAAc,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACrD,gBAAgB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EACvD,oBAAoB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC3D,wBAAwB,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC/D,MAAM,EAAE,KAAK,MAAM,eAAe,EAAE,SAAS;AAAA,EAC7C,QAAQ,EAAE,KAAK,MAAM,4CAA4C,EAAE,SAAS;AAAA,EAC5E,MAAM,EAAE,KAAK,MAAM,0CAA0C,EAAE,SAAS;AAAA,EACxE,MAAM,EAAE,KAAK,MAAM,0CAA0C,EAAE,SAAS;AAAA,EACxE,MAAM,EAAE,KAAK,MAAM,0CAA0C,EAAE,SAAS;AAAA,EACxE,MAAM,EAAE,KAAK,MAAM,0CAA0C,EAAE,SAAS;AAC1E,CAAC,EAAE,OAAO;AACV,IAAO,wDAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { SortOrderSchema } from './SortOrderSchema.js';\nimport { PracticeExamCountOrderByAggregateInputSchema } from './PracticeExamCountOrderByAggregateInputSchema.js';\nimport { PracticeExamAvgOrderByAggregateInputSchema } from './PracticeExamAvgOrderByAggregateInputSchema.js';\nimport { PracticeExamMaxOrderByAggregateInputSchema } from './PracticeExamMaxOrderByAggregateInputSchema.js';\nimport { PracticeExamMinOrderByAggregateInputSchema } from './PracticeExamMinOrderByAggregateInputSchema.js';\nimport { PracticeExamSumOrderByAggregateInputSchema } from './PracticeExamSumOrderByAggregateInputSchema.js';\nexport const PracticeExamOrderByWithAggregationInputSchema: z.ZodType<Prisma.PracticeExamOrderByWithAggregationInput> = z.object({\n  id: z.lazy(() => SortOrderSchema).optional(),\n  correctCount: z.lazy(() => SortOrderSchema).optional(),\n  inCorrectCount: z.lazy(() => SortOrderSchema).optional(),\n  timeLimitInSeconds: z.lazy(() => SortOrderSchema).optional(),\n  timeCompletedInSeconds: z.lazy(() => SortOrderSchema).optional(),\n  date: z.lazy(() => SortOrderSchema).optional(),\n  _count: z.lazy(() => PracticeExamCountOrderByAggregateInputSchema).optional(),\n  _avg: z.lazy(() => PracticeExamAvgOrderByAggregateInputSchema).optional(),\n  _max: z.lazy(() => PracticeExamMaxOrderByAggregateInputSchema).optional(),\n  _min: z.lazy(() => PracticeExamMinOrderByAggregateInputSchema).optional(),\n  _sum: z.lazy(() => PracticeExamSumOrderByAggregateInputSchema).optional()\n}).strict();\nexport default PracticeExamOrderByWithAggregationInputSchema;"]}