{"version":3,"sources":["../src/database/outputTypeSchemas/SettingsAppendixGroupByArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,oCAAmF,EAAE,OAAO;AAAA,EACvG,OAAO,iCAAiC,SAAS;AAAA,EACjD,SAAS,EAAE,MAAM,CAAE,kDAAkD,MAAM,GAAE,iDAAkD,CAAC,EAAE,SAAS;AAAA,EAC3I,IAAI,sCAAsC,MAAM;AAAA,EAChD,QAAQ,qDAAqD,SAAS;AAAA,EACtE,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AAEV,IAAO,4CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { SettingsAppendixWhereInputSchema } from '../inputTypeSchemas/SettingsAppendixWhereInputSchema'\nimport { SettingsAppendixOrderByWithAggregationInputSchema } from '../inputTypeSchemas/SettingsAppendixOrderByWithAggregationInputSchema'\nimport { SettingsAppendixScalarFieldEnumSchema } from '../inputTypeSchemas/SettingsAppendixScalarFieldEnumSchema'\nimport { SettingsAppendixScalarWhereWithAggregatesInputSchema } from '../inputTypeSchemas/SettingsAppendixScalarWhereWithAggregatesInputSchema'\n\nexport const SettingsAppendixGroupByArgsSchema: z.ZodType<Prisma.SettingsAppendixGroupByArgs> = z.object({\n  where: SettingsAppendixWhereInputSchema.optional(),\n  orderBy: z.union([ SettingsAppendixOrderByWithAggregationInputSchema.array(),SettingsAppendixOrderByWithAggregationInputSchema ]).optional(),\n  by: SettingsAppendixScalarFieldEnumSchema.array(),\n  having: SettingsAppendixScalarWhereWithAggregatesInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\n\nexport default SettingsAppendixGroupByArgsSchema;\n"]}