{"version":3,"sources":["../src/database/outputTypeSchemas/QAPairGroupByArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,OAAO,uBAAuB,SAAS;AAAA,EACvC,SAAS,EAAE,MAAM,CAAE,wCAAwC,MAAM,GAAE,uCAAwC,CAAC,EAAE,SAAS;AAAA,EACvH,IAAI,4BAA4B,MAAM;AAAA,EACtC,QAAQ,2CAA2C,SAAS;AAAA,EAC5D,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AAEV,IAAO,kCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { QAPairWhereInputSchema } from '../inputTypeSchemas/QAPairWhereInputSchema'\nimport { QAPairOrderByWithAggregationInputSchema } from '../inputTypeSchemas/QAPairOrderByWithAggregationInputSchema'\nimport { QAPairScalarFieldEnumSchema } from '../inputTypeSchemas/QAPairScalarFieldEnumSchema'\nimport { QAPairScalarWhereWithAggregatesInputSchema } from '../inputTypeSchemas/QAPairScalarWhereWithAggregatesInputSchema'\n\nexport const QAPairGroupByArgsSchema: z.ZodType<Prisma.QAPairGroupByArgs> = z.object({\n  where: QAPairWhereInputSchema.optional(),\n  orderBy: z.union([ QAPairOrderByWithAggregationInputSchema.array(),QAPairOrderByWithAggregationInputSchema ]).optional(),\n  by: QAPairScalarFieldEnumSchema.array(),\n  having: QAPairScalarWhereWithAggregatesInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\n\nexport default QAPairGroupByArgsSchema;\n"]}