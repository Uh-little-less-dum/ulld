{"version":3,"sources":["../src/database/outputTypeSchemas/WaitlistRequestCreateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,SAAS;AAOX,IAAM,8BAAuE,EAAE,OAAO;AAAA,EAC3F,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,OAAO,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC5B,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,YAAY,EAAE,QAAQ,EAAE,SAAS;AACnC,CAAC,EAAE,OAAO;AAEH,IAAM,kCAA+E,EAAE,OAAO;AAAA,EACnG,QAAQ,4BAA4B,SAAS;AAAA,EAC7C,MAAM,EAAE,MAAM,CAAE,kCAAiC,yCAA0C,CAAC;AAC9F,CAAC,EAAE,OAAO;AAEV,IAAO,0CAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { WaitlistRequestCreateInputSchema } from '../inputTypeSchemas/WaitlistRequestCreateInputSchema'\nimport { WaitlistRequestUncheckedCreateInputSchema } from '../inputTypeSchemas/WaitlistRequestUncheckedCreateInputSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const WaitlistRequestSelectSchema: z.ZodType<Prisma.WaitlistRequestSelect> = z.object({\n  id: z.boolean().optional(),\n  email: z.boolean().optional(),\n  receivedOn: z.boolean().optional(),\n  emailsSent: z.boolean().optional(),\n}).strict()\n\nexport const WaitlistRequestCreateArgsSchema: z.ZodType<Prisma.WaitlistRequestCreateArgs> = z.object({\n  select: WaitlistRequestSelectSchema.optional(),\n  data: z.union([ WaitlistRequestCreateInputSchema,WaitlistRequestUncheckedCreateInputSchema ]),\n}).strict() ;\n\nexport default WaitlistRequestCreateArgsSchema;\n"]}