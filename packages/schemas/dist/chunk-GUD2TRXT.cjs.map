{"version":3,"sources":["../src/database/inputTypeSchemas/ToDoCreateManyInputSchema.ts"],"names":[],"mappings":";;;;;AACA,SAAS,SAAS;AAEX,IAAM,4BAAmE,EAAE,OAAO;AAAA,EACvF,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EAC9B,WAAW,EAAE,OAAO,KAAK,EAAE,SAAS;AAAA,EACpC,MAAM,EAAE,OAAO;AAAA,EACf,OAAO,EAAE,OAAO,KAAK,EAAE,SAAS,EAAE,SAAS;AAAA,EAC3C,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS;AAAA,EACxC,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS;AAAA,EAC/C,UAAU,EAAE,KAAK,MAAM,kBAAkB,EAAE,SAAS,EAAE,SAAS;AAAA,EAC/D,YAAY,EAAE,QAAQ,EAAE,SAAS;AAAA,EACjC,QAAQ,EAAE,OAAO,EAAE,SAAS;AAAA,EAC5B,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EACpC,YAAY,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS;AAAA,EACjD,aAAa,EAAE,OAAO,KAAK,EAAE,SAAS,EAAE,SAAS;AACnD,CAAC,EAAE,OAAO;AACV,IAAO,oCAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { TaskCategorySchema } from './TaskCategorySchema.js';\nexport const ToDoCreateManyInputSchema: z.ZodType<Prisma.ToDoCreateManyInput> = z.object({\n  id: z.number().int().optional(),\n  createdAt: z.coerce.date().optional(),\n  task: z.string(),\n  dueAt: z.coerce.date().optional().nullable(),\n  details: z.string().optional().nullable(),\n  parentId: z.number().int().optional().nullable(),\n  category: z.lazy(() => TaskCategorySchema).optional().nullable(),\n  bookmarked: z.boolean().optional(),\n  status: z.string().optional(),\n  priority: z.number().int().optional(),\n  toDoListId: z.number().int().optional().nullable(),\n  completedOn: z.coerce.date().optional().nullable()\n}).strict();\nexport default ToDoCreateManyInputSchema;"]}