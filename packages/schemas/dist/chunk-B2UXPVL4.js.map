{"version":3,"sources":["../src/database/inputTypeSchemas/QAPairWhereUniqueInputSchema.ts"],"sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { QAPairWhereInputSchema } from './QAPairWhereInputSchema.js';\nimport { StringFilterSchema } from './StringFilterSchema.js';\nimport { StringNullableFilterSchema } from './StringNullableFilterSchema.js';\nimport { IntFilterSchema } from './IntFilterSchema.js';\nimport { TagListRelationFilterSchema } from './TagListRelationFilterSchema.js';\nimport { TopicListRelationFilterSchema } from './TopicListRelationFilterSchema.js';\nimport { SubjectListRelationFilterSchema } from './SubjectListRelationFilterSchema.js';\nimport { PracticeExamListRelationFilterSchema } from './PracticeExamListRelationFilterSchema.js';\nexport const QAPairWhereUniqueInputSchema: z.ZodType<Prisma.QAPairWhereUniqueInput> = z.union([\n  z.object({\n    id: z.string(),\n    question: z.string()\n  }),\n  z.object({\n    id: z.string(),\n  }),\n  z.object({\n    question: z.string(),\n  }),\n])\n.and(z.object({\n  id: z.string().optional(),\n  question: z.string().optional(),\n  AND: z.union([ z.lazy(() => QAPairWhereInputSchema),z.lazy(() => QAPairWhereInputSchema).array() ]).optional(),\n  OR: z.lazy(() => QAPairWhereInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => QAPairWhereInputSchema),z.lazy(() => QAPairWhereInputSchema).array() ]).optional(),\n  answer: z.union([ z.lazy(() => StringFilterSchema),z.string() ]).optional(),\n  description: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),\n  secondaryLabel: z.union([ z.lazy(() => StringNullableFilterSchema),z.string() ]).optional().nullable(),\n  correctCount: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),\n  inCorrectCount: z.union([ z.lazy(() => IntFilterSchema),z.number().int() ]).optional(),\n  tags: z.lazy(() => TagListRelationFilterSchema).optional(),\n  topics: z.lazy(() => TopicListRelationFilterSchema).optional(),\n  subjects: z.lazy(() => SubjectListRelationFilterSchema).optional(),\n  practiceExam: z.lazy(() => PracticeExamListRelationFilterSchema).optional()\n}).strict());\nexport default QAPairWhereUniqueInputSchema;"],"mappings":";;;;;;;;;;;;;;;;;;AACA,SAAS,SAAS;AASX,IAAM,+BAAyE,EAAE,MAAM;AAAA,EAC5F,EAAE,OAAO;AAAA,IACP,IAAI,EAAE,OAAO;AAAA,IACb,UAAU,EAAE,OAAO;AAAA,EACrB,CAAC;AAAA,EACD,EAAE,OAAO;AAAA,IACP,IAAI,EAAE,OAAO;AAAA,EACf,CAAC;AAAA,EACD,EAAE,OAAO;AAAA,IACP,UAAU,EAAE,OAAO;AAAA,EACrB,CAAC;AACH,CAAC,EACA,IAAI,EAAE,OAAO;AAAA,EACZ,IAAI,EAAE,OAAO,EAAE,SAAS;AAAA,EACxB,UAAU,EAAE,OAAO,EAAE,SAAS;AAAA,EAC9B,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,sBAAsB,GAAE,EAAE,KAAK,MAAM,sBAAsB,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7G,IAAI,EAAE,KAAK,MAAM,sBAAsB,EAAE,MAAM,EAAE,SAAS;AAAA,EAC1D,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,sBAAsB,GAAE,EAAE,KAAK,MAAM,sBAAsB,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EAC7G,QAAQ,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,kBAAkB,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AAAA,EAC1E,aAAa,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,0BAA0B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EAClG,gBAAgB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,0BAA0B,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS,EAAE,SAAS;AAAA,EACrG,cAAc,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC,EAAE,SAAS;AAAA,EACnF,gBAAgB,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,eAAe,GAAE,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC,EAAE,SAAS;AAAA,EACrF,MAAM,EAAE,KAAK,MAAM,2BAA2B,EAAE,SAAS;AAAA,EACzD,QAAQ,EAAE,KAAK,MAAM,6BAA6B,EAAE,SAAS;AAAA,EAC7D,UAAU,EAAE,KAAK,MAAM,+BAA+B,EAAE,SAAS;AAAA,EACjE,cAAc,EAAE,KAAK,MAAM,oCAAoC,EAAE,SAAS;AAC5E,CAAC,EAAE,OAAO,CAAC;AACX,IAAO,uCAAQ;","names":[]}