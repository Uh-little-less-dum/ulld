{"version":3,"sources":["../src/database/inputTypeSchemas/NoteTypeScalarWhereWithAggregatesInputSchema.ts"],"names":[],"mappings":";;;;;AACA,SAAS,SAAS;AAEX,IAAM,+CAAyG,EAAE,OAAO;AAAA,EAC7H,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,4CAA4C,GAAE,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACzJ,IAAI,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,EAAE,SAAS;AAAA,EAChF,KAAK,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,4CAA4C,GAAE,EAAE,KAAK,MAAM,4CAA4C,EAAE,MAAM,CAAE,CAAC,EAAE,SAAS;AAAA,EACzJ,MAAM,EAAE,MAAM,CAAE,EAAE,KAAK,MAAM,gCAAgC,GAAE,EAAE,OAAO,CAAE,CAAC,EAAE,SAAS;AACxF,CAAC,EAAE,OAAO;AACV,IAAO,uDAAQ","sourcesContent":["import type { Prisma } from '@ulld/database/db';\nimport { z } from 'zod';\nimport { StringWithAggregatesFilterSchema } from './StringWithAggregatesFilterSchema.js';\nexport const NoteTypeScalarWhereWithAggregatesInputSchema: z.ZodType<Prisma.NoteTypeScalarWhereWithAggregatesInput> = z.object({\n  AND: z.union([ z.lazy(() => NoteTypeScalarWhereWithAggregatesInputSchema),z.lazy(() => NoteTypeScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  OR: z.lazy(() => NoteTypeScalarWhereWithAggregatesInputSchema).array().optional(),\n  NOT: z.union([ z.lazy(() => NoteTypeScalarWhereWithAggregatesInputSchema),z.lazy(() => NoteTypeScalarWhereWithAggregatesInputSchema).array() ]).optional(),\n  name: z.union([ z.lazy(() => StringWithAggregatesFilterSchema),z.string() ]).optional(),\n}).strict();\nexport default NoteTypeScalarWhereWithAggregatesInputSchema;"]}