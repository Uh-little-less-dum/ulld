{"version":3,"sources":["../src/database/outputTypeSchemas/TagGroupByArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAMX,IAAM,uBAAyD,EAAE,OAAO;AAAA,EAC7E,OAAO,oBAAoB,SAAS;AAAA,EACpC,SAAS,EAAE,MAAM,CAAE,qCAAqC,MAAM,GAAE,oCAAqC,CAAC,EAAE,SAAS;AAAA,EACjH,IAAI,yBAAyB,MAAM;AAAA,EACnC,QAAQ,wCAAwC,SAAS;AAAA,EACzD,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AACV,IAAO,+BAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { TagWhereInputSchema } from '../inputTypeSchemas/TagWhereInputSchema.js'\nimport { TagOrderByWithAggregationInputSchema } from '../inputTypeSchemas/TagOrderByWithAggregationInputSchema.js'\nimport { TagScalarFieldEnumSchema } from '../inputTypeSchemas/TagScalarFieldEnumSchema.js'\nimport { TagScalarWhereWithAggregatesInputSchema } from '../inputTypeSchemas/TagScalarWhereWithAggregatesInputSchema.js'\nexport const TagGroupByArgsSchema: z.ZodType<Prisma.TagGroupByArgs> = z.object({\n  where: TagWhereInputSchema.optional(),\n  orderBy: z.union([ TagOrderByWithAggregationInputSchema.array(),TagOrderByWithAggregationInputSchema ]).optional(),\n  by: TagScalarFieldEnumSchema.array(),\n  having: TagScalarWhereWithAggregatesInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\nexport default TagGroupByArgsSchema;"]}