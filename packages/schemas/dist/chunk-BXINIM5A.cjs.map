{"version":3,"sources":["../src/database/outputTypeSchemas/KanbanGroupByArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAMX,IAAM,0BAA+D,EAAE,OAAO;AAAA,EACnF,OAAO,uBAAuB,SAAS;AAAA,EACvC,SAAS,EAAE,MAAM,CAAE,wCAAwC,MAAM,GAAE,uCAAwC,CAAC,EAAE,SAAS;AAAA,EACvH,IAAI,4BAA4B,MAAM;AAAA,EACtC,QAAQ,2CAA2C,SAAS;AAAA,EAC5D,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AACV,IAAO,kCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { KanbanWhereInputSchema } from '../inputTypeSchemas/KanbanWhereInputSchema.js'\nimport { KanbanOrderByWithAggregationInputSchema } from '../inputTypeSchemas/KanbanOrderByWithAggregationInputSchema.js'\nimport { KanbanScalarFieldEnumSchema } from '../inputTypeSchemas/KanbanScalarFieldEnumSchema.js'\nimport { KanbanScalarWhereWithAggregatesInputSchema } from '../inputTypeSchemas/KanbanScalarWhereWithAggregatesInputSchema.js'\nexport const KanbanGroupByArgsSchema: z.ZodType<Prisma.KanbanGroupByArgs> = z.object({\n  where: KanbanWhereInputSchema.optional(),\n  orderBy: z.union([ KanbanOrderByWithAggregationInputSchema.array(),KanbanOrderByWithAggregationInputSchema ]).optional(),\n  by: KanbanScalarFieldEnumSchema.array(),\n  having: KanbanScalarWhereWithAggregatesInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\nexport default KanbanGroupByArgsSchema;"]}