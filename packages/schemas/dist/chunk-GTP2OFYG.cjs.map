{"version":3,"sources":["../src/database/outputTypeSchemas/SnippetFindManyArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,SAAS;AASX,IAAM,sBAAuD,EAAE,OAAO;AAAA,EAC3E,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,SAAS,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC9B,aAAa,EAAE,QAAQ,EAAE,SAAS;AAAA,EAClC,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,WAAW,EAAE,QAAQ,EAAE,SAAS;AAClC,CAAC,EAAE,OAAO;AAEH,IAAM,4BAAmE,EAAE,OAAO;AAAA,EACvF,QAAQ,oBAAoB,SAAS;AAAA,EACrC,OAAO,wBAAwB,SAAS;AAAA,EACxC,SAAS,EAAE,MAAM,CAAE,sCAAsC,MAAM,GAAE,qCAAsC,CAAC,EAAE,SAAS;AAAA,EACnH,QAAQ,8BAA8B,SAAS;AAAA,EAC/C,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,UAAU,EAAE,MAAM,CAAE,8BAA6B,6BAA6B,MAAM,CAAE,CAAC,EAAE,SAAS;AACpG,CAAC,EAAE,OAAO;AAEV,IAAO,oCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { SnippetWhereInputSchema } from '../inputTypeSchemas/SnippetWhereInputSchema'\nimport { SnippetOrderByWithRelationInputSchema } from '../inputTypeSchemas/SnippetOrderByWithRelationInputSchema'\nimport { SnippetWhereUniqueInputSchema } from '../inputTypeSchemas/SnippetWhereUniqueInputSchema'\nimport { SnippetScalarFieldEnumSchema } from '../inputTypeSchemas/SnippetScalarFieldEnumSchema'\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const SnippetSelectSchema: z.ZodType<Prisma.SnippetSelect> = z.object({\n  id: z.boolean().optional(),\n  content: z.boolean().optional(),\n  description: z.boolean().optional(),\n  keywords: z.boolean().optional(),\n  language: z.boolean().optional(),\n  createdAt: z.boolean().optional(),\n}).strict()\n\nexport const SnippetFindManyArgsSchema: z.ZodType<Prisma.SnippetFindManyArgs> = z.object({\n  select: SnippetSelectSchema.optional(),\n  where: SnippetWhereInputSchema.optional(),\n  orderBy: z.union([ SnippetOrderByWithRelationInputSchema.array(),SnippetOrderByWithRelationInputSchema ]).optional(),\n  cursor: SnippetWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n  distinct: z.union([ SnippetScalarFieldEnumSchema,SnippetScalarFieldEnumSchema.array() ]).optional(),\n}).strict() ;\n\nexport default SnippetFindManyArgsSchema;\n"]}