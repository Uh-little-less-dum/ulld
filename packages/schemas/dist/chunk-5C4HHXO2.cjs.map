{"version":3,"sources":["../src/database/outputTypeSchemas/QAPairCreateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AAaX,IAAM,qBAAqD,EAAE,OAAO;AAAA,EACzE,IAAI,EAAE,QAAQ,EAAE,SAAS;AAAA,EACzB,UAAU,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC/B,QAAQ,EAAE,QAAQ,EAAE,SAAS;AAAA,EAC7B,aAAa,EAAE,QAAQ,EAAE,SAAS;AAAA,EAClC,gBAAgB,EAAE,QAAQ,EAAE,SAAS;AAAA,EACrC,cAAc,EAAE,QAAQ,EAAE,SAAS;AAAA,EACnC,gBAAgB,EAAE,QAAQ,EAAE,SAAS;AAAA,EACrC,MAAM,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,qBAAqB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC1E,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,uBAAuB,CAAC,CAAC,EAAE,SAAS;AAAA,EAC9E,UAAU,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,yBAAyB,CAAC,CAAC,EAAE,SAAS;AAAA,EAClF,cAAc,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,8BAA8B,CAAC,CAAC,EAAE,SAAS;AAAA,EAC3F,QAAQ,EAAE,MAAM,CAAC,EAAE,QAAQ,GAAE,EAAE,KAAK,MAAM,+BAA+B,CAAC,CAAC,EAAE,SAAS;AACxF,CAAC,EAAE,OAAO;AAEH,IAAM,yBAA6D,EAAE,OAAO;AAAA,EACjF,QAAQ,mBAAmB,SAAS;AAAA,EACpC,SAAS,oBAAoB,SAAS;AAAA,EACtC,MAAM,EAAE,MAAM,CAAE,yBAAwB,gCAAiC,CAAC;AAC5E,CAAC,EAAE,OAAO;AAEV,IAAO,iCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@prisma/client';\nimport { QAPairIncludeSchema } from '../inputTypeSchemas/QAPairIncludeSchema'\nimport { QAPairCreateInputSchema } from '../inputTypeSchemas/QAPairCreateInputSchema'\nimport { QAPairUncheckedCreateInputSchema } from '../inputTypeSchemas/QAPairUncheckedCreateInputSchema'\nimport { TagFindManyArgsSchema } from \"../outputTypeSchemas/TagFindManyArgsSchema\"\nimport { TopicFindManyArgsSchema } from \"../outputTypeSchemas/TopicFindManyArgsSchema\"\nimport { SubjectFindManyArgsSchema } from \"../outputTypeSchemas/SubjectFindManyArgsSchema\"\nimport { PracticeExamFindManyArgsSchema } from \"../outputTypeSchemas/PracticeExamFindManyArgsSchema\"\nimport { QAPairCountOutputTypeArgsSchema } from \"../outputTypeSchemas/QAPairCountOutputTypeArgsSchema\"\n// Select schema needs to be in file to prevent circular imports\n//------------------------------------------------------\n\nexport const QAPairSelectSchema: z.ZodType<Prisma.QAPairSelect> = z.object({\n  id: z.boolean().optional(),\n  question: z.boolean().optional(),\n  answer: z.boolean().optional(),\n  description: z.boolean().optional(),\n  secondaryLabel: z.boolean().optional(),\n  correctCount: z.boolean().optional(),\n  inCorrectCount: z.boolean().optional(),\n  tags: z.union([z.boolean(),z.lazy(() => TagFindManyArgsSchema)]).optional(),\n  topics: z.union([z.boolean(),z.lazy(() => TopicFindManyArgsSchema)]).optional(),\n  subjects: z.union([z.boolean(),z.lazy(() => SubjectFindManyArgsSchema)]).optional(),\n  practiceExam: z.union([z.boolean(),z.lazy(() => PracticeExamFindManyArgsSchema)]).optional(),\n  _count: z.union([z.boolean(),z.lazy(() => QAPairCountOutputTypeArgsSchema)]).optional(),\n}).strict()\n\nexport const QAPairCreateArgsSchema: z.ZodType<Prisma.QAPairCreateArgs> = z.object({\n  select: QAPairSelectSchema.optional(),\n  include: QAPairIncludeSchema.optional(),\n  data: z.union([ QAPairCreateInputSchema,QAPairUncheckedCreateInputSchema ]),\n}).strict() ;\n\nexport default QAPairCreateArgsSchema;\n"]}