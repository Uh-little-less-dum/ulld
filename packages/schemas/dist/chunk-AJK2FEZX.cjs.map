{"version":3,"sources":["../src/database/outputTypeSchemas/SettingsAggregateArgsSchema.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS;AAKX,IAAM,8BAAuE,EAAE,OAAO;AAAA,EAC3F,OAAO,yBAAyB,SAAS;AAAA,EACzC,SAAS,EAAE,MAAM,CAAE,uCAAuC,MAAM,GAAE,sCAAuC,CAAC,EAAE,SAAS;AAAA,EACrH,QAAQ,+BAA+B,SAAS;AAAA,EAChD,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,MAAM,EAAE,OAAO,EAAE,SAAS;AAC5B,CAAC,EAAE,OAAO;AACV,IAAO,sCAAQ","sourcesContent":["import { z } from 'zod';\nimport type { Prisma } from '@ulld/database/db';\nimport { SettingsWhereInputSchema } from '../inputTypeSchemas/SettingsWhereInputSchema.js'\nimport { SettingsOrderByWithRelationInputSchema } from '../inputTypeSchemas/SettingsOrderByWithRelationInputSchema.js'\nimport { SettingsWhereUniqueInputSchema } from '../inputTypeSchemas/SettingsWhereUniqueInputSchema.js'\nexport const SettingsAggregateArgsSchema: z.ZodType<Prisma.SettingsAggregateArgs> = z.object({\n  where: SettingsWhereInputSchema.optional(),\n  orderBy: z.union([ SettingsOrderByWithRelationInputSchema.array(),SettingsOrderByWithRelationInputSchema ]).optional(),\n  cursor: SettingsWhereUniqueInputSchema.optional(),\n  take: z.number().optional(),\n  skip: z.number().optional(),\n}).strict() ;\nexport default SettingsAggregateArgsSchema;"]}