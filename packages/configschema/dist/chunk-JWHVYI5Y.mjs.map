{"version":3,"sources":["../src/zod/pluginsConfig.ts"],"sourcesContent":["import { getCurrentPackageVersions } from \"@ulld/utilities/internalDataHelpers\";\nimport { z } from \"zod\";\nimport { ZodOutputSchema } from \"../types.js\";\n\nexport const pluginItemSchema = z.object({\n    name: z.string(),\n    version: z.string().default(\"latest\"),\n    parserIndex: z.number().min(0).default(50),\n});\n\nexport const pluginItemSchemaOutput: ZodOutputSchema<typeof pluginItemSchema> = z.object({\n    name: z.string(),\n    version: z.string(),\n    parserIndex: z.number().min(0)\n});\n\nconst getDefaultPlugins = (): z.input<typeof pluginItemSchema>[]  => {\n    const currentPackageVersions = getCurrentPackageVersions()\n       return [\n            {\n                name: \"@ulld/api\",\n                parserIndex: 0,\n                version: currentPackageVersions[\"@ulld/api\"],\n            },\n            {\n                name: \"@ulld/plot\",\n                parserIndex: 0,\n                version: currentPackageVersions[\"@ulld/plot\"],\n            },\n        ]\n    }\n\n\nconst pluginConfigSchemaField = z\n        .union([\n            pluginItemSchema,\n            pluginItemSchema.array(),\n            z.string(),\n            z.string().array(),\n        ])\n\n\nexport const pluginsConfigSchema = pluginConfigSchemaField.default(getDefaultPlugins())\n        .transform((a = []) => {\n            let items = Array.isArray(a) ? a : [a]\n            let names: string[] = [];\n            let newItems = items.map((s) => {\n                names.push(typeof s === \"string\" ? s : s.name);\n                return typeof s === \"string\" ? { name: s, version: \"latest\", parserIndex: 50 } : s;\n            });\n            return newItems;\n        })\n\nexport const pluginsConfigSchemaOutput: ZodOutputSchema<typeof pluginsConfigSchema> = pluginItemSchemaOutput.array()\n"],"mappings":";AAAA,SAAS,iCAAiC;AAC1C,SAAS,SAAS;AAGX,IAAM,mBAAmB,EAAE,OAAO;AAAA,EACrC,MAAM,EAAE,OAAO;AAAA,EACf,SAAS,EAAE,OAAO,EAAE,QAAQ,QAAQ;AAAA,EACpC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAE;AAC7C,CAAC;AAEM,IAAM,yBAAmE,EAAE,OAAO;AAAA,EACrF,MAAM,EAAE,OAAO;AAAA,EACf,SAAS,EAAE,OAAO;AAAA,EAClB,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC;AACjC,CAAC;AAED,IAAM,oBAAoB,MAA2C;AACjE,QAAM,yBAAyB,0BAA0B;AACtD,SAAO;AAAA,IACF;AAAA,MACI,MAAM;AAAA,MACN,aAAa;AAAA,MACb,SAAS,uBAAuB,WAAW;AAAA,IAC/C;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,aAAa;AAAA,MACb,SAAS,uBAAuB,YAAY;AAAA,IAChD;AAAA,EACJ;AACJ;AAGJ,IAAM,0BAA0B,EACvB,MAAM;AAAA,EACH;AAAA,EACA,iBAAiB,MAAM;AAAA,EACvB,EAAE,OAAO;AAAA,EACT,EAAE,OAAO,EAAE,MAAM;AACrB,CAAC;AAGF,IAAM,sBAAsB,wBAAwB,QAAQ,kBAAkB,CAAC,EAC7E,UAAU,CAAC,IAAI,CAAC,MAAM;AACnB,MAAI,QAAQ,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC;AACrC,MAAI,QAAkB,CAAC;AACvB,MAAI,WAAW,MAAM,IAAI,CAAC,MAAM;AAC5B,UAAM,KAAK,OAAO,MAAM,WAAW,IAAI,EAAE,IAAI;AAC7C,WAAO,OAAO,MAAM,WAAW,EAAE,MAAM,GAAG,SAAS,UAAU,aAAa,GAAG,IAAI;AAAA,EACrF,CAAC;AACD,SAAO;AACX,CAAC;AAEF,IAAM,4BAAyE,uBAAuB,MAAM;","names":[]}