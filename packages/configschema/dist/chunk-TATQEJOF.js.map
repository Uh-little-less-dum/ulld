{"version":3,"sources":["../src/zod/secondaryConfigParse/main.ts"],"sourcesContent":["import { z } from \"zod\";\nimport { appConfigSchema } from \"../main.js\";\nimport { jupyterConfigSchemaOutput } from \"../jupyter/main.js\";\nimport { codeConfigSchemaOutput } from \"../codeConfig.js\";\nimport { getFileTypeAppendices, getParsableExtensions } from \"./getParsableExtensions.js\";\nimport { internalDocumentTypeConfigSchema, internalDocumentTypes } from \"../internalDocumentTypes.js\";\n\n\n\nexport const secondaryConfigParse = appConfigSchema.merge(z.object({\n    jupyter: jupyterConfigSchemaOutput,\n    code: codeConfigSchemaOutput\n})).transform((config) => {\n    let pe = getParsableExtensions(config)\n    return {\n        ...config,\n        parsableExtensions: pe,\n        filetypeSpecificAppendices: getFileTypeAppendices(pe),\n        internalDocumentTypes: internalDocumentTypeConfigSchema.array().parse(internalDocumentTypes),\n        fileTypes: {\n            image: [\n                \"jpeg\", \"jpg\", \"webp\", \"png\", \"heif\", \"gif\"\n            ]\n        }\n    }\n})\n\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAS;AASX,IAAM,uBAAuB,gBAAgB,MAAM,EAAE,OAAO;AAAA,EAC/D,SAAS;AAAA,EACT,MAAM;AACV,CAAC,CAAC,EAAE,UAAU,CAAC,WAAW;AACtB,MAAI,KAAK,sBAAsB,MAAM;AACrC,SAAO;AAAA,IACH,GAAG;AAAA,IACH,oBAAoB;AAAA,IACpB,4BAA4B,sBAAsB,EAAE;AAAA,IACpD,uBAAuB,iCAAiC,MAAM,EAAE,MAAM,qBAAqB;AAAA,IAC3F,WAAW;AAAA,MACP,OAAO;AAAA,QACH;AAAA,QAAQ;AAAA,QAAO;AAAA,QAAQ;AAAA,QAAO;AAAA,QAAQ;AAAA,MAC1C;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;","names":[]}