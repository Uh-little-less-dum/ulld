{"version":3,"sources":["../src/zod/build/database/postgres.ts"],"names":[],"mappings":";AAAA,SAAS,SAAS;AAGX,IAAM,uBAAuB,EAC/B,OAAO;AAAA,EACJ,MAAM,EAAE,OAAO,OAAO,EAAE,IAAI,EAAE,QAAQ,IAAI;AAAA,EAC1C,QAAQ,EAAE,OAAO,EAAE,QAAQ,MAAM;AAAA,EACjC,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAE;AACxC,CAAC,EACA,QAAQ,CAAC,CAAC,EACV;AAAA,EAAO,CAAC,SACL,QAAQ,KAAK,kBAAkB,MAAO,KAAK,QAAQ,KAAK,MAAO;AACnE,EACC,UAAU,CAAC,SAAS;AACjB,MAAI,KAAK,iBAAiB,KAAK,kBAAkB,IAAI;AACjD,WAAO;AAAA,MACH,eAAe,KAAK;AAAA,IACxB;AAAA,EACJ;AACA,SAAO;AAAA,IACH,MAAM,KAAK;AAAA,IACX,QAAQ,KAAK;AAAA,EACjB;AACJ,CAAC;AAGE,IAAM,6BAA2E,EAAE,MAAM;AAAA,EAC5F,EAAE,OAAO,EAAC,eAAe,EAAE,OAAO,EAAC,CAAC;AAAA,EACpC,EAAE,OAAO;AAAA,IACL,MAAM,EAAE,OAAO,EAAE,IAAI;AAAA,IACrB,QAAQ,EAAE,OAAO;AAAA,EACrB,CAAC;AACL,CAAC","sourcesContent":["import { z } from \"zod\";\nimport { ZodOutputSchema } from \"../../../types.js\";\n\nexport const postgresConfigSchema = z\n    .object({\n        port: z.coerce.number().int().default(5432),\n        dbName: z.string().default(\"ulld\"),\n        connectionURI: z.string().default(\"\"),\n    })\n    .default({})\n    .refine((data) =>\n        Boolean(data.connectionURI !== \"\" || (data.port && data.dbName)),\n    )\n    .transform((data) => {\n        if (data.connectionURI && data.connectionURI !== \"\") {\n            return {\n                connectionURI: data.connectionURI,\n            };\n        }\n        return {\n            port: data.port,\n            dbName: data.dbName,\n        };\n    });\n\n\nexport const postgresConfigSchemaOutput: ZodOutputSchema<typeof postgresConfigSchema> = z.union([\n    z.object({connectionURI: z.string()}),\n    z.object({\n        port: z.number().int(),\n        dbName: z.string()\n    })\n])\n"]}