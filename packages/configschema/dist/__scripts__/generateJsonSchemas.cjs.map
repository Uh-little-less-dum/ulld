{"version":3,"sources":["../../src/__scripts__/generateJsonSchemas.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,uBAAuB;AAIhC,OAAO,QAAQ;AACf,OAAO,UAAU;AAEjB,IAAM,sBAAsB,gBAAgB,iBAAiB,eAAe;AAE5E,IAAM,yBAAyB,gBAAgB,uBAAuB,kBAAkB;AAGxF,IAAM,4BAA4B,gBAAgB,uBAAuB,qBAAqB;AAE9F,IAAI,QAAQ;AAAA,EACR;AAAA,IACI,QAAQ;AAAA,IACR,MAAM;AAAA,EACV;AAAA,EACA;AAAA,IACI,QAAQ;AAAA,IACR,MAAM;AAAA,EACV;AAAA,EACA;AAAA,IACI,QAAQ;AAAA,IACR,MAAM;AAAA,EACV;AACJ;AAEA,WAAW,KAAK,OAAO;AACnB,KAAG,cAAc,KAAK,KAAK,YAAY,SAAS,kBAAkB,EAAE,IAAI,EAAE,GAAG,KAAK,UAAU,EAAE,QAAQ,MAAM,CAAC,CAAC;AAC9G,KAAG,cAAc,KAAK,KAAK,YAAY,SAAS,wCAAwC,EAAE,IAAI,EAAE,GAAG,KAAK,UAAU,EAAE,QAAQ,MAAM,CAAC,CAAC;AACxI;AAEA,QAAQ,IAAI;AAAA;AAAA,EAEV,MAAM,IAAI,CAAC,MAAM,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,IAAI,CAAC;AAAA,CAC3C","sourcesContent":["import { z } from \"zod\";\nimport { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { appConfigSchema } from \"../zod/main\";\nimport { developerConfigSchema } from \"../developer/main\";\nimport { buildStaticDataSchema } from \"../buildStaticData/main\";\nimport fs from 'fs'\nimport path from 'path'\n\nconst appConfigJsonSchema = zodToJsonSchema(appConfigSchema, \"ulldAppConfig\");\n\nconst pluginConfigJsonSchema = zodToJsonSchema(developerConfigSchema, \"ulldPluginConfig\");\n\n\nconst buildStaticDataJsonSchema = zodToJsonSchema(buildStaticDataSchema, \"ulldBuildStaticData\");\n\nlet items = [\n    {\n        schema: buildStaticDataJsonSchema,\n        file: \"buildStaticDataJsonSchema.json\"\n    },\n    {\n        schema: pluginConfigJsonSchema,\n        file: \"pluginConfigJsonSchema.json\"\n    },\n    {\n        schema: appConfigJsonSchema,\n        file: \"appConfigJsonSchema.json\"\n    },\n]\n\nfor (const f of items) {\n    fs.writeFileSync(path.join(import.meta.dirname, `../jsonSchemas/${f.file}`), JSON.stringify(f.schema, null, 2))\n    fs.writeFileSync(path.join(import.meta.dirname, `../../../build/src/configJsonSchemas/${f.file}`), JSON.stringify(f.schema, null, 2))\n}\n\nconsole.log(`Successfully wrote json schemas to: \n\n${items.map((i) => `- ${i.file}`).join(\"\\n\")}\n`)\n"]}