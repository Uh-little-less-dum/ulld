{"version":3,"sources":["../../src/buildStaticData/main.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,SAAS,SAAS;AAKlB,OAAO,eAAe;AACtB,SAAS,0BAA0B;AAEnC,IAAM,wBAAwB,CAAC,uBAAiC;AAC5D,MAAI,MAA8B,CAAC;AACnC,aAAW,KAAK,oBAAoB;AAChC,QAAI,CAAC,IAAI,mBAAmB,GAAG,SAAS,EAAE;AAAA,EAC9C;AACA,SAAO;AACX;AAEO,IAAM,wBAAwB,EAChC,OAAO;AAAA,EACJ,QAAQ,EAAE,OAAO;AAAA,EACjB,iBAAiB,qBACZ,MAAM,EACN,QAAQ,CAAC,CAAC,EACV,UAAU,CAAC,MAAM;AAAA,IACd,GAAG;AAAA,IACH;AAAA,MACI,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACV;AAAA,EACJ,CAAC;AAAA,EACL,cAAc,yBAAyB,MAAM,EAAE,QAAQ,CAAC,CAAC;AAAA,EACzD,eAAe,6BAA6B,MAAM,EAAE,QAAQ,CAAC,CAAC;AAAA,EAC9D,mBAAmB,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AAAA,EAChD,iBAAiB,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AAClD,CAAC,EACA,UAAU,CAAC,MAAM;AACd,SAAO;AAAA,IACH,GAAG;AAAA,IACH,oBAAoB,UAAU;AAAA,IAC9B,4BAA4B;AAAA,MACxB,UAAU;AAAA,IACd;AAAA,IACA,uBAAuB,UAAU;AAAA,IACjC,WAAW;AAAA,MACP,OAAO,CAAC,QAAQ,OAAO,QAAQ,OAAO,QAAQ,KAAK;AAAA,IACvD;AAAA,EACJ;AACJ,CAAC","sourcesContent":["import { z } from \"zod\";\nimport { navigationLinkSchema } from \"../developer/navigationLink.js\";\nimport { settingsPageOutputSchema } from \"./settingsPage.js\";\nimport type { ValidIconName } from \"@ulld/icons\";\nimport { componentDocumentationSchema } from \"./componentDocumentation.js\";\nimport buildData from \"@ulld/utilities/buildStaticData.json\" with { type: \"json\" };\nimport { replaceRecursively } from \"@ulld/utilities/general\";\n\nconst getFileTypeAppendices = (parsableExtensions: string[]) => {\n    let ext: Record<string, string> = {} as Record<string, string>;\n    for (const k of parsableExtensions) {\n        ext[k] = replaceRecursively(k, /\\./gim, \"\");\n    }\n    return ext;\n};\n\nexport const buildStaticDataSchema = z\n    .object({\n        fsRoot: z.string(),\n        navigationLinks: navigationLinkSchema\n            .array()\n            .default([])\n            .transform((a) => [\n                ...a,\n                {\n                    label: \"Settings\",\n                    href: \"/settings\",\n                    icon: \"cog\" as ValidIconName,\n                },\n            ]),\n        settingPages: settingsPageOutputSchema.array().default([]),\n        componentDocs: componentDocumentationSchema.array().default([]),\n        transpilePackages: z.string().array().default([]),\n        tailwindSources: z.string().array().default([]),\n    })\n    .transform((a) => {\n        return {\n            ...a,\n            parsableExtensions: buildData.parsableFileExtensions,\n            filetypeSpecificAppendices: getFileTypeAppendices(\n                buildData.parsableFileExtensions,\n            ),\n            internalDocumentTypes: buildData.internalDocumentTypes,\n            fileTypes: {\n                image: [\"jpeg\", \"jpg\", \"webp\", \"png\", \"heif\", \"gif\"],\n            },\n        };\n    });\n"]}