{"version":3,"sources":["../../src/buildStaticData/main.ts","../../src/developer/navigationLink.ts","../../src/developer/navigationLinkType.ts","../../src/buildStaticData/settingsPage.ts","../../src/buildStaticData/componentDocumentation.ts"],"names":["z"],"mappings":"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","sourcesContent":["import { z } from \"zod\";\nimport { navigationLinkSchema } from \"../developer/navigationLink.js\";\nimport { settingsPageOutputSchema } from \"./settingsPage.js\";\nimport type { ValidIconName } from \"@ulld/icons\";\nimport { componentDocumentationSchema } from \"./componentDocumentation.js\";\nimport buildData from \"@ulld/utilities/buildStaticData.json\" with { type: \"json\" };\nimport { replaceRecursively } from \"@ulld/utilities/general\";\n\nconst getFileTypeAppendices = (parsableExtensions: string[]) => {\n    let ext: Record<string, string> = {} as Record<string, string>;\n    for (const k of parsableExtensions) {\n        ext[k] = replaceRecursively(k, /\\./gim, \"\");\n    }\n    return ext;\n};\n\nexport const buildStaticDataSchema = z\n    .object({\n        fsRoot: z.string(),\n        navigationLinks: navigationLinkSchema\n            .array()\n            .default([])\n            .transform((a) => [\n                ...a,\n                {\n                    label: \"Settings\",\n                    href: \"/settings\",\n                    icon: \"cog\" as ValidIconName,\n                },\n            ]),\n        settingPages: settingsPageOutputSchema.array().default([]),\n        componentDocs: componentDocumentationSchema.array().default([]),\n        transpilePackages: z.string().array().default([]),\n        tailwindSources: z.string().array().default([]),\n    })\n    .transform((a) => {\n        return {\n            ...a,\n            parsableExtensions: buildData.parsableFileExtensions,\n            filetypeSpecificAppendices: getFileTypeAppendices(\n                buildData.parsableFileExtensions,\n            ),\n            internalDocumentTypes: buildData.internalDocumentTypes,\n            fileTypes: {\n                image: [\"jpeg\", \"jpg\", \"webp\", \"png\", \"heif\", \"gif\"],\n            },\n        };\n    });\n","import {z} from 'zod'\nimport { navigationLinkCategory } from './navigationLinkType.js'\n\n\nexport const navigationLinkSchema = z.object({\n    label: z.string(),\n    href: z.string(),\n    icon: z.string().optional(),\n    pluginName: z.string().optional(),\n    category: navigationLinkCategory.default(\"general\")\n})\n","import type { ValidIconName } from \"@ulld/icons\";\nimport { z } from 'zod'\n\nexport const navigationLinkCategory = z.union([\n    z.literal(\"math\"),\n    z.literal(\"snippets\"),\n    z.literal(\"code\"),\n    z.literal(\"AI\"),\n    z.literal(\"ML\"),\n    z.literal(\"writing\"),\n    z.literal(\"search\"),\n    z.literal(\"notebooks\"),\n    z.literal(\"database\"),\n    z.literal(\"work\"),\n    z.literal(\"school\"),\n    z.literal(\"organization\"),\n    z.literal(\"task-management\"),\n    z.literal(\"academic\"),\n    z.literal(\"research\"),\n    z.literal(\"project-planning\"),\n    z.literal(\"calendar\"),\n    z.literal(\"general\")\n])\n\n\nexport type NavigationLinkCategory = z.input<typeof navigationLinkCategory>\n\nexport type NavigationLinkType = {\n    label: string;\n    href: string;\n    icon?: ValidIconName;\n    category?: NavigationLinkCategory\n};\n","import { z } from \"zod\";\n\nexport const settingsPageOutputSchema = z.object({\n    title: z.string().optional(),\n    subtitle: z.string().optional(),\n    href: z.string(),\n    pluginName: z.string(),\n})\n","import { z } from \"zod\";\n\nexport const componentDocumentationSchema = z.object({\n    pluginName: z.string(),\n    componentName: z.string(),\n    embeddableSyntax: z.string().describe(\"The syntax for the component as it appears in JSX. Synonymous with the regexToInclude property in the developer config.\").array().default([]),\n    urls: z.object({\n        short: z.string().optional(),\n        full: z.string().optional()\n    }),\n    filePaths: z.object({\n        short: z.string().optional(),\n        full: z.string().optional()\n    }),\n    tags: z.string().array().default([]),\n    componentId: z.string()\n})\n"]}