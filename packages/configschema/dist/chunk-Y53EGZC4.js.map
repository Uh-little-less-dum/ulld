{"version":3,"sources":["../src/developer/parserSchema.ts"],"sourcesContent":["import { z, ZodOptional, ZodType } from \"zod\";\nimport { ParserConfig } from \"./types/parserConfig.js\";\nimport { transformExportString } from \"@ulld/utilities/transformExportString\";\n\nexport const parserKeyList = [\"mdx\"] as const;\n\nexport const parserExtensionSchema: z.ZodType<ParserConfig> = z.object({\n    export: z\n        .string()\n        .describe(\n            \"The export in your package.json that exports the parser function. The parsing function must be the file's default export.\",\n        )\n        .transform(transformExportString),\n    conditions: z\n        .object({\n            frontMatter: z.string().optional(),\n        })\n        .default({}),\n});\n\ntype ParserRecord = Record<\n    (typeof parserKeyList)[number],\n    ZodOptional<ZodType<ParserConfig, z.ZodTypeDef, ParserConfig>>\n>;\n\nexport const pluginParserMap = z.object<ParserRecord>({\n    mdx: parserExtensionSchema.optional(),\n});\n"],"mappings":";AAAA,SAAS,SAA+B;AAExC,SAAS,6BAA6B;AAE/B,IAAM,gBAAgB,CAAC,KAAK;AAE5B,IAAM,wBAAiD,EAAE,OAAO;AAAA,EACnE,QAAQ,EACH,OAAO,EACP;AAAA,IACG;AAAA,EACJ,EACC,UAAU,qBAAqB;AAAA,EACpC,YAAY,EACP,OAAO;AAAA,IACJ,aAAa,EAAE,OAAO,EAAE,SAAS;AAAA,EACrC,CAAC,EACA,QAAQ,CAAC,CAAC;AACnB,CAAC;AAOM,IAAM,kBAAkB,EAAE,OAAqB;AAAA,EAClD,KAAK,sBAAsB,SAAS;AACxC,CAAC;","names":[]}