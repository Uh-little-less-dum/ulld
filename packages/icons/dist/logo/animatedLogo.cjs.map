{"version":3,"sources":["../../src/logo/animatedLogo.tsx"],"names":["React","forwardRef","useEffect","useRef","useState","motion","useInView","uLineDir","durationMap","delayMap","totalInitialDuration","a","b","getDuration","i","speed","getDelay","pathVariants","delay","pathVariantsBackwards","MainLogo","shouldShow","brandColor","props","ref","useInViewOrShow","show","noAnimate","v","inView","setShouldShow","AnimatedUlldLogo","shouldUseView","h1","suffix","suffixDelay","l"],"mappings":"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","sourcesContent":["\"use client\";\nimport React, {\n    ForwardedRef,\n    RefObject,\n    forwardRef,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\nimport { Variants, motion, useInView } from \"framer-motion\";\n\nexport interface BaseProps extends React.ComponentProps<typeof motion.svg> {\n    delay?: number;\n    speed?: number;\n    h1?: boolean;\n    suffix?: string;\n    suffixDelay?: number;\n    noAnimate?: boolean\n    brandColor?: boolean\n}\n\nexport type AnimatedUlldLogoProps =\n    | (BaseProps & { show: boolean; useInView?: never })\n    | (BaseProps & { useInView: true; show?: never });\n\nconst uLineDir = 0.6;\n\nconst durationMap: [number, number, number] = [\n    uLineDir,\n    uLineDir * 0.7,\n    uLineDir,\n];\nconst delayMap: [number, number, number] = [\n    0,\n    durationMap[0],\n    durationMap[0] + durationMap[1],\n];\nconst totalInitialDuration = durationMap.reduce((a, b) => a + b);\n\nconst getDuration = (i: number, speed: number = 1) => {\n    if (i <= 3) {\n        return durationMap[i - 1] / speed;\n    }\n    return 1.2 / speed;\n};\n\nconst getDelay = (i: number, speed: number = 1) => {\n    if (i <= 3) {\n        return delayMap[i - 1] / speed;\n    }\n    return totalInitialDuration / speed + ((i - 4) * 0.75) / speed;\n};\n\nconst pathVariants: Variants = {\n    hide: {\n        opacity: 0,\n        strokeWidth: 0,\n        pathLength: 0,\n    },\n    show: (i: { idx: number; speed: number }) => {\n        const delay = getDelay(i.idx, i.speed);\n        return {\n            opacity: 1,\n            strokeWidth: 16,\n            pathLength: 1,\n            transition: {\n                pathLength: {\n                    delay,\n                    duration: getDuration(i.idx, i.speed),\n                    type: i.idx <= 3 ? undefined : \"spring\",\n                    ease: i.idx <= 3 ? \"linear\" : undefined,\n                    bounce: 0,\n                },\n                opacity: { delay, duration: 0.01 },\n            },\n        };\n    },\n};\n\nconst pathVariantsBackwards: Variants = {\n    hide: {\n        opacity: 0,\n        strokeWidth: 0,\n        pathLength: 1,\n        pathOffset: 1,\n    },\n    show: (i: { idx: number; speed: number }) => {\n        const delay = getDelay(i.idx, i.speed);\n        return {\n            opacity: 1,\n            strokeWidth: 16,\n            pathLength: 1,\n            pathOffset: 0,\n            transition: {\n                pathOffset: {\n                    delay,\n                    duration: getDuration(i.idx, i.speed),\n                    type: i.idx <= 3 ? undefined : \"spring\",\n                    ease: i.idx <= 3 ? \"linear\" : undefined,\n                    bounce: 0,\n                },\n                opacity: { delay, duration: 0.01 },\n            },\n        };\n    },\n};\n\nconst MainLogo = forwardRef(\n    (\n        {\n            shouldShow,\n            speed,\n            brandColor,\n            ...props\n        }: AnimatedUlldLogoProps & { shouldShow: boolean },\n        ref: ForwardedRef<SVGSVGElement>,\n    ) => {\n        return (\n            <motion.svg\n                ref={ref}\n                height=\"100%\"\n                strokeMiterlimit=\"10\"\n                style={{\n                    fillRule: \"nonzero\",\n                    clipRule: \"evenodd\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                }}\n                version=\"1.1\"\n                viewBox=\"0 0 221.59 183.929\"\n                width=\"100%\"\n                xmlSpace=\"preserve\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                animate={shouldShow ? \"show\" : \"hide\"}\n                initial={props.noAnimate ? \"show\" : \"hide\"}\n                {...props}\n            >\n                <defs />\n                <g id=\"Layer-1\">\n                    <motion.path\n                        d=\"M91.989 40.1446L90.7736 139.37\"\n                        fill=\"none\"\n                        stroke=\"hsl(var(--foreground))\"\n                        strokeLinecap=\"butt\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"16\"\n                        variants={pathVariants}\n                        custom={{\n                            idx: 4,\n                            speed: speed,\n                        }}\n                    />\n                    <motion.path\n                        d=\"M120.908 40.1446L119.692 139.37\"\n                        fill=\"none\"\n                        stroke=\"hsl(var(--foreground))\"\n                        strokeLinecap=\"butt\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"16\"\n                        variants={pathVariants}\n                        custom={{\n                            idx: 5,\n                            speed,\n                        }}\n                    />\n                    <g opacity=\"1\">\n                        <motion.path\n                            d=\"M67.3056 15.6927L66.0902 143.268\"\n                            fill=\"none\"\n                            stroke={brandColor ? \"#0ba5e9\" : \"hsl(var(--primary))\"}\n                            strokeLinecap=\"butt\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"16\"\n                            variants={pathVariantsBackwards}\n                            custom={{\n                                idx: 3,\n                                speed,\n                            }}\n                        />\n                        <motion.path\n                            d=\"M25.7161 15.6927L24.5007 143.268\"\n                            fill=\"none\"\n                            stroke={brandColor ? \"#0ba5e9\" : \"hsl(var(--primary))\"}\n                            strokeLinecap=\"butt\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"16\"\n                            variants={pathVariants}\n                            custom={{ idx: 1, speed }}\n                        />\n                        <motion.path\n                            d=\"M66.0902 143.268C66.0902 154.619 56.7801 163.821 45.2955 163.821C33.8109 163.821 24.5007 154.619 24.5007 143.268\"\n                            fill=\"none\"\n                            stroke={brandColor ? \"#0ba5e9\" : \"hsl(var(--primary))\"}\n                            strokeLinecap=\"butt\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"16\"\n                            variants={pathVariantsBackwards}\n                            custom={{ idx: 2, speed }}\n                        />\n                    </g>\n                    <g opacity=\"1\">\n                        <motion.path\n                            d=\"M147.009 40.1446L145.794 139.37\"\n                            fill=\"none\"\n                            stroke=\"hsl(var(--foreground))\"\n                            strokeLinecap=\"butt\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"16\"\n                            variants={pathVariantsBackwards}\n                            custom={{ idx: 6, speed }}\n                        />\n                        <motion.path\n                            d=\"M151.704 48.0826C179.105 48.0826 201.317 66.7409 201.317 89.7571C201.317 112.773 179.105 131.432 151.704 131.432\"\n                            fill=\"none\"\n                            stroke=\"hsl(var(--foreground))\"\n                            strokeLinecap=\"butt\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"16\"\n                            variants={pathVariants}\n                            custom={{ idx: 7, speed }}\n                        />\n                    </g>\n                </g>\n            </motion.svg>\n        );\n    },\n);\n\nconst useInViewOrShow = (\n    ref: RefObject<Element>,\n    show: boolean | undefined,\n    noAnimate: boolean = false,\n) => {\n    if (noAnimate) {\n        return [true, (v: boolean) => { }] as [boolean, (v: boolean) => void];\n    }\n\n    const inView = useInView(ref);\n    const [shouldShow, setShouldShow] = useState(\n        (typeof show === \"boolean\" ? show : inView) || false,\n    );\n    useEffect(() => {\n        if (typeof show === \"boolean\") {\n            setShouldShow(show);\n        } else {\n            setShouldShow(inView);\n        }\n    }, [show, inView]);\n    return [shouldShow, setShouldShow] as [boolean, (v: boolean) => void];\n};\n\nexport const AnimatedUlldLogo = (props: AnimatedUlldLogoProps) => {\n    const {\n        show,\n        delay,\n        useInView: shouldUseView,\n        h1,\n        suffix,\n        suffixDelay = 0,\n        noAnimate\n    } = props;\n    const ref = useRef<SVGSVGElement>(null!);\n    const [shouldShow, setShouldShow] = useInViewOrShow(ref, show, noAnimate);\n    useEffect(() => {\n        if (typeof show !== \"boolean\") return;\n        if (show && delay) {\n            setTimeout(() => {\n                setShouldShow(true);\n            }, delay);\n            return;\n        }\n        setShouldShow(show);\n    }, [show, shouldUseView]);\n\n    if (h1 || suffix) {\n        return (\n            <div\n                className={\n                    \"w-full text-4xl md:text-5xl flex flex-row justify-center items-center\"\n                }\n            >\n                <MainLogo\n                    {...props}\n                    className={\"w-auto h-12 lg:h-16\"}\n                    shouldShow={shouldShow}\n                />\n                {suffix && (\n                    <>\n                        {suffix.split(\"\").map((l, i) => (\n                            <motion.span\n                                initial={\"hide\"}\n                                animate={shouldShow ? \"show\" : \"hide\"}\n                                variants={{\n                                    hide: {\n                                        opacity: 0,\n                                        scale: 0,\n                                        y: 30,\n                                    },\n                                    show: {\n                                        opacity: 1,\n                                        scale: 1,\n                                        y: 0,\n                                    },\n                                }}\n                                transition={{\n                                    delay: suffixDelay + i * 0.15,\n                                }}\n                                key={`logo-suffix-${i}`}\n                            >\n                                {l}\n                            </motion.span>\n                        ))}\n                    </>\n                )}\n            </div>\n        );\n    }\n    return <MainLogo {...props} shouldShow={shouldShow} />;\n};\n\nAnimatedUlldLogo.displayName = \"AnimatedUlldLogo\";\n"]}