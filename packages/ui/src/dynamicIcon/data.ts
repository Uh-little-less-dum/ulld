import dynamicIconImports from "lucide-react/dynamicIconImports"
import { IconNameList } from "./types"

export const internalIconNames = [
    "bibliography",
    "bookmarks",
    "bug",
    "code",
    "data",
    "download",
    "fitness",
    "focus",
    "idea",
    "important",
    "journal",
    "latex",
    "math",
    "paperPdf",
    "physics",
    "physicsData",
    "quicknote",
    "readingList",
    "recipe",
    "researchPapers",
    "schedule",
    "settings",
    "shoppingList",
    "snippet",
    "tags",
    "tech",
    "todolist",
    "images",
    "avatar",
    "darktoggle",
] as const


export const internalLogoIconNames = [
    "css",
    "github",
    "kotlin",
    "markdown",
    "node",
    "npm",
    "python",
    "react",
    "swift",
    "vercel",
    "youtube",
] as const



export const iconNameMap: { [k in IconNameList]: keyof typeof dynamicIconImports | false } = {
    plain: false,
    bibliography: "library",
    bookmarks: "bookmark",
    bug: "bug",
    code: "code",
    data: "database",
    download: "folder-down",
    fitness: "dumbbell",
    focus: "glasses",
    idea: "lightbulb",
    important: "alert-circle",
    journal: "pencil-line",
    latex: "function-square",
    math: "sigma",
    paperPdf: "file-text",
    physics: "atom",
    physicsData: "bar-chart-big",
    quicknote: "sticky-note",
    readingList: "book-open-check",
    recipe: "utensils",
    researchPapers: "microscope",
    schedule: "calendar-check",
    settings: "settings",
    shoppingList: "shopping-basket",
    snippet: "terminal",
    tags: "hash",
    tech: "cpu",
    todolist: "list-todo",
    darktoggle: "moon-star",
    images: "image",
    avatar: "circle-user-round",
    info: "info",
    note: "pen",
    tip: "hand",
    faq: "help-circle",
    abstract: "scroll-text",
    todo: "list-todo",
    success: "thumbs-up",
    warn: "alert-triangle",
    fail: "thumbs-down",
    example: "microscope",
    quote: "quote",
    cite: "book-marked",
    equation: "variable",
    definition: "book",
    practice: "line-chart"
}

